<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
<channel>
  <title>ピカピカピ</title>
  <atom:link href="https://pikapikapikaori.github.io/pikapikapi-blog/pikapikapi-blog-rss.xml" rel="self" type="application/rss+xml" />
  <link>https://pikapikapikaori.github.io/pikapikapi-blog</link>
  <description>Don't worry, be happy.</description>
   
  <entry>
    <title><![CDATA[再看巴门尼德与笛卡尔：从「是」谈起]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Phila-20241127</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Phila-20241127</guid>
    <content type="html"><![CDATA[<h1id="再看巴门尼德与笛卡尔从是谈起">再看巴门尼德与笛卡尔：从「是」谈起</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Phila-20241127/cover-picture.jpg" alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.11.27<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>本篇谈谈近来对「是」，暨英语中“being”概念的新理解。我们知道巴门尼德在《论自然（<ruby class='minority-language-font-ruby'>Περὶφύσεως</ruby>）》中的名言：</p><blockquote><p><ruby class='minority-language-font-ruby'>ἔστιν γὰρ εἶναι, μηδὲν δ᾽οὐκ ἔστιν.</ruby></p></blockquote><p>对应的翻译见下。其中，拉丁文用法引自穆尔贝克的威廉对亚里士多德《形而上学》的译文，后半句为对本句的译文：</p><blockquote><p>Necesse est enim dicere et cogitare esse ens; nam esse est, non ensautem non est.<br />For being is, and non-being is not.<br />存在するものは存在し、存在しないものは存在しない。</p></blockquote><p>同样著名的对这一概念的直接运用在于笛卡尔“我思故我在”：</p><blockquote><p>Cogito, ergo sum.</p></blockquote><h2 id="esse">Esse</h2><p>近来对拉丁文的学习，笔者特别注意到了对“esse”一词的特殊使用。作为表达「是」的连系动词，古罗马哲学家、诗人却有大量对其的单独使用，正如上文笛卡尔的使用，以及穆尔贝克的威廉译文中的使用一样。具体的，我们可以随便看一些经典名句：</p><blockquote><p>Non ille diu vixit, sed diu fuit. — Seneca<br />Sumus, ergo vivimus. — Seneca<br />Non es, si non intelligis. — Boethius<br />Fui, ergo existo. — Cicero</p></blockquote><p>关于其含义，以及其与“existere”之间的关系可以参见以下对其不定式形态的名词性用法：</p><blockquote><p>Esse sine actu non potest; nam id quod non agit, nec existere potest.— Boethius<br />Existere est quoddam esse determinatum. — Thomas Aquinas<br />Esse est percipi. — Augustinus</p></blockquote><p>这种用法是不在如今的中文、英语甚至于日文中出现的。无论是「我是」又或是“Iam”，包括最喜欢使用省略的日文中的「私は・私が」都不像是一个完整的句子，而更接近于省去补语的应答用语。很难想象其会单独出现在没有提示补语的上下文语境中。</p><p>那么什么是这个「是」呢？从分哲的角度上看，大抵可以视为是集合/元素与集合/元素间的相等、属于、子集的关系，又或者是命题与命题间的等价与蕴含关系。语言上讲，中文中「是」古来就可作为表判断的谓词使用，一如英语中的“be”。类似的谓词包含「为」、「谓」等。日文中的语助词「は・が」虽有侧重点上的区别，但大体也起这种表判断的作用。如果考虑其作为谓词而非名词的使用场景（注意“being”概念已经在使用形容词性的分词来暗示名词性所指了），其都无法涵盖（甚至不包含）拉丁文中“esse”的那层不同于「存在」但提示「存在」的含义。</p><p>从阿奎纳哪里我们也可以看到，“existere”是如此特殊的一种“esse”，以至于他甚至连用了“-dam”和“determinatum”两个表确定含义的词/后缀来指示。换言之，「存在」，被认为是那个所「是」的那个确定的东西了。塞内卡“Nonille diu vixit, sed diufuit.”一句中，我们也可以清楚看到他对完成时的有趣使用。这里的“活”对我们而言几乎就可以被类比于「存在」了。类似的用法在西塞罗的“Fui,ergoexisto.”一句中，谓词「是」同样使用了完成时：“我是过，所以我现在存在”。</p><p>可以这么理解：一个在某个时间点不「存在」的东西，它却可以在其他的时间点「存在」。然而某个在某个时间点不「是」的东西，却不可能在其他时间点「是」。如若不然，它就已经「是」在那个时间点中的，它所「是」的东西了。用拉丁语来表达可能更清晰一些：</p><p>Ille quod non est non fuisse potest, aut esse, aut fore (futurumesse), nam nisi, est in tempore praeterita quod antea fuit, aut intempore futura quod postea erit.</p><p>也因而，巴门尼德的那句话也许译成“是者是，而不是者不是”更准确一些，正如穆尔贝克的威廉翻译的那样：“Esseest, non ens autem nonest.”。有趣之处在于这里前者使用了名词性的不定式形式而后者使用了形容词性的现在时主动态分词形式，当然也可能是出于丰富性的考量。至于对古希腊语文本本身的分析与思考，要待笔者学习古希腊语之后再研究了。</p>]]></content>
    <pubDate>Wed, 27 Nov 2024 10:21:55 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[季度印象最深刻单集 2024.07]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/SeasonBest-202407-20240721</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/SeasonBest-202407-20240721</guid>
    <content type="html"><![CDATA[<h1 id="季度印象最深刻单集-2024.07">季度印象最深刻单集 2024.07</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202407-20240721/cover-picture.jpg"alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.10.07<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2id="杖と剣のウィストリア-1-一振りの剣つるぎのように">「杖と剣のウィストリア」#1 「一振りの剣つるぎのように」</h2><blockquote><p>播出时间：2024.07.07</p></blockquote><p>并不是说文本写的多么的好而是纯粹的以超高质量的作画演出夺得最大亮点，美术和摄影的处理也都恰到好处。张力、力度感和速度感都能在高张数下直观地感受到，而哪怕是其他的对话场面都有仔细地处理人物演技。高张数和吉原式的拖影给观看体验带来的提升无疑是巨大的。</p><h2 id="小市民シリーズ-2-おいしいココアの作り方">「小市民シリーズ」 #2「おいしいココアの作り方」</h2><blockquote><p>播出时间：2024.07.13</p></blockquote><p>应该说是很有米澤味的日常推理故事吧，但最难能可贵的反而是这份日常。并不是像#1那样进行过多的省略以快速推进主线，本集悠闲地只对几杯热可可做推理分析这个情节比重的设置本身应该可以说是与「冰菓」一脉相承的。另一方面，推理本身呈现的过程却从某种意义是与「冰菓」彻底走向两个极端的，大量主观镜头的使用和台本量的减少使得推理过程融入了人物和动作之中，生动性与趣味性兼具的同时有力避免了大量文本可能导致的枯燥。尽管如此相承自上一集的本集放到动画整体之中去看节奏变化就有些太微妙了。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202407-20240721/picture-2.jpg"alt="小市民" /><figcaption aria-hidden="true">小市民</figcaption></figure><h2id="物語シリーズ-オフモンスターシーズン-3-撫物語-第零話-なでこドロー-其ノ貮">「〈物語〉シリーズオフ&amp;モンスターシーズン」 #3 「撫物語 第零話 なでこドロー其ノ貮」</h2><blockquote><p>播出时间：2024.07.20</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202407-20240721/picture-3.jpg"alt="物语系列" /><figcaption aria-hidden="true">物语系列</figcaption></figure><p>物语系列最新作或者说是对本篇系列彻底的补完，极具新房特色的演出本身从#1开始就已然回归，同时保持了系列一贯的突出效果。而放到本集才说更在于本集OP部分的出色，人物运动的风格与本篇完全不同，落于了写实的、具有自然感的生活片段。作画上的突出更是不必多说了。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202407-20240721/picture-1.jpg"alt="物语系列" /><figcaption aria-hidden="true">物语系列</figcaption></figure><h2id="負けヒロインが多すぎる-2-約束された敗北を君に">「負けヒロインが多すぎる！」#2 「約束された敗北を君に」</h2><blockquote><p>播出时间：2024.07.20</p></blockquote><p>出色的 OP，出色的ED，以及最重要的，作为恋爱喜剧的纯粹的趣味性吧。不在 #1写是因为本集首次出现 OP。OP的高饱和色块带来的强烈冲击，以及人物场景与职员表的交互，单独来看都不少见，但两者都在进一步加强交互与冲击的同时的互相结合带来的是更加欢快的、契合恋爱喜剧名头的氛围。</p><iframe style="aspect-ratio: 16/9;" src="https://www.youtube.com/embed/7GJOBkIgWHc?si=Ek7cARVPWZE772_R" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>ED也同样有设计感。实拍与动画、少量空镜头与大量主观镜头，结合在模拟定格的抽格镜头与模拟赛璐璐的边缘RGB分离的颜色设计之中，极细甚至细到没有了的任务的线条与角色自身的颜色一同跃动着，呼喊着少年少女们的青春。</p><iframe style="aspect-ratio: 16/9;" src="https://www.youtube.com/embed/2czbGCYz6gk?si=a8eyye4xt68A_qM6" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>只能说恋爱喜剧很多，有着不错制作的恋爱喜剧动画片也不少，但在此之上还能有不低的趣味性的、回归趣味本身的就难得一见了吧。</p><h2 id="義妹生活-5-レイトショーとガチなやつ">「義妹生活」 #5「レイトショーとガチなやつ」</h2><blockquote><p>播出时间：2024.08.01</p></blockquote><p>演出设计上相当令人惊喜。从 #1延续下来的强烈的所谓空气感、空气系的风格，室内场景内大量使用极冷静的中远景的客观镜头、空镜头、垮场景的窥视镜头等等，效果音与剧伴的使用上也相当克制。本话演出设计更是令人惊讶，剧中剧的电影内容大量插入，很顺利地与后续场景完成了结构上的互文，而上述延续而来的空气感则在情感上压抑了最高潮处，克制的效果音使得情感真正地点到为止地完成，回味无穷。</p><h2id="物語シリーズ-オフモンスターシーズン-6-撫物語-第零話-なでこドロー-其ノ伍">「〈物語〉シリーズオフ&amp;モンスターシーズン」 #6 「撫物語 第零話 なでこドロー其ノ伍」</h2><blockquote><p>播出时间：2024.08.10</p></blockquote><p>只看动画未看原作的我看完才惊叹：原来竟然是这样的故事吗？作为全部物语的终结，重新开始的物语故事的抚物语，原来与「恋爱サーキュレーション」有着相似节奏与乐句的最终章OP「caramel ribboncursetard」就已经在暗示本篇内容了。抚子最后和解的片段实在是做得太好了。</p><iframe style="aspect-ratio: 16/9;" src="https://www.youtube.com/embed/yhL7GvLbSyw?si=_spcI0sd_0MJkWW4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h2 id="義妹生活-9-義妹と日記">「義妹生活」 #9 「義妹と日記」</h2><blockquote><p>播出时间：2024.08.29</p></blockquote><p>可能是本季度最佳单集，绝对的出色演出。几处优雅的互文、讲究的伏笔以及点题就已经显出了功力。历经三分之二篇幅下来的压抑的、烦闷的室内情景与压抑但越发难以抑制的情感本该在本集得到一个宣泄的出口，但对出口或者说结果的悬置恰好更符合了本作的真正主题。身份与关系性自然的转变只能通过称呼上的转变暗示，同时这份暗示也成为对情感宣泄出口的阻隔。现在看来这种处理可能在#5 就已经有所预演了。</p>]]></content>
    <pubDate>Mon, 7 Oct 2024 01:54:26 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[实用网站快速链接]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/UsefulWebsites</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/UsefulWebsites</guid>
    <content type="html"><![CDATA[<h1 id="实用网站快速链接">实用网站快速链接</h1><blockquote><p>本篇主要记录一些比较实用的网站等</p></blockquote><h2 id="影视书籍游戏资源等">影视书籍游戏资源等</h2><h3 id="离线存储">离线存储</h3><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="http://dmhy.org">动漫花园</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画、日剧为主</td></tr><tr class="even"><td style="text-align: center;"><a href="https://nyaa.si">Nyaa</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主，外站</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://mikanani.me">MikanProject</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主，支持 RSS</td></tr><tr class="even"><td style="text-align: center;"><a href="https://acg.rip">ACGRIP</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://share.acgnx.se">末日动漫</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="even"><td style="text-align: center;"><ahref="http://www.comicat.org">漫猫动漫</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://www.miobt.com">MioBT</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://bangumi.moe">萌番组</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://eztvx.to/home">EZTV</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">美剧为主，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www2.rarbggo.to">RARBG</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">电影、美剧为主，外站</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://yts.mx">YTS</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">电影为主，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://moviejie.net">电影街</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">电影为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://13dl.me/home/">13DL</a></td><td style="text-align: center;">云盘</td><td style="text-align: center;">漫画为主，日站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://kox.moe">Kox.moe</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">漫画为主，台站</td></tr><tr class="odd"><td style="text-align: center;"><a href="http://libgen.rs">LibraryGenesis</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">书籍资料，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://fitgirl-repacks.site">FitGirl Repacks</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">游戏为主，外站</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.skidrowcodex.net">SKIDROWCODEX.NET</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">游戏为主，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://oda.lzacg.one">量子ACG</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字 ACG 游戏为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://pan.jlbx.xyz">姬路白雪の资源小站</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字 ACG 游戏为主</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://zi0.cc">梓澪の妙妙屋</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字 ACG 游戏为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.shinnku.com">失落小站</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字 ACG 游戏为主</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://2dfan.com">2DFan</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字 ACG 游戏为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://retropc.net/alice/">Alicesoft</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">Alicesoft 官方老游戏，日站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://bbs.kfpromax.com/">绯月ScarletMoon</a></td><td style="text-align: center;">论坛</td><td style="text-align: center;">文字 ACG 游戏综合论坛，含资源</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.aixgame.cc">2dj</a></td><td style="text-align: center;">论坛</td><td style="text-align: center;">文字 ACG 游戏综合论坛，含资源</td></tr><tr class="even"><td style="text-align: center;"><ahref="http://www.k73.com/down/3ds/list-81-2.html">k73资源网</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">老游戏 ROM</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://romsfun.com">ROMSFUN</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">老游戏 ROM，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://archive.org/download/3ds-cia-eshop">INTERNET ARCHIVE 3dscia</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">3DS CIA，外站</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.ggbases.com">GGbases</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">游戏综合，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.hacg.mov">琉璃神社</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">ACGN 综合资源</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.jiumodiary.com">鸠摩搜索</a></td><td style="text-align: center;">聚合搜索</td><td style="text-align: center;">书籍资料搜索</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.btdig.com">BTDigg</a></td><td style="text-align: center;">BT 聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://kickass.sx">KickAss</a></td><td style="text-align: center;">BT 聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.tpbproxypirate.com">Pirate Bay</a></td><td style="text-align: center;">BT 聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.1337x.tw">1377x</a></td><td style="text-align: center;">BT 聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.magnetdl.com">MagnetDL</a></td><td style="text-align: center;">BT 聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr></tbody></table><h3 id="在线阅览">在线阅览</h3><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://www.manhuagui.com">漫画柜</a></td><td style="text-align: center;">在线阅读</td><td style="text-align: center;">漫画为主</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://dogemanga.com">漫画狗</a></td><td style="text-align: center;">在线阅读</td><td style="text-align: center;">漫画为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://e-hentai.org/">Ex-h</a></td><td style="text-align: center;">在线阅读、下载</td><td style="text-align: center;">漫画、画集</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://nhentai.net">N-h</a></td><td style="text-align: center;">在线阅读、下载</td><td style="text-align: center;">漫画、画集</td></tr></tbody></table><h2 id="资料">资料</h2><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="http://duobaoxiang.ysepan.com">ACG情报交流</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">ACG 资料整理</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.sakugabooru.com">SAKUGABOORU</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">作画片段信息</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://w.atwiki.jp/sakuga/">作画wiki</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">作画资料</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://w.atwiki.jp/enshutsu/">演出wiki</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">演出资料</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://www.inouejet.com/camera/">アニメ用語</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画用语辞典</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://blog.sakugabooru.com">SAKUGABLOG</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">作画信息</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://80s-ova.com">80年代のOVA</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画介绍推荐</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.getchu.com">Getchu</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">ACGN 发售信息</td></tr><tr class="odd"><td style="text-align: center;"><a href="http://m-p.sakura.ne.jp">MoonPhase</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画信息</td></tr><tr class="even"><td style="text-align: center;"><ahref="http://animestyle.jp">WEBアニメスタイル</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画资料</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://www.style.fm/as/index_old.shtml">WEBアニメスタイル（旧）</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画资料</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://animeanime.jp">アニメ！アニメ！</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画资料</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://aja.gr.jp">日本動画協会</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画产业资料</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://bgmlist.com">番组放送</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画放送信息汇总</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://erogamescape-dyndns-org.translate.goog/~ap2/ero/toukei_kaiseki/?_x_tr_sch=http&amp;_x_tr_sl=ja&amp;_x_tr_tl=en&amp;_x_tr_hl=zh-CN&amp;_x_tr_pto=op">批评空间</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">文字 AVG 游戏鉴赏，<ahref="https://erogamescape.dyndns.org">原站</a></td></tr><tr class="even"><td style="text-align: center;"><ahref="https://docs.qq.com/sheet/DYUVBVUVvSUlkSVFE?tab=BB08J2">文姐书籍目录</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">文姐扫描书籍</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://anitabi.cn">动画巡礼 -anitabi</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动漫巡礼资料</td></tr><tr class="even"><td style="text-align: center;"><a href="https://trace.moe">Anime SceneSearch</a></td><td style="text-align: center;">ACGN 工具</td><td style="text-align: center;">动画截图搜索</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://www.iqdb.org">Multi-service image search</a></td><td style="text-align: center;">ACGN 工具</td><td style="text-align: center;">动画截图搜索</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://nulla2011.github.io/sysx/">女声优拼音缩写查询</a></td><td style="text-align: center;">ACGN 工具</td><td style="text-align: center;">女声优拼音缩写查询</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.pogdesign.co.uk/cat/">TV Calendar</a></td><td style="text-align: center;">影视资料</td><td style="text-align: center;">欧美剧集放送信息汇总</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.gematsu.com">GEMATSU</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">游戏平台信息</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://ocg-rule.readthedocs.io/zh-cn/latest/">OCG Rule</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">YGO OCG 规则</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.ygo-sem.cn/index.html">YGO-Engine</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">YGO 卡组</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://www.qi-wmcard.com">Yugioh(OCG) card list ＆ news</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">YGO 卡查</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.ourocg.cn">OurOCG</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">YGO 卡查</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://bbs.newwise.com/thread-955986-1-1.html">【WIXOSS】入门及规则介绍</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">WIXOSS 规则</td></tr><tr class="even"><td style="text-align: center;"><ahref="http://yabejp.web.fc2.com/mahjong/index.html">現代麻雀技術論</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">麻将技巧</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://beginners.biz">麻雀戦術書「ビギナーズラック」</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">麻将技巧</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.meti.go.jp">経済産業省のWEBサイト（METI/経済産業省）</a></td><td style="text-align: center;">综合资料</td><td style="text-align: center;">日本经济产业报告</td></tr></tbody></table><h2 id="其他导航站">其他导航站</h2><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://www.miaoaaa.com">ACG喵导航</a></td><td style="text-align: center;">ACGN 网站导航</td><td style="text-align: center;">ACGN 网站导航</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.acgbox.link">ACG盒子</a></td><td style="text-align: center;">ACGN 网站导航</td><td style="text-align: center;">ACGN 网站导航</td></tr></tbody></table><h2 id="其他">其他</h2><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://github.com/Jackett">Jackett</a></td><td style="text-align: center;">BT 聚合搜索服务源码</td><td style="text-align: center;">影视类 BT 聚合搜索，需自行部署</td></tr></tbody></table>]]></content>
    <pubDate>Fri, 13 Sep 2024 18:37:49 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[软件项目实践的一些思索与后期优化方向：设计、开发以及其他]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/archive/ITtech/SoftwareInsights-20230428</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/archive/ITtech/SoftwareInsights-20230428</guid>
    <content type="html"><![CDATA[<h1id="软件项目实践的一些思索与后期优化方向设计开发以及其他">软件项目实践的一些思索与后期优化方向：设计、开发以及其他</h1><blockquote><p>本文首发于个人博客<br />发表日期：2023.04.28<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>大四下最后的一门课也结束了。这门课大体是由数个人组成一个小小团体进行一个小小项目从零到一的完整开发过程，不同于其他课程，这个项目要求以类似于实际开发的模式，让所有参与者都经历由需求确定、初期架构设计到中期开发、版本发布甚至于是需求变更以及迭代的完整软件开发的整个生命周期。当然其中也包括不同团队间的沟通协商。</p><p>大体而言我在其中以项目经理、架构设计、团队 Leader等各种身份参与了后端的完整开发，并也作为开发者参与到了前端部分的开发任务中。个人从中确实有不少感悟，故而写此文记录。在这里主要想谈谈设计、开发的一些感想，诸如进度管理、质量把控等等可能也略有涉及。</p><h2 id="项目背景">项目背景</h2><p>大体而言这个课程项目要求做一个宠物医院的线上学习平台，主要受众大概就是即将毕业或是正在大学学习的兽医相关专业的学生。其功能简要来讲大概有这么几类：</p><ul><li>用户管理与鉴权：常规的大系统都有的功能，这里大体上就分为管理员、出题的老师和进行学习的学生三类用户。</li><li>一个完整医院的 3D全景地图与导览模型：前端开发为主的功能，本文不涉及。</li><li>系统管理：要求对这个宠物医院内诸如药物、档案、收费项目、各类检查项目、住院者的信息等等各类内容进行管理，不过这个东西似乎没有在需求文档中体现出实际的意义与用处。</li><li>病例管理：大体上是需要把来医院就诊过的各类病例收集起来存储，其包括从入院诊断、具体检查到诊断结果与治疗方案等全过程的文字图片视频信息，当然也包括得的病的信息。</li><li>测试管理：由病例管理上游的疾病部分内容衍生而来。老师根据疾病生成题库，并从中选题整理为试卷。学生则参加考试进行答题。不过这部分内容似乎与虚拟宠物医院没有太大关系。</li><li>职能学习：一方面是让学生去学习疾病的相关知识（当然要看文字图片视频），一方面学生也可以通过看文字图片视频学习医院内各类角色（医生、医助等等）的具体操作内容。</li><li>数据管理：和上面提到的图片视频的存储有关。需求上还挺麻烦的，视频格式支持太多还需要进行视频的格式转换，反应到和用户的交互上来说还需要实现分块上传等功能等。</li></ul><p>尽管后文对具体业务尽量不会涉及，但姑且将背景记于这里。不难看出这个项目还是一个比较传统的要用到数据库后端前端三个维度的项目，因而后文也主要想从这三个维度的设计与开发两方面来聊聊。</p><p>项目可以参考：</p><ul><li><ahref="https://github.com/SoftwareDevelopmentPractice6/virtualPetHospital-backend">后端</a></li><li><ahref="https://github.com/SoftwareDevelopmentPractice6/virtualPetHospital-frontend">前端</a></li></ul><p>源码也可以在下面下载：</p><ul><li><ahref="archive/ITtech/_media/SoftwareInsights-20230428/virtualPetHospital-backend-master.zip"title=":ignore">后端</a></li><li><ahref="archive/ITtech/_media/SoftwareInsights-20230428/virtualPetHospital-frontend-main.zip"title=":ignore">前端</a></li></ul><h2 id="设计">设计</h2><p>由于课程要求重各类文档，因而并没有采取如今主流的敏捷开发模式，而是采取的<a href="#RAD">RAD</a>模型。个人来讲其实并不是很习惯这个模型，一方面其由瀑布式改进而来，从某种角度上还是非常重文档和前期的设计的，对需求的变更与过程中的变化并不敏感，另一方面也是因此在开发过程中的抗风险能力也非常依赖于前期的设计以及开发过程中的质量，由此带来的风险是非常恐怖的。</p><p>总之也是因此在进行前期设计时就花了相当多的时间。然而尽管如此，初期的设计还是有着比较大的漏洞，因而也给后期开发带来了一些麻烦。这些问题大多集中在数据库设计上。</p><h3 id="数据库设计">数据库设计</h3><p>由于项目较为庞大因而一些细节的设计我也没有来得及能够去亲自把控，而是交给了同组的其他人。在这里就出了问题。上文所述的测试管理中，题库中的问题需要记录与其相关的问题类别（属于哪种病）、问题类型（单选多选）、问题内容等等。针对此负责这块内容的组员A 给出了这样的设计：</p><pre class="mermaid"><code>erDiagramExam {int exam_id PKstring exam_name}Paper {int paper_id PKstring paper_nameint exam_id FKstring durationstring total_score}Question {int question_id PKstring question_contentstring question_typeint category_id FK}Category {int category_id PKstring category_name}ExamSession {int session_id PKint paper_id FKtime start_timetime end_time}StudentResult {int result_id PKint session_id FKint student_idint score}Exam ||--|| Paper : relatePaper ||--|| ExamSession : relateQuestion }o--|| Category : containsExamSession ||--o{ StudentResult : relate</code></pre><p>且不谈同学A遗漏了需要对每张卷子上包含的题目、以及每位学生在试卷上答题所做出的回答进行存储的功能，单看<code>Question</code> 与 <code>Category</code>两张表。乍一看虽然是挺合理的设计，然而后者的实际有效字段只有<code>category_name</code>一栏。我不否认在大型项目中这样设计的合理性，但是考虑到这个项目的规模、以及后续可能会进行的功能上的拓展，我个人看来<code>Category</code> 这张表完全冗余的。</p><p>另一方面，<code>Exam</code>、<code>Paper</code>、<code>ExamSession</code>这三张一对一的表虽然也是很符合设计原则的设计，但是同样考虑到项目规模与未来可能的拓展，这三张表就算合在一起也不会对性能与吞吐量带来很大的负担。一般来讲，只有在表中有一栏以上可能包含大量空值的情况下，或是某一些栏可能被频繁更新时，一对一关系的设计才相对合理。而在当前的情形中，这样的设计则是给后期撰写<code>SQL</code>与开发上带来了巨大的麻烦。且不谈数据的整合与处理，仅仅是外键的存在就已经带来了巨大的麻烦。这也直接导致了在后期初始化数据<code>SQL</code>撰写上耗费了大量Debug的时间，在开发的编码中也需要增加大量检测外键存在性的不必要代码。</p><h3 id="后端架构设计">后端架构设计</h3><p>初期设计时我就已经敲定了<ahref="#微服务">微服务</a>的架构。通常，微服务确实不适合于本项目这样的小型项目：配置麻烦、DevOps麻烦，等等。此外，大型项目中服务间数据一致性以及安全性都是非常棘手且关键的问题。</p><p>不过事实上，我其实很看重松散耦合这一点。其给后期开发与迭代过程中带来的自由度是相当大的。前述的问题，如配置、DevOps的确相对棘手，不过包含公用模块、各类插件的配置在初期完成后便一了百了，运维上利用Docker与统一的脚本进行自动化管理也是一经配置后就极易使用的，并没有给开发人员带来很高的成本。倘若有购买服务器配置Jenkins 进行更多的自动化的话，相关成本应该还能进一步降低。</p><p>实践中，jacoco、spotless、公共模块的配置实质上也仅仅耗费了我半天的时间，而后期部署时自动化测试脚本的编写仅仅耗费了我两个小时不到的时间。接口测试上所花费的时间略多一点，不过由于接口测试脚本基本是直接由swagger 生成的，因而也没有耗费太多的成本。</p><p>相较于这些仅局限于初期和末期的麻烦而言，微服务架构带来的好处是实打实巨大的。数据库与模块的分离带来的是各模块开发的高独立性以及运行时的高可用性。前文所提到的数据库尽管经常会碰到组员产生的Bug，但分离的数据库使得其余的几个模块并没有受到影响从而能够很顺利的进行开发。另一方面，后端模块的分离使得几个模块都能够被快速地开发出来，也因此能够较早地将接口给到前端，从而留出了大量可用于迭代的时间。产生缺陷时查找定位的范围仅仅在自身的子系统内，因而定位缺陷的成本也略有降低。而最最重要的，由于模块间的松散耦合，即使一个服务失败其他服务也能够继续工作，这给开发与测试都带来了相当程度上的便捷。</p><p>更具体的，微服务给实践中的开发带来了巨大的便捷性。我在项目中大概采取了下图的架构：</p><pre class="mermaid"><code>flowchart LR    subgraph backend        subgraph modules            direction TB            subgraph module 1                direction LR                entity1 --&gt; dao1 --&gt; service1 --&gt; controller1            end            subgraph module 2                direction LR                entity2 --&gt; dao2 --&gt; service2 --&gt; controller2            end            subgraph module 3                direction LR                entity3 --&gt; dao3 --&gt; service3 --&gt; controller3            end            subgraph module 4                direction LR                entity4 --&gt; dao4 --&gt; service4 --&gt; controller4            end        end        subgraph intermediator            direction LR            servicei --&gt; controlleri        end        controller1 --&gt; servicei        controller2 --&gt; servicei        controller3 --&gt; servicei        controller4 --&gt; servicei    end    subgraph database        databse1 --&gt; entity1        databse2 --&gt; entity2        databse3 --&gt; entity3        databse4 --&gt; entity4    end    controlleri --&gt; frontend</code></pre><p>作为微服务而言其实也是非常常见与合理的架构。中间层充当网关的角色被外部服务（前端）统一调用，其内部则再根据具体的调用请求来选择合适的服务进行通信，并将数据进行处理后转发给外部服务。在实践中，前端组与后端组同时开发，需求细节与开发细节还不明了的情况下，接口的内容与种类尽管可以大体确定，但具体的数据内容与种类等都是难以确定的。因而，利用中间层也即网关这一角色，接口确定的难题得以被解决。前后端可以先按照自己的想法对接口进行设计与模拟，当有一定的进度、对接口需求更加明确时再利用中间层进行数据的整合与处理，从而节约了大量沟通与修改的时间。</p><pre class="mermaid"><code>sequenceDiagram    Frontend-&gt;&gt;+Intermediator: Request    Intermediator-&gt;&gt;+Module: Processed Request    Module--&gt;&gt;-Intermediator: Response    Intermediator--&gt;&gt;-Frontend: Processed Response</code></pre><p>实践上，数据的转发与整合可以由后端的网关接管，也可以由前端利用 nodejs来开发，无论哪种都是非常灵活的。事实上，nodejs 构建的中间层或称 node层的出现，就是为了让前后端都更关注于业务本身。尽管层数的增加可能会给性能带来一些影响，然而这与开发效率所节省的成本相比是微乎其微的。由过去后端渲染html发送给浏览器的前后端不分离，到前后端分离开发再到中间层的进化，我想这是一个相当自然的过程，也非常值得去学习与应用。</p><p>此外，采取微服务架构，后期的扩展性也是相当高的。一方面，需要增加新业务时可以直接以模块为单位进行添加，而不需要再去对原有代码进行改动。另一方面，甚至也可以将同一服务运行在多台服务器上，并利用Eureka、Ribbon等等组件进行负载均衡与健康检查的功能，从而能够进一步提升可用性与性能，这些都是单体应用难以带来的好处。</p><p>当然，微服务的思想也能直接应用到前端上，也就是前些年提出的<ahref="#微前端">微前端</a>的思想。似乎前端组也有利用这一思想进行开发，不过本文就先不作赘述了。</p><h2 id="开发">开发</h2><h3 id="后端开发仍存在的问题">后端开发仍存在的问题</h3><p>开发上后端直接采用了 SpringBoot的四层架构，基本上实现了增删改查四类功能。同时，调数据库方面使用了JPA。</p><p>需求上，为了满足全字段搜索、以及较简单的增删改功能，考虑到开发上的便捷性，查询相关的业务逻辑大体都是采取了下面的写法：</p><div class="sourceCode" id="cb4"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">getFeature</span><span class="op">(</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Integer</span> funcId<span class="op">,</span></span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcName<span class="op">,</span></span><span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcDescription<span class="op">,</span></span><span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcFlow<span class="op">,</span></span><span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcRole<span class="op">,</span></span><span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcTool<span class="op">,</span></span><span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> roomName<span class="op">)</span> <span class="op">{</span></span><span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>    JSONObject res <span class="op">=</span> <span class="kw">new</span> <span class="fu">JSONObject</span><span class="op">();</span></span><span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>    res<span class="op">.</span><span class="fu">put</span><span class="op">(</span></span><span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>            Constants<span class="op">.</span><span class="fu">featureList</span><span class="op">,</span></span><span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>            JSONObject<span class="op">.</span><span class="fu">parseArray</span><span class="op">(</span>JSON<span class="op">.</span><span class="fu">toJSONString</span><span class="op">(</span>featureRepository<span class="op">.</span><span class="fu">findAll</span><span class="op">().</span><span class="fu">stream</span><span class="op">()</span></span><span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>                    <span class="op">.</span><span class="fu">filter</span><span class="op">(</span>feature <span class="op">-&gt;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softEquals</span><span class="op">(</span>funcName<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFuncName</span><span class="op">())</span></span><span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&amp;&amp;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softIncludes</span><span class="op">(</span>funcDescription<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFuncDescription</span><span class="op">())</span></span><span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&amp;&amp;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softIncludes</span><span class="op">(</span>funcFlow<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFuncFlow</span><span class="op">())</span></span><span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&amp;&amp;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softIncludes</span><span class="op">(</span>funcRole<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFuncRole</span><span class="op">())</span></span><span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&amp;&amp;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softEquals</span><span class="op">(</span>funcTool<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFuncTool</span><span class="op">())</span></span><span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&amp;&amp;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softEquals</span><span class="op">(</span></span><span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a>                                    roomName<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFeatureRoom</span><span class="op">().</span><span class="fu">getRoomName</span><span class="op">())</span></span><span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&amp;&amp;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softEquals</span><span class="op">(</span>funcId<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFuncId</span><span class="op">()))</span></span><span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a>                    <span class="op">.</span><span class="fu">collect</span><span class="op">(</span>Collectors<span class="op">.</span><span class="fu">toList</span><span class="op">()))));</span></span><span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>res<span class="op">);</span></span><span id="cb4-23"><a href="#cb4-23" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>先说查询逻辑。为了少写 <code>SQL</code> 因而这里是直接调用了 JPA 的<code>findAll</code> 方法，随后利用 <code>Java</code>的流函数对其进行遍历筛选，由此得到目标结果以返回。判断相等或包含的方法由自建类进行处理，以满足空数值的比较操作，例如：</p><div class="sourceCode" id="cb5"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="dt">static</span> <span class="bu">Boolean</span> <span class="fu">softEquals</span><span class="op">(</span><span class="bu">String</span> toBeJudged<span class="op">,</span> <span class="bu">String</span> referencedValue<span class="op">)</span> <span class="op">{</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">try</span> <span class="op">{</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="op">(</span>Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>toBeJudged<span class="op">,</span> <span class="kw">null</span><span class="op">)</span> <span class="op">||</span> Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>toBeJudged<span class="op">,</span> <span class="st">&quot;&quot;</span><span class="op">))</span></span><span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>                <span class="op">?</span> <span class="kw">true</span></span><span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>                <span class="op">:</span> Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>referencedValue<span class="op">,</span> <span class="bu">URLDecoder</span><span class="op">.</span><span class="fu">decode</span><span class="op">(</span>toBeJudged<span class="op">,</span> Constants<span class="op">.</span><span class="fu">UTF8</span><span class="op">));</span></span><span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">catch</span> <span class="op">(</span><span class="bu">UnsupportedEncodingException</span> e<span class="op">)</span> <span class="op">{</span></span><span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">false</span><span class="op">;</span></span><span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>小型项目中这样的写法大体上是没什么问题的，但如果遇上较大的项目这样的写法绝对会出很大的问题。一来，论谁都能看出的遍历查询的性能问题，在十万级别数据量下大概就能有很直观的感受了，这一工作本来应该在数据库中利用索引来优化解决。二来，大量的吞吐量给服务器带来了IO上巨大负担。其潜在的风险是难以估量的。</p><p>为了在满足需求的基础上尽可能简化开发上的工作量（即少写<code>SQL</code>与对应的函数），我目前的想法是利用正则表达式（例如MySQL中的<code>REGEXP</code>关键字）进行查询，由此将查询的相关工作返还给数据库。利用数据库内部的索引等机制对查询进行优化（MySQL内部索引的 B+树能带来数倍的性能），借此来消除服务器的负担。借由这一方法全字段搜索可以通过唯一的一条<code>SQL</code> 来实现，也符合尽量不写 <code>SQL</code> 的原则。</p><div class="sourceCode" id="cb6"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="co">// Dao 层</span></span><span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="at">@Query</span><span class="op">(</span>value <span class="op">=</span> <span class="st">&quot;SELECT f.* FROM Feature f WHERE (f.name REGEXP :funcNameRegExp) AND (f.description REGEXP :funcDescriptionRegExp)&quot;</span><span class="op">,</span> nativeQuery <span class="op">=</span> <span class="kw">true</span><span class="op">)</span></span><span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a><span class="bu">ArrayList</span><span class="op">&lt;</span>Feature<span class="op">&gt;</span> <span class="fu">findFeatureByRegExp</span><span class="op">(</span><span class="at">@Param</span><span class="op">(</span><span class="st">&quot;funcNameRegExp&quot;</span><span class="op">)</span> <span class="bu">String</span> funcNameRegExp<span class="op">,</span> <span class="at">@Param</span><span class="op">(</span><span class="st">&quot;funcDescriptionRegExp&quot;</span><span class="op">)</span> <span class="bu">String</span> funcDescriptionRegExp<span class="op">);</span></span><span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="co">// Service 层</span></span><span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">getFeature</span><span class="op">(</span></span><span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcName<span class="op">,</span></span><span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcDescription<span class="op">)</span> <span class="op">{</span></span><span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>    <span class="bu">String</span> funcNameRegExp <span class="op">=</span> funcName<span class="op">;</span></span><span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>    <span class="bu">String</span> funcDescriptionRegExp <span class="op">=</span>  <span class="st">&quot;^&quot;</span> <span class="op">+</span> funcName <span class="op">+</span> <span class="st">&quot;$&quot;</span><span class="op">;</span></span><span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>    JSONObject res <span class="op">=</span> <span class="kw">new</span> <span class="fu">JSONObject</span><span class="op">();</span></span><span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a>    res<span class="op">.</span><span class="fu">put</span><span class="op">(</span></span><span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a>            Constants<span class="op">.</span><span class="fu">featureList</span><span class="op">,</span></span><span id="cb6-14"><a href="#cb6-14" aria-hidden="true" tabindex="-1"></a>            JSONObject<span class="op">.</span><span class="fu">parseArray</span><span class="op">(</span>JSON<span class="op">.</span><span class="fu">toJSONString</span><span class="op">(</span>featureRepository<span class="op">.</span><span class="fu">findFeatureByRegExp</span><span class="op">(</span>funcNameRegExp<span class="op">,</span> funcDescriptionRegExp<span class="op">))));</span></span><span id="cb6-15"><a href="#cb6-15" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>res<span class="op">);</span></span><span id="cb6-16"><a href="#cb6-16" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>再说增删改。项目中这些功能的实现大体如下：</p><div class="sourceCode" id="cb7"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="co">// 增</span></span><span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">addExamine</span><span class="op">(</span><span class="bu">String</span> examineName<span class="op">,</span> <span class="dt">double</span> examinePrice<span class="op">,</span> <span class="bu">String</span> roomName<span class="op">)</span> <span class="op">{</span></span><span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">List</span><span class="op">&lt;</span>Examine<span class="op">&gt;</span> targetExamineList <span class="op">=</span> examineRepository<span class="op">.</span><span class="fu">findAll</span><span class="op">().</span><span class="fu">stream</span><span class="op">()</span></span><span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span><span class="fu">filter</span><span class="op">(</span>examine <span class="op">-&gt;</span> Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>examine<span class="op">.</span><span class="fu">getExamineName</span><span class="op">(),</span> examineName<span class="op">))</span></span><span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span><span class="fu">collect</span><span class="op">(</span>Collectors<span class="op">.</span><span class="fu">toList</span><span class="op">());</span></span><span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>targetExamineList<span class="op">.</span><span class="fu">size</span><span class="op">(),</span> <span class="dv">0</span><span class="op">))</span> <span class="op">{</span></span><span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a>        Optional<span class="op">&lt;</span>Room<span class="op">&gt;</span> targetRoomOptional <span class="op">=</span> roomRepository<span class="op">.</span><span class="fu">findById</span><span class="op">(</span>roomName<span class="op">);</span></span><span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>targetRoomOptional<span class="op">.</span><span class="fu">isEmpty</span><span class="op">())</span> <span class="op">{</span></span><span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a>            Examine newExamine <span class="op">=</span> <span class="kw">new</span> <span class="fu">Examine</span><span class="op">();</span></span><span id="cb7-14"><a href="#cb7-14" aria-hidden="true" tabindex="-1"></a>            newExamine<span class="op">.</span><span class="fu">setExamineName</span><span class="op">(</span>examineName<span class="op">);</span></span><span id="cb7-15"><a href="#cb7-15" aria-hidden="true" tabindex="-1"></a>            newExamine<span class="op">.</span><span class="fu">setExaminePrice</span><span class="op">(</span>examinePrice<span class="op">);</span></span><span id="cb7-16"><a href="#cb7-16" aria-hidden="true" tabindex="-1"></a>            newExamine<span class="op">.</span><span class="fu">setExamineRoom</span><span class="op">(</span>targetRoomOptional<span class="op">.</span><span class="fu">get</span><span class="op">());</span></span><span id="cb7-17"><a href="#cb7-17" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-18"><a href="#cb7-18" aria-hidden="true" tabindex="-1"></a>            Examine addedExamine <span class="op">=</span> examineRepository<span class="op">.</span><span class="fu">saveAndFlush</span><span class="op">(</span>newExamine<span class="op">);</span></span><span id="cb7-19"><a href="#cb7-19" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-20"><a href="#cb7-20" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>addedExamine<span class="op">);</span></span><span id="cb7-21"><a href="#cb7-21" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb7-22"><a href="#cb7-22" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb7-23"><a href="#cb7-23" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb7-24"><a href="#cb7-24" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb7-25"><a href="#cb7-25" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span><span id="cb7-26"><a href="#cb7-26" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-27"><a href="#cb7-27" aria-hidden="true" tabindex="-1"></a><span class="co">// 改</span></span><span id="cb7-28"><a href="#cb7-28" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">updateExamine</span><span class="op">(</span><span class="dt">int</span> examineId<span class="op">,</span> <span class="bu">String</span> examineName<span class="op">,</span> <span class="dt">double</span> examinePrice<span class="op">,</span> <span class="bu">String</span> roomName<span class="op">)</span> <span class="op">{</span></span><span id="cb7-29"><a href="#cb7-29" aria-hidden="true" tabindex="-1"></a>    Optional<span class="op">&lt;</span>Examine<span class="op">&gt;</span> targetExamineOptional <span class="op">=</span> examineRepository<span class="op">.</span><span class="fu">findById</span><span class="op">(</span>examineId<span class="op">);</span></span><span id="cb7-30"><a href="#cb7-30" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-31"><a href="#cb7-31" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>targetExamineOptional<span class="op">.</span><span class="fu">isEmpty</span><span class="op">())</span> <span class="op">{</span></span><span id="cb7-32"><a href="#cb7-32" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb7-33"><a href="#cb7-33" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb7-34"><a href="#cb7-34" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-35"><a href="#cb7-35" aria-hidden="true" tabindex="-1"></a>        <span class="bu">List</span><span class="op">&lt;</span>Examine<span class="op">&gt;</span> targetExamineList <span class="op">=</span> examineRepository<span class="op">.</span><span class="fu">findAll</span><span class="op">().</span><span class="fu">stream</span><span class="op">()</span></span><span id="cb7-36"><a href="#cb7-36" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span><span class="fu">filter</span><span class="op">(</span>examine <span class="op">-&gt;</span> Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>examine<span class="op">.</span><span class="fu">getExamineName</span><span class="op">(),</span> examineName<span class="op">)</span></span><span id="cb7-37"><a href="#cb7-37" aria-hidden="true" tabindex="-1"></a>                        <span class="op">&amp;&amp;</span> <span class="op">!</span>Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>examine<span class="op">.</span><span class="fu">getExamineId</span><span class="op">(),</span> examineId<span class="op">))</span></span><span id="cb7-38"><a href="#cb7-38" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span><span class="fu">collect</span><span class="op">(</span>Collectors<span class="op">.</span><span class="fu">toList</span><span class="op">());</span></span><span id="cb7-39"><a href="#cb7-39" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-40"><a href="#cb7-40" aria-hidden="true" tabindex="-1"></a>        Optional<span class="op">&lt;</span>Room<span class="op">&gt;</span> targetRoomOptional <span class="op">=</span> roomRepository<span class="op">.</span><span class="fu">findById</span><span class="op">(</span>roomName<span class="op">);</span></span><span id="cb7-41"><a href="#cb7-41" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-42"><a href="#cb7-42" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>targetRoomOptional<span class="op">.</span><span class="fu">isEmpty</span><span class="op">()</span> <span class="op">||</span> <span class="op">!</span>Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>targetExamineList<span class="op">.</span><span class="fu">size</span><span class="op">(),</span> <span class="dv">0</span><span class="op">))</span> <span class="op">{</span></span><span id="cb7-43"><a href="#cb7-43" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb7-44"><a href="#cb7-44" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb7-45"><a href="#cb7-45" aria-hidden="true" tabindex="-1"></a>            Examine targetExamine <span class="op">=</span> targetExamineOptional<span class="op">.</span><span class="fu">get</span><span class="op">();</span></span><span id="cb7-46"><a href="#cb7-46" aria-hidden="true" tabindex="-1"></a>            targetExamine<span class="op">.</span><span class="fu">setExamineName</span><span class="op">(</span>examineName<span class="op">);</span></span><span id="cb7-47"><a href="#cb7-47" aria-hidden="true" tabindex="-1"></a>            targetExamine<span class="op">.</span><span class="fu">setExaminePrice</span><span class="op">(</span>examinePrice<span class="op">);</span></span><span id="cb7-48"><a href="#cb7-48" aria-hidden="true" tabindex="-1"></a>            targetExamine<span class="op">.</span><span class="fu">setExamineRoom</span><span class="op">(</span>targetRoomOptional<span class="op">.</span><span class="fu">get</span><span class="op">());</span></span><span id="cb7-49"><a href="#cb7-49" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-50"><a href="#cb7-50" aria-hidden="true" tabindex="-1"></a>            Examine updatedExamine <span class="op">=</span> examineRepository<span class="op">.</span><span class="fu">saveAndFlush</span><span class="op">(</span>targetExamine<span class="op">);</span></span><span id="cb7-51"><a href="#cb7-51" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-52"><a href="#cb7-52" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>updatedExamine<span class="op">);</span></span><span id="cb7-53"><a href="#cb7-53" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb7-54"><a href="#cb7-54" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb7-55"><a href="#cb7-55" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span><span id="cb7-56"><a href="#cb7-56" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-57"><a href="#cb7-57" aria-hidden="true" tabindex="-1"></a><span class="co">// 删</span></span><span id="cb7-58"><a href="#cb7-58" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">deleteExamine</span><span class="op">(</span><span class="dt">int</span> examineId<span class="op">)</span> <span class="op">{</span></span><span id="cb7-59"><a href="#cb7-59" aria-hidden="true" tabindex="-1"></a>    Optional<span class="op">&lt;</span>Examine<span class="op">&gt;</span> targetExamineOptional <span class="op">=</span> examineRepository<span class="op">.</span><span class="fu">findById</span><span class="op">(</span>examineId<span class="op">);</span></span><span id="cb7-60"><a href="#cb7-60" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-61"><a href="#cb7-61" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>targetExamineOptional<span class="op">.</span><span class="fu">isEmpty</span><span class="op">())</span> <span class="op">{</span></span><span id="cb7-62"><a href="#cb7-62" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb7-63"><a href="#cb7-63" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb7-64"><a href="#cb7-64" aria-hidden="true" tabindex="-1"></a>        examineRepository<span class="op">.</span><span class="fu">deleteById</span><span class="op">(</span>examineId<span class="op">);</span></span><span id="cb7-65"><a href="#cb7-65" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-66"><a href="#cb7-66" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>examineRepository<span class="op">.</span><span class="fu">findById</span><span class="op">(</span>examineId<span class="op">).</span><span class="fu">isEmpty</span><span class="op">())</span> <span class="op">{</span></span><span id="cb7-67"><a href="#cb7-67" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>targetExamineOptional<span class="op">.</span><span class="fu">get</span><span class="op">());</span></span><span id="cb7-68"><a href="#cb7-68" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb7-69"><a href="#cb7-69" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb7-70"><a href="#cb7-70" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb7-71"><a href="#cb7-71" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb7-72"><a href="#cb7-72" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>说实话每个表增删改查写一遍还是挺繁琐的，毕竟业务逻辑上太过类似了。基本上都是这样的逻辑：</p><ul><li>增：查询重复数据存在情况 <span class="math inline">→</span>查外键存在情况 <span class="math inline">→</span> 插入数据。</li><li>改：查自身数据存在情况 <span class="math inline">→</span>查询重复数据存在情况 <span class="math inline">→</span> 查外键存在情况<span class="math inline">→</span> 插入数据。</li><li>删：直接调用JPA的 <code>deleteById</code> 方法。</li></ul><p>这里的如果需要重构可以考虑利用 <ahref="#java-反射机制"><code>Java</code>反射机制</a>。事实上，项目末期时根据前端需求增加的根据数据Id查询功能就是利用这一机制写的。</p><div class="sourceCode" id="cb8"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> GeneralService <span class="op">{</span></span><span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> RoomRepository roomRepository<span class="op">;</span></span><span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> FeatureRepository featureRepository<span class="op">;</span></span><span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> AdmissionRepository admissionRepository<span class="op">;</span></span><span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-12"><a href="#cb8-12" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> ArchiveRepository archiveRepository<span class="op">;</span></span><span id="cb8-13"><a href="#cb8-13" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-14"><a href="#cb8-14" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-15"><a href="#cb8-15" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> ChargeRepository chargeRepository<span class="op">;</span></span><span id="cb8-16"><a href="#cb8-16" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-17"><a href="#cb8-17" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-18"><a href="#cb8-18" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> ExamineRepository examineRepository<span class="op">;</span></span><span id="cb8-19"><a href="#cb8-19" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-20"><a href="#cb8-20" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-21"><a href="#cb8-21" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> MedicineRepository medicineRepository<span class="op">;</span></span><span id="cb8-22"><a href="#cb8-22" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-23"><a href="#cb8-23" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> JSONObject <span class="fu">getDataById</span><span class="op">(</span><span class="bu">String</span> tableName<span class="op">,</span> <span class="dt">int</span> id<span class="op">)</span> <span class="kw">throws</span> <span class="bu">Exception</span> <span class="op">{</span></span><span id="cb8-24"><a href="#cb8-24" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Class</span><span class="op">&lt;?&gt;</span> dataDaoClass <span class="op">=</span> <span class="bu">Class</span><span class="op">.</span><span class="fu">forName</span><span class="op">(</span></span><span id="cb8-25"><a href="#cb8-25" aria-hidden="true" tabindex="-1"></a>                Constants<span class="op">.</span><span class="fu">projectPackageName</span> <span class="op">+</span> <span class="st">&quot;.&quot;</span> <span class="op">+</span> Constants<span class="op">.</span><span class="fu">systemModulePackageName</span> <span class="op">+</span> <span class="st">&quot;.&quot;</span></span><span id="cb8-26"><a href="#cb8-26" aria-hidden="true" tabindex="-1"></a>                        <span class="op">+</span> Constants<span class="op">.</span><span class="fu">daoClassPackageName</span></span><span id="cb8-27"><a href="#cb8-27" aria-hidden="true" tabindex="-1"></a>                        <span class="op">+</span> <span class="st">&quot;.&quot;</span> <span class="op">+</span> tableName</span><span id="cb8-28"><a href="#cb8-28" aria-hidden="true" tabindex="-1"></a>                        <span class="op">+</span> Constants<span class="op">.</span><span class="fu">daoClassSuffix</span><span class="op">,</span></span><span id="cb8-29"><a href="#cb8-29" aria-hidden="true" tabindex="-1"></a>                <span class="kw">true</span><span class="op">,</span></span><span id="cb8-30"><a href="#cb8-30" aria-hidden="true" tabindex="-1"></a>                <span class="bu">Thread</span><span class="op">.</span><span class="fu">currentThread</span><span class="op">().</span><span class="fu">getContextClassLoader</span><span class="op">().</span><span class="fu">getParent</span><span class="op">());</span></span><span id="cb8-31"><a href="#cb8-31" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-32"><a href="#cb8-32" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Method</span> getByIdMethod <span class="op">=</span> <span class="kw">null</span><span class="op">;</span></span><span id="cb8-33"><a href="#cb8-33" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-34"><a href="#cb8-34" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span><span class="bu">Method</span> classMethods <span class="op">:</span> dataDaoClass<span class="op">.</span><span class="fu">getMethods</span><span class="op">())</span> <span class="op">{</span></span><span id="cb8-35"><a href="#cb8-35" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>classMethods<span class="op">.</span><span class="fu">getName</span><span class="op">(),</span> Constants<span class="op">.</span><span class="fu">findByIdMethodName</span><span class="op">))</span> <span class="op">{</span></span><span id="cb8-36"><a href="#cb8-36" aria-hidden="true" tabindex="-1"></a>                getByIdMethod <span class="op">=</span> classMethods<span class="op">;</span></span><span id="cb8-37"><a href="#cb8-37" aria-hidden="true" tabindex="-1"></a>            <span class="op">}</span></span><span id="cb8-38"><a href="#cb8-38" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb8-39"><a href="#cb8-39" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-40"><a href="#cb8-40" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span><span class="bu">Field</span> selfField <span class="op">:</span> <span class="kw">this</span><span class="op">.</span><span class="fu">getClass</span><span class="op">().</span><span class="fu">getDeclaredFields</span><span class="op">())</span> <span class="op">{</span></span><span id="cb8-41"><a href="#cb8-41" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">getType</span><span class="op">().</span><span class="fu">getName</span><span class="op">(),</span> dataDaoClass<span class="op">.</span><span class="fu">getName</span><span class="op">()))</span> <span class="op">{</span></span><span id="cb8-42"><a href="#cb8-42" aria-hidden="true" tabindex="-1"></a>                Optional<span class="op">&lt;?&gt;</span> getIdRes <span class="op">=</span> <span class="op">(</span>Optional<span class="op">&lt;?&gt;)</span> getByIdMethod<span class="op">.</span><span class="fu">invoke</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="kw">this</span><span class="op">),</span> id<span class="op">);</span></span><span id="cb8-43"><a href="#cb8-43" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-44"><a href="#cb8-44" aria-hidden="true" tabindex="-1"></a>                <span class="cf">if</span> <span class="op">(</span>getIdRes<span class="op">.</span><span class="fu">isEmpty</span><span class="op">())</span> <span class="op">{</span></span><span id="cb8-45"><a href="#cb8-45" aria-hidden="true" tabindex="-1"></a>                    <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb8-46"><a href="#cb8-46" aria-hidden="true" tabindex="-1"></a>                <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb8-47"><a href="#cb8-47" aria-hidden="true" tabindex="-1"></a>                    <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>getIdRes<span class="op">.</span><span class="fu">get</span><span class="op">());</span></span><span id="cb8-48"><a href="#cb8-48" aria-hidden="true" tabindex="-1"></a>                <span class="op">}</span></span><span id="cb8-49"><a href="#cb8-49" aria-hidden="true" tabindex="-1"></a>            <span class="op">}</span></span><span id="cb8-50"><a href="#cb8-50" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb8-51"><a href="#cb8-51" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-52"><a href="#cb8-52" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb8-53"><a href="#cb8-53" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb8-54"><a href="#cb8-54" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>事实上，删除功能可以直接套用这一写法。当然，在上面的<code>getDataById</code> 方法中查找 <code>Method</code> 与<code>Field</code> 的逻辑也可以进一步进行优化：</p><div class="sourceCode" id="cb9"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">Class</span><span class="op">&lt;</span>JPARepository<span class="op">&gt;</span> <span class="fu">getDataDaoClassByTableName</span> <span class="op">(</span><span class="bu">String</span> tableName<span class="op">)</span> <span class="kw">throws</span> <span class="bu">Exception</span> <span class="op">{</span></span><span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="bu">Class</span><span class="op">.</span><span class="fu">forName</span><span class="op">(</span></span><span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>            Constants<span class="op">.</span><span class="fu">projectPackageName</span> <span class="op">+</span> <span class="st">&quot;.&quot;</span> <span class="op">+</span> Constants<span class="op">.</span><span class="fu">systemModulePackageName</span> <span class="op">+</span> <span class="st">&quot;.&quot;</span></span><span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>                    <span class="op">+</span> Constants<span class="op">.</span><span class="fu">daoClassPackageName</span></span><span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a>                    <span class="op">+</span> <span class="st">&quot;.&quot;</span> <span class="op">+</span> tableName</span><span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a>                    <span class="op">+</span> Constants<span class="op">.</span><span class="fu">daoClassSuffix</span><span class="op">,</span></span><span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a>            <span class="kw">true</span><span class="op">,</span></span><span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a>            <span class="bu">Thread</span><span class="op">.</span><span class="fu">currentThread</span><span class="op">().</span><span class="fu">getContextClassLoader</span><span class="op">().</span><span class="fu">getParent</span><span class="op">());</span></span><span id="cb9-9"><a href="#cb9-9" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span><span id="cb9-10"><a href="#cb9-10" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-11"><a href="#cb9-11" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">getDataById</span><span class="op">(</span><span class="bu">String</span> tableName<span class="op">,</span> <span class="dt">int</span> id<span class="op">)</span> <span class="kw">throws</span> <span class="bu">Exception</span> <span class="op">{</span></span><span id="cb9-12"><a href="#cb9-12" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Class</span><span class="op">&lt;?&gt;</span> dataDaoClass <span class="op">=</span> <span class="kw">this</span><span class="op">.</span><span class="fu">getDataDaoClassByTableName</span><span class="op">(</span>tableName<span class="op">);</span></span><span id="cb9-13"><a href="#cb9-13" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Method</span> getByIdMethod <span class="op">=</span> dataDaoClass<span class="op">.</span><span class="fu">getMethod</span><span class="op">(</span>Constants<span class="op">.</span><span class="fu">findByIdMethodName</span><span class="op">,</span> <span class="bu">Integer</span><span class="op">.</span><span class="fu">class</span><span class="op">);</span></span><span id="cb9-14"><a href="#cb9-14" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Field</span> selfField <span class="op">=</span> <span class="kw">this</span><span class="op">.</span><span class="fu">getClass</span><span class="op">().</span><span class="fu">getDeclaredField</span><span class="op">(</span>tableName<span class="op">.</span><span class="fu">toFirstCharLowerCase</span><span class="op">());</span></span><span id="cb9-15"><a href="#cb9-15" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-16"><a href="#cb9-16" aria-hidden="true" tabindex="-1"></a>    Optional<span class="op">&lt;?&gt;</span> getIdRes <span class="op">=</span> <span class="op">(</span>Optional<span class="op">&lt;?&gt;)</span> getByIdMethod<span class="op">.</span><span class="fu">invoke</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="kw">this</span><span class="op">),</span> id<span class="op">);</span></span><span id="cb9-17"><a href="#cb9-17" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-18"><a href="#cb9-18" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> getIdRes<span class="op">.</span><span class="fu">isEmpty</span><span class="op">()</span> <span class="op">?</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">)</span> <span class="op">:</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>getIdRes<span class="op">.</span><span class="fu">get</span><span class="op">());</span></span><span id="cb9-19"><a href="#cb9-19" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span><span id="cb9-20"><a href="#cb9-20" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-21"><a href="#cb9-21" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">deleteDataById</span><span class="op">(</span><span class="bu">String</span> tableName<span class="op">,</span> <span class="dt">int</span> id<span class="op">)</span> <span class="kw">throws</span> <span class="bu">Exception</span> <span class="op">{</span></span><span id="cb9-22"><a href="#cb9-22" aria-hidden="true" tabindex="-1"></a>    JSONObject getDataByIdRes <span class="op">=</span> <span class="kw">this</span><span class="op">.</span><span class="fu">getDataById</span><span class="op">(</span>tableName<span class="op">,</span> id<span class="op">);</span></span><span id="cb9-23"><a href="#cb9-23" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-24"><a href="#cb9-24" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 表内查询无数据</span></span><span id="cb9-25"><a href="#cb9-25" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span><span class="bu">Object</span><span class="op">.</span><span class="fu">equals</span><span class="op">(</span>getDataByIdRes<span class="op">.</span><span class="fu">data</span><span class="op">,</span> <span class="kw">null</span><span class="op">))</span> <span class="op">{</span></span><span id="cb9-26"><a href="#cb9-26" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> getDataByIdRes<span class="op">;</span></span><span id="cb9-27"><a href="#cb9-27" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb9-28"><a href="#cb9-28" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-29"><a href="#cb9-29" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Class</span><span class="op">&lt;?&gt;</span> dataDaoClass <span class="op">=</span> <span class="kw">this</span><span class="op">.</span><span class="fu">getDataDaoClassByTableName</span><span class="op">(</span>tableName<span class="op">);</span></span><span id="cb9-30"><a href="#cb9-30" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Method</span> deleteByIdMethod <span class="op">=</span> dataDaoClass<span class="op">.</span><span class="fu">getMethod</span><span class="op">(</span>Constants<span class="op">.</span><span class="fu">deleteByIdMethodName</span><span class="op">,</span> <span class="bu">Integer</span><span class="op">.</span><span class="fu">class</span><span class="op">);</span></span><span id="cb9-31"><a href="#cb9-31" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Field</span> selfField <span class="op">=</span> <span class="kw">this</span><span class="op">.</span><span class="fu">getClass</span><span class="op">().</span><span class="fu">getDeclaredField</span><span class="op">(</span>tableName<span class="op">.</span><span class="fu">toFirstCharLowerCase</span><span class="op">());</span></span><span id="cb9-32"><a href="#cb9-32" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-33"><a href="#cb9-33" aria-hidden="true" tabindex="-1"></a>    deleteByIdMethod<span class="op">.</span><span class="fu">invoke</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="kw">this</span><span class="op">),</span> id<span class="op">);</span></span><span id="cb9-34"><a href="#cb9-34" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-35"><a href="#cb9-35" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>getDataByIdRes<span class="op">.</span><span class="fu">get</span><span class="op">());</span></span><span id="cb9-36"><a href="#cb9-36" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>为了进一步简化开发工作量与代码逻辑，可以考虑先创建公共类：<code>BaseEntity</code>与 <code>BaseRepository</code>，使得实体类继承前者，对应的<code>dao</code> 类继承后者。</p><p>对于增改功能而言，业务逻辑中唯二的区别在于判断重复条件与判断外键存在逻辑这两项。可以考虑抽象成统一的公共方法，通过接收可变个数个参数构成的List来进行判断。更具体的，其可能是下面的实现形式：</p><div class="sourceCode" id="cb10"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">updateDataById</span><span class="op">(</span></span><span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>    <span class="bu">String</span> tableName<span class="op">,</span> </span><span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> id<span class="op">,</span> </span><span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>    <span class="bu">ArrayList</span><span class="op">&lt;</span><span class="bu">String</span><span class="op">&gt;</span> duplicateConditionFields<span class="op">,</span> </span><span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>    <span class="bu">ArrayList</span><span class="op">&lt;</span><span class="bu">String</span><span class="op">&gt;</span> foreignKeys<span class="op">,</span></span><span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Map</span><span class="op">&lt;</span><span class="bu">String</span><span class="op">,</span> <span class="bu">String</span><span class="op">&gt;</span> newValues</span><span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a><span class="op">)</span> <span class="op">{</span></span><span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Class</span><span class="op">&lt;?&gt;</span> dataEntityClass <span class="op">=</span> <span class="kw">...</span><span class="op">;</span> <span class="co">// 查找对应的 Entity 层类</span></span><span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Class</span><span class="op">&lt;?&gt;</span> dataDaoClass <span class="op">=</span> <span class="kw">...</span><span class="op">;</span> <span class="co">// 查找对应的 Dao 层类</span></span><span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Method</span> updateByIdMethod <span class="op">=</span> dataDaoClass<span class="op">.</span><span class="fu">getMethod</span><span class="op">(</span><span class="st">&quot;saveAndFlush&quot;</span><span class="op">);</span> <span class="co">// 查找保存数据的方法</span></span><span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Method</span> findAllMethod <span class="op">=</span> dataDaoClass<span class="op">.</span><span class="fu">getMethod</span><span class="op">(</span><span class="st">&quot;findAll&quot;</span><span class="op">);</span> </span><span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Field</span> selfField <span class="op">=</span> <span class="kw">...</span><span class="op">;</span> <span class="co">// 找到自身类中对应的 field</span></span><span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Object</span> targetData <span class="op">=</span> dataEntityClass<span class="op">.</span><span class="fu">getConstructor</span><span class="op">().</span><span class="fu">newInstance</span><span class="op">();</span> <span class="co">//获取要更新数据</span></span><span id="cb10-15"><a href="#cb10-15" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-16"><a href="#cb10-16" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Boolean</span> isForeignKeyExist <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb10-17"><a href="#cb10-17" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-18"><a href="#cb10-18" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 如果满足重复条件或外键不存在则直接返回，这里可以进一步优化</span></span><span id="cb10-19"><a href="#cb10-19" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span><span class="op">(</span>foreignKey <span class="op">:</span> foreignKeys<span class="op">)</span> <span class="op">{</span></span><span id="cb10-20"><a href="#cb10-20" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Class</span><span class="op">&lt;?&gt;</span> foreignKeyDaoClass <span class="op">=</span> <span class="bu">Class</span><span class="op">.</span><span class="fu">forName</span><span class="op">(</span>targetData<span class="op">.</span><span class="fu">getDeclaredField</span><span class="op">(</span>foreignKey<span class="op">).</span><span class="fu">getType</span><span class="op">().</span><span class="fu">getName</span><span class="op">()</span> <span class="op">+</span> <span class="kw">...</span><span class="op">);</span> <span class="co">//找到外键对应 Dao 层类</span></span><span id="cb10-21"><a href="#cb10-21" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Method</span> findByIdMethod <span class="op">=</span> foreignKeyDaoClass<span class="op">.</span><span class="fu">getMethod</span><span class="op">(</span><span class="st">&quot;findById&quot;</span><span class="op">);</span> </span><span id="cb10-22"><a href="#cb10-22" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Field</span> selfField <span class="op">=</span> <span class="kw">...</span><span class="op">;</span> <span class="co">// 找到自身类中对应的 field</span></span><span id="cb10-23"><a href="#cb10-23" aria-hidden="true" tabindex="-1"></a>        Optional<span class="op">&lt;?&gt;</span> getIdRes <span class="op">=</span> <span class="op">(</span>Optional<span class="op">&lt;?&gt;)</span> findByIdMethod<span class="op">.</span><span class="fu">invoke</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="kw">this</span><span class="op">),</span> <span class="bu">Integer</span><span class="op">.</span><span class="fu">parseInt</span><span class="op">(</span>newValues<span class="op">.</span><span class="fu">get</span><span class="op">(</span>foreignKey<span class="op">).</span><span class="fu">getId</span><span class="op">()));</span></span><span id="cb10-24"><a href="#cb10-24" aria-hidden="true" tabindex="-1"></a>        isForeignKeyExist <span class="op">&amp;=</span> <span class="op">!</span>getIdRes<span class="op">.</span><span class="fu">isEmpty</span><span class="op">();</span></span><span id="cb10-25"><a href="#cb10-25" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb10-26"><a href="#cb10-26" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-27"><a href="#cb10-27" aria-hidden="true" tabindex="-1"></a>    <span class="bu">List</span><span class="op">&lt;?&gt;</span> getAllRes <span class="op">=</span> <span class="op">(</span><span class="bu">List</span><span class="op">&lt;?&gt;)</span> findAllMethod<span class="op">.</span><span class="fu">invoke</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="kw">this</span><span class="op">));</span></span><span id="cb10-28"><a href="#cb10-28" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-29"><a href="#cb10-29" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span><span class="bu">Object</span><span class="op">.</span><span class="fu">equals</span><span class="op">(</span>getAllRes<span class="op">.</span><span class="fu">findAll</span><span class="op">().</span><span class="fu">stream</span><span class="op">().</span><span class="fu">filter</span><span class="op">(</span>data <span class="op">-&gt;</span> <span class="op">{</span></span><span id="cb10-30"><a href="#cb10-30" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Boolean</span> isExist <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb10-31"><a href="#cb10-31" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span>duplicateConditionField <span class="op">:</span> duplicateConditionFields<span class="op">)</span> <span class="op">{</span></span><span id="cb10-32"><a href="#cb10-32" aria-hidden="true" tabindex="-1"></a>            isExist <span class="op">&amp;=</span> <span class="bu">Object</span><span class="op">.</span><span class="fu">equals</span><span class="op">(</span></span><span id="cb10-33"><a href="#cb10-33" aria-hidden="true" tabindex="-1"></a>                data<span class="op">.</span><span class="fu">getDeclaredField</span><span class="op">(</span>duplicateConditionField<span class="op">).</span><span class="fu">get</span><span class="op">(</span>data<span class="op">),</span> </span><span id="cb10-34"><a href="#cb10-34" aria-hidden="true" tabindex="-1"></a>                targetData<span class="op">.</span><span class="fu">getDeclaredField</span><span class="op">(</span>duplicateConditionField<span class="op">).</span><span class="fu">get</span><span class="op">(</span>targetData<span class="op">)</span></span><span id="cb10-35"><a href="#cb10-35" aria-hidden="true" tabindex="-1"></a>            <span class="op">);</span></span><span id="cb10-36"><a href="#cb10-36" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb10-37"><a href="#cb10-37" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> isExist<span class="op">;</span></span><span id="cb10-38"><a href="#cb10-38" aria-hidden="true" tabindex="-1"></a>    <span class="op">}).</span><span class="fu">collect</span><span class="op">(</span>Collectors<span class="op">.</span><span class="fu">toList</span><span class="op">()).</span><span class="fu">size</span><span class="op">(),</span> <span class="dv">0</span><span class="op">)</span> <span class="op">||</span> <span class="op">!</span>isForeignKeyExist<span class="op">)</span> <span class="op">{</span></span><span id="cb10-39"><a href="#cb10-39" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span><span class="op">;</span></span><span id="cb10-40"><a href="#cb10-40" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb10-41"><a href="#cb10-41" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-42"><a href="#cb10-42" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 不满足重复条件且外键都存在时，进行数据更新</span></span><span id="cb10-43"><a href="#cb10-43" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span>field <span class="op">:</span> targetData<span class="op">.</span><span class="fu">getDeclaredFields</span><span class="op">())</span> <span class="op">{</span></span><span id="cb10-44"><a href="#cb10-44" aria-hidden="true" tabindex="-1"></a>        field<span class="op">.</span><span class="fu">set</span><span class="op">(</span>targetData<span class="op">,</span> newValues<span class="op">.</span><span class="fu">get</span><span class="op">(</span>field<span class="op">.</span><span class="fu">getName</span><span class="op">()).</span><span class="fu">toTargetType</span><span class="op">());</span></span><span id="cb10-45"><a href="#cb10-45" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb10-46"><a href="#cb10-46" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-47"><a href="#cb10-47" aria-hidden="true" tabindex="-1"></a>    updateByIdMethod<span class="op">.</span><span class="fu">invoke</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="kw">this</span><span class="op">),</span> targetData<span class="op">);</span></span><span id="cb10-48"><a href="#cb10-48" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-49"><a href="#cb10-49" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="kw">...</span><span class="op">;</span> <span class="co">// 返回值</span></span><span id="cb10-50"><a href="#cb10-50" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>考虑到增改功能逻辑也比较类似，因而增加功能的伪代码不再再次列出。</p><p>借此，大量类似的代码也可以被大幅省略，从而大幅减少工作量，同时也减少了冗余代码。</p><p>当然，这里也可以考虑使用拼接 <code>SQL</code>的方法。不过考虑到后端开发上应该尽可能不写或少写原生的<code>SQL</code>，因而这一种写法更符合规范些。</p><p>通过利用上述的写法，项目中的代码可以精简许多，由此也可以使得所需要的测试代码大幅减少，从而使得项目整体的工作量大量降低。事实上，正是由于当前项目中有大量逻辑比较类似的代码，导致为满足覆盖率所需的测试代码非常庞大，从而难以完成自动化测试代码的编写。</p><p>除此之外，一些类内的方法也可以作出一些更改。考虑到方法链的写法更加符合直觉，且也在一定程度上能提升开发效率并使代码更加简洁（尽管在一定程度上破坏了<code>.</code> 运算符的原有语义，且也不是很符合 <ahref="#CQRS">CQRS</a>），因而我个人更倾向于尽可能使用方法链的写法。</p><h3 id="前端">前端</h3><p>我个人而言也作为开发人员参与到了前端组的开发中。事实上最大的优化点在于接口调用的时机。当前，前端组在页面渲染时会请求一次后端接口，获取全部数据并渲染到页面上。之后，在进行关键词查找、数据插入、数据删除时各自会调用一次接口。至此为止都是比较合理的，当数据量庞大时前端不应该负责数据的查找工作，利用在服务器侧进行过优化的查询接口比较合理。然而，前端在进行数据编辑时，则是采用下面的流程：</p><pre class="mermaid"><code>flowchart TD    A[页面选中数据] --&gt; B[获取数据id]    B --&gt; C[根据id再次调用后端接口获取全部数据]    C --&gt; D[根据后端返回渲染页面]    D --&gt; E[用户输入完成后再次调取后端更新数据接口]</code></pre><p>由于在包含全部数据的页面进行初期渲染时每条数据的全部内容前端都已经获取到，因而选中数据进入编辑页面时完全可以直接利用前端已经拿到的数据进行渲染，不需要再次调用后端端口。且不谈在网络延迟较高的情况下，上面的做法会使得用户体验较差，在服务器有大量请求的情况下，前端冗余的调用会加重服务器的负担，从而影响性能。</p><p>另一方面我也注意到，前端由于没有将方法应用到了页面渲染的各个阶段，从而导致了某些请求会被重复多次执行，这也是影响性能的一大问题。当然，最好的解决方法应是前后端都做一下防抖处理。</p><h2 id="一些其他">一些其他</h2><p>开发上的问题大体如上，基本上都是后续项目中值得进行进一步更改的地方。除此以外，整个项目的生命周期中最最值得被后续继承的地方在于严格的PR-Code Review制度与文档的维护。其中前者保证了代码的质量与规范，后者则提高了有效沟通的效率。这两者才是在开发过程中降低工作量与各类成本的最关键因素。</p><h2 id="名词释义">名词释义</h2><h3 id="rad">RAD</h3><p>快速应用开发模型（Rapid Application Development），又称 V模型。似乎是为了改进瀑布式模型而在上世纪 70 至 80年代提出的。这一模型大体上遵循下图的几个阶段：</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ITtech/_media/SoftwareInsights-20230428/RAD-model.webp" alt="RAD" /><figcaption aria-hidden="true">RAD</figcaption></figure><h3 id="微服务">微服务</h3><p>SOA（面向服务架构）的一种变体，提倡将单一应用程序划分为松耦合的服务组，每个服务可独立部署。其概念最早于2005 年提出。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ITtech/_media/SoftwareInsights-20230428/microservice.png"alt="SOA" /><figcaption aria-hidden="true">SOA</figcaption></figure><h3 id="微前端">微前端</h3><p>2016年被正式提出，是微服务这一概念被扩展到前端的一种应用形式，便于新老项目的共存与过渡，以及项目独立开发等。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ITtech/_media/SoftwareInsights-20230428/mircro-frontend.png"alt="微前端" /><figcaption aria-hidden="true">微前端</figcaption></figure><h3 id="java-反射机制"><code>Java</code> 反射机制</h3><p><code>Java</code>先编译后运行，对象类型在编译期确定。在程序运行时类被动态加载，当类没被用到时没有被加载到JVM，因而利用反射，可以在运行时获得类的各种内容。通过利用反射，可以动态地创建对象，更加灵活，但是会消耗系统资源。</p><h3 id="cqrs">CQRS</h3><p>Command Query ResponsibilitySegregation，即命令查询职责分离模式，要求一个方法更改对象的状态或返回一个结果，但是不能同时包含这两个行为。从某种角度来说算是继承了从前将系统交互视为CRUD 的思想。相较之下，方法链（MethodChaining）语法中由于对象被引用一次即可被多次调用，从某种意义上违反了这一原则。</p><p>更具体的，符合 CQRS 与 <code>.</code>运算符原有语义（<code>调用者.操作名</code>）的写法形如下面的形式：</p><div class="sourceCode" id="cb12"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a>Person p <span class="op">=</span> <span class="kw">new</span> <span class="fu">Person</span><span class="op">();</span></span><span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a>p<span class="op">.</span><span class="fu">getWater</span><span class="op">();</span></span><span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a>p<span class="op">.</span><span class="fu">drinkWater</span><span class="op">();</span></span><span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a>p<span class="op">.</span><span class="fu">getThirsty</span><span class="op">();</span></span></code></pre></div><p>而方法链则形如下面的形式：</p><div class="sourceCode" id="cb13"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="kw">new</span> <span class="fu">Person</span><span class="op">().</span><span class="fu">getWater</span><span class="op">().</span><span class="fu">drinkWater</span><span class="op">().</span><span class="fu">getThirsty</span><span class="op">();</span></span></code></pre></div><p>这种写法更符合直觉，同时可以节省临时变量、简化代码。</p><h2 id="参考资料">参考资料</h2><ol type="1"><li>When I should use one to one relationship? (2012, September 7).Stack Overflow.https://stackoverflow.com/questions/12318870/when-i-should-use-one-to-one-relationship</li><li>search using regex in JPA. (2020, June 15). Stack Overflow.https://stackoverflow.com/questions/62379559/search-using-regex-in-jpa</li><li>Using Java Reflection. (n.d.). Using Java Reflection.https://www.oracle.com/technical-resources/articles/java/javareflection.html</li><li>Rapid application development - Wikipedia. (2014, July 2). RapidApplication Development - Wikipedia.https://en.wikipedia.org/wiki/Rapid_application_development</li><li>Jackson, C. (2019, June 19). Micro Frontends. martinfowler.com.https://martinfowler.com/articles/micro-frontends.html</li><li>M. (n.d.). CQRS pattern - Azure Architecture Center. CQRS Pattern -Azure Architecture Center | Microsoft Learn.https://learn.microsoft.com/en-us/azure/architecture/patterns/cqrs</li><li>Method chaining - why is it a good practice, or not? (2009, July 9).Stack Overflow.https://stackoverflow.com/questions/1103985/method-chaining-why-is-it-a-good-practice-or-not</li></ol>]]></content>
    <pubDate>Fri, 26 Jul 2024 16:48:56 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[随记：双反 甲辰年七月二十四日]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Notes-20240724</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Notes-20240724</guid>
    <content type="html"><![CDATA[<h1 id="随记双反-甲辰年七月二十四日">随记：双反 甲辰年七月二十四日</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240724/cover-picture.jpg" alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.07.24<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>甲辰年七月二十四日，申城。</p><p>Mamiya C330 105/3.5 DS.</p><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240724/picture-1.jpg" alt="双反" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240724/picture-2.jpg" alt="双反" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240724/picture-3.jpg" alt="双反" /></p></section>]]></content>
    <pubDate>Wed, 24 Jul 2024 01:29:07 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[随记：玩具 甲辰年七月二十三日]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Notes-20240723</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Notes-20240723</guid>
    <content type="html"><![CDATA[<h1 id="随记玩具-甲辰年七月二十三日">随记：玩具 甲辰年七月二十三日</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/cover-picture.jpg" alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.07.23<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>甲辰年七月二十三日，申城。</p><h2 id="megahouse-brilliant-stage-高垣枫-悠久之翼">MegaHouse BrilliantStage 高垣枫 悠久之翼</h2><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-1.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-2.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-3.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-4.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-5.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-6.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-7.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-8.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-9.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-10.jpg" alt="高垣枫" /></p></section><h2 id="phat-高垣枫-甘美的公主-ver">Phat 高垣枫 甘美的公主 Ver</h2><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-11.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-12.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-13.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-14.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-15.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-16.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-17.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-18.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-19.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-20.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-21.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-22.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-23.jpg" alt="高垣枫" /></p></section><h2 id="exq-高垣枫">EXQ 高垣枫</h2><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-24.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-25.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-26.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-27.jpg" alt="高垣枫" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240723/picture-28.jpg" alt="高垣枫" /></p></section>]]></content>
    <pubDate>Wed, 24 Jul 2024 01:26:25 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[二维语义学 阅读笔记]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Phila-20240719</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Phila-20240719</guid>
    <content type="html"><![CDATA[<h1 id="二维语义学-阅读笔记">二维语义学 阅读笔记</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Phila-20240719/cover-picture.jpg" alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.07.19<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>开始之前先复习一下逻辑系统和分析哲学的几个基础概念。</p><h2 id="词项逻辑">词项逻辑</h2><p>亚里士多德（<ruby class='minority-language-font-ruby'>Αριστοτέλης</ruby>）的词项逻辑（Termlogic）最重要的结论就是传统三段论。词项逻辑首先把构成命题的基础单元即项划分为主项、谓项、量项和联项。同时出于他自身的共相/唯名论的形而上学基础将项又划分为了单称与全称。命题则根据性质与数量对应地分为肯定的/否定的于全称的/特称的，由此构建出了他的对立四边形。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Phila-20240719/picture-1.png" alt="对立四边形" /><figcaption aria-hidden="true">对立四边形</figcaption></figure><h3 id="三段论">三段论</h3><p>为了对三段论进行形式化，结论中的谓项被称为大项 <spanclass="math inline"><em>P</em></span>，主项被称为小项 <spanclass="math inline"><em>S</em></span>；公共项被称为 <spanclass="math inline"><em>M</em></span>；包含大项的前提为大前提，包含小项的前提为小前提。形式化地考虑亚里士多德最有名的那个三段论：</p><ol type="1"><li>人皆有死。</li><li>苏格拉底是人。</li><li>苏格拉底有死。</li></ol><p>其可以转写为：</p><ol type="1"><li><span class="math inline">$A\space M-P$</span></li><li><span class="math inline"><em>S</em> − <em>M</em></span></li><li><span class="math inline"><em>S</em> − <em>P</em></span></li></ol><p>进一步地，亚里士多德根据前提的性质和数量，以及项的位置区分了三段论的语气（mood）与格（figure），由此发展出了对命题进行变化的换位与简约公式。芝诺创建的斯多葛派学者则发现了包含排中律在内的五个推理形式。</p><h2 id="自然演绎逻辑">自然演绎逻辑</h2><p>对于系统 <span class="math inline">𝔏</span>的一个版本的自然演绎逻辑中，只有如下九个基本规则：</p><ol type="1"><li>假定规则 A</li><li>肯定前件规则 MPP</li><li>双重否定规则 DN</li><li>条件证明规则 CP</li><li><span class="math inline"> ∧ −</span> 介入规则 <spanclass="math inline">∧</span>I</li><li><span class="math inline"> ∧ −</span> 除去规则 <spanclass="math inline">∧</span>E</li><li><span class="math inline"> ∨ −</span> 介入规则 <spanclass="math inline">∨</span>I</li><li><span class="math inline"> ∨ −</span> 除去规则 <spanclass="math inline">∨</span>E</li><li>反证法规则 RAA</li></ol><h2 id="希尔伯特演绎系统">希尔伯特演绎系统</h2><ol type="1"><li><spanclass="math inline"><em>ϕ</em> → (<em>ψ</em>→<em>ϕ</em>)</span></li><li><spanclass="math inline">(<em>ϕ</em>→(<em>ψ</em>→<em>ξ</em>)) → ((<em>ϕ</em>→<em>ψ</em>)→(<em>ϕ</em>→<em>ξ</em>))</span></li><li><spanclass="math inline">(¬<em>ϕ</em>→¬<em>ψ</em>) → ((¬<em>ϕ</em>→<em>ψ</em>)→<em>ϕ</em>)</span></li><li><spanclass="math inline">∀<em>x</em>(<em>ϕ</em>) → <em>ϕ</em>[<em>x</em>∖<em>t</em>]</span>，这里<span class="math inline"><em>t</em></span> 是自由变元</li><li><span class="math inline">$\forallx(\phi\rightarrow\psi)\rightarrow(\forall x\space\phi\rightarrow\forallx\space\psi)$</span></li><li><span class="math inline">$\phi\rightarrow\forallx\space\phi$</span>，这里 <span class="math inline"><em>x</em></span>不是自由变元</li><li><spanclass="math inline">∀<em>x</em>, <em>x</em> = <em>x</em></span></li><li><spanclass="math inline">(<em>x</em>=<em>y</em>) → (<em>ϕ</em>[<em>z</em>∖<em>x</em>]→<em>ϕ</em>[<em>z</em>∖<em>y</em>])</span></li></ol><h2 id="命题逻辑与一阶谓词逻辑">命题逻辑与一阶谓词逻辑</h2><p>考虑逻辑联结词 <spanclass="math inline">¬,∧,∨,→,↔︎</span>；同时考虑量化符号 <spanclass="math inline">$\forall,\exist$</span>。以及用于表达项/对象关系的断言符号与函数符号<spanclass="math inline"><em>A</em><sub><em>j</em></sub><sup><em>n</em></sup>(<em>x</em><sub>1</sub>,…,<em>x</em><sub><em>n</em></sub>), <em>f</em><sub><em>j</em></sub><sup><em>n</em></sup>(<em>x</em><sub>1</sub>,…,<em>x</em><sub><em>n</em></sub>)</span>。我们知道：</p><ol type="1"><li><spanclass="math inline"><em>ϕ</em> ∧ <em>ψ</em> := ¬(<em>ϕ</em>→(¬<em>ψ</em>))</span></li><li><spanclass="math inline"><em>ϕ</em> ∨ <em>ψ</em> := (¬<em>ϕ</em>) → <em>ψ</em></span></li><li><spanclass="math inline"><em>ϕ</em> ↔︎ <em>ψ</em> := (<em>ϕ</em>→<em>ψ</em>) ∧ (<em>ϕ</em>←<em>ψ</em>)</span></li><li><span class="math inline">$\exist x\space \phi:=\neg\forall x \neg\phi$</span></li></ol><p>考虑公式 <spanclass="math inline">∀<em>x</em>(<em>A</em><sub>1</sub><sup>1</sup>(<em>x</em>)→<em>A</em><sub>2</sub><sup>1</sup>(<em>y</em>))</span>，<spanclass="math inline"><em>A</em><sub>1</sub><sup>1</sup>(<em>x</em>)</span>的 <span class="math inline"><em>x</em></span> 是约束变量，<spanclass="math inline"><em>A</em><sub>2</sub><sup>1</sup>(<em>y</em>)</span>的 <span class="math inline"><em>y</em></span> 是自由变量。</p><p>这里要注意区分自然演绎（Natural Deduction）、命题逻辑（PropositionalLogic）与一阶谓词逻辑（First-orderLogic）。由自然演绎方法构造的命题逻辑系统被简称为 PN推演，或者说是语言系统 <span class="math inline">𝔏</span>上的形式逻辑系统 <spanclass="math inline"><em>N</em><sub>𝔏</sub></span>。一阶谓词逻辑 <spanclass="math inline"><em>K</em><sub>𝔏</sub></span>是命题逻辑的扩展，引入了量化符号、断言符号与函数符号。</p><h3 id="推理规则-mp">推理规则 MP</h3><ol type="1"><li><span class="math inline"><em>P</em> → <em>Q</em></span></li><li><span class="math inline"><em>P</em></span></li><li><span class="math inline"><em>Q</em></span></li></ol><h3 id="公理系统">公理系统</h3><ol type="1"><li><spanclass="math inline"><em>P</em> → (<em>Q</em>→<em>P</em>)</span></li><li><spanclass="math inline">(<em>P</em>→(<em>Q</em>→<em>R</em>)) → ((<em>P</em>→<em>Q</em>)→(<em>P</em>→<em>R</em>))</span></li><li><spanclass="math inline">(¬<em>P</em>→¬<em>Q</em>) → ((¬<em>P</em>→<em>Q</em>)→<em>P</em>)</span></li><li>对于项 <span class="math inline"><em>T</em></span>，<spanclass="math inline"><em>t</em></span> 为其中出现的变量。如果公式 <spanclass="math inline"><em>P</em></span> 中自由的 <spanclass="math inline"><em>x</em></span> 都不在 <spanclass="math inline">∀<em>t</em></span> 中，有 <spanclass="math inline">$\forall x\space P\rightarrow P(T)$</span></li><li>对于约束变量 <span class="math inline"><em>x</em></span>，<spanclass="math inline">$(\forall x (P\rightarrowQ))\rightarrow(P\rightarrow(\forall x\space Q))$</span></li><li><span class="math inline">$(\forall x(P\rightarrowQ))\rightarrow((\forall x\space P)\rightarrow(\forall x\spaceQ))$</span></li><li><span class="math inline">$P\rightarrow\forall x\spaceP$</span></li></ol><h2 id="模态逻辑">模态逻辑</h2><p>莱布尼兹（Leibniz）为了调和单子论与必然性/偶然性问题，论证我们的世界是上帝所可能创造出的世界中最善的那个，或者说，在全部可能的世界中，我们这个实际（actual）的世界是全部可能（possible）的世界中善的总量与恶的总量之差最大的那个。克里普克（Kripke）为了区分谓词逻辑中的爆炸原理问题的情态词，即<span class="math inline">⊥ → <em>ϕ</em></span> 而引入。</p><p>模态逻辑在谓词逻辑基础上引入了两个全新的量化符号 <spanclass="math inline">□,◇</span>，前者表示在全部可能的世界中都是真的，相对的后者表示在某些可能的世界中是真的。我们知道定义：</p><ol type="1"><li><span class="math inline">□<em>ϕ</em> := ¬◇¬<em>ϕ</em></span></li><li><span class="math inline">◇<em>ϕ</em> := ¬□¬<em>ϕ</em></span></li></ol><p>这种形式的对偶算子在时序逻辑中也有较多出现（例如 LTL 中的 <spanclass="math inline"><em>F</em>, <em>G</em></span> 和 <spanclass="math inline"><em>U</em>, <em>R</em></span>）。</p><p>目前有如下公理：</p><ul><li><span class="math inline">(<em>N</em>)</span>：<spanclass="math inline">(⊨<em>ϕ</em>) → (⊨□<em>ϕ</em>)</span></li><li><span class="math inline">(<em>K</em>)</span>：<spanclass="math inline">□(<em>ϕ</em>→<em>ψ</em>) → (□<em>ϕ</em>→□<em>ψ</em>)</span></li><li><span class="math inline">(<em>T</em>)</span>：<spanclass="math inline">□<em>ϕ</em> → <em>ϕ</em></span></li><li><span class="math inline">(4)</span>：<spanclass="math inline">□<em>ϕ</em> → □□<em>ϕ</em></span></li><li><span class="math inline">(<em>B</em>)</span>：<spanclass="math inline"><em>ϕ</em> → □◇<em>ϕ</em></span></li><li><span class="math inline">(<em>D</em>)</span>：<spanclass="math inline">□<em>ϕ</em> → ◇<em>ϕ</em></span></li><li><span class="math inline">(5)</span> 或 <spanclass="math inline">(<em>E</em>)</span>：<spanclass="math inline">◇<em>ϕ</em> → □◇<em>ϕ</em></span></li></ul><p>事实上这里公理 <span class="math inline">(5)</span> 与公理 <spanclass="math inline">(4) + (<em>B</em>)</span>等价。常见公理系统如下定义：</p><ul><li><spanclass="math inline"><em>K</em><sub>𝔏</sub> := (<em>K</em>) + (<em>N</em>)</span></li><li><spanclass="math inline"><em>T</em><sub>𝔏</sub> := <em>K</em><sub>𝔏</sub> + (<em>T</em>)</span></li><li><spanclass="math inline"><em>S</em>4<sub>𝔏</sub> := <em>T</em><sub>𝔏</sub> + (4)</span></li><li><spanclass="math inline"><em>S</em>5<sub>𝔏</sub> := <em>S</em>4<sub>𝔏</sub> + (5)</span></li><li><spanclass="math inline"><em>D</em><sub>𝔏</sub> := <em>K</em><sub>𝔏</sub> + (<em>D</em>)</span></li></ul><h2 id="罗素russell的摹状词理论">罗素（Russell）的摹状词理论</h2><p>摹状词理论是说，某个摹状词 <spanclass="math inline"><em>M</em></span>可以被专名/指称名词所转写，即其可以被描述为这样的形式：<spanclass="math inline">$\exist x, x$</span> 含有 <spanclass="math inline"><em>M</em></span>的性质。举例而言，对于词汇“飞马”的问题，其实际是一个摹状词，可以被转写成如下形式：如果存在一个<span class="math inline"><em>x</em></span>，那么 <spanclass="math inline"><em>x</em></span> 是一匹马，且 <spanclass="math inline"><em>x</em></span>会飞。由此便彻底解决了“飞马”的存在性问题。</p><h2 id="传统语义学的金三角">传统语义学的金三角</h2><p>现在终于可以回到正题了。先看传统语义学的金三角，定点上是意义（meaning）、理性（reason）、模态（modal）。其中意义，如克里普克认为的那样，属于语义学范畴；理性属于认识论范畴；模态则属于形而上学范畴。</p><h3 id="意义">意义</h3><p>先看意义。意义对应某个符号的内涵（intension）与外延（extension）。我们知道皮尔士的指号学中将指号分为了符号、对象和解释项，其中对象偏向于客体一方而解释项偏向于主体一方；索绪尔的符号学则将符号视为能指与所指的二分，并引入意指过程完成能指与所指联系的建立过程。内涵与外延在这里的所指大抵对应于皮尔士的解释项和对象。举论文中的例子：考虑符号长庚星（Hesperus）与启明星（Phosphorus）。注意这里特意用的词语是符号而非摹状词或专名/指称名词。在我们的现实世界中，长庚星的内涵就是晚上在天空中出现的那颗星星，启明星的内涵则是早上在天空中出现的那颗星星。而两个词的外延都指金星（Venus），或者说是太阳系中绕太阳旋转的行星中轨道由内而外的第二颗行星。</p><p>这里要特别小心不要混淆符号、专名和摹状词。构词上来看，《说文解字》有：“启，开也”，“庚，位西方”；一如Hesperus 一词转写自拉丁语<ruby class='minority-language-font-ruby'>Hésperos</ruby>，而这一拉丁语翻译自希腊语<ruby class='minority-language-font-ruby'>Ἕσπερος</ruby>，意为带来夜晚者，同时Phosphorus/Eosphorus 转写自<ruby class='minority-language-font-ruby'>Phōsphoros/Heōsphoros</ruby>，对应的希腊语为<ruby class='minority-language-font-ruby'>Φωσφόρος/Ἑωσφόρος</ruby>，分别意为带来光之人与带来黎明者。正是由于这种词源太过容易注意使得我们很容易直接将符号与摹状词或专名之一联系起来。</p><p>就某种角度来看，意义本身的内涵与外延正对应了分析命题与综合命题。我们知道分析命题是那些谓词包含在主词概念中的命题。举例而言，一个词“独身者”，他必然包含了“具有单身性质的人”这样一种摹状的描述，或者即使退一万步来讲，他至少包含了“独身者”即它本身。从而“独身者是具有单身性质的人”，或者至少“独身者是独身者”这样的命题就是分析命题。相对应的，“某个特定的人是独身者”这样的命题就只能是综合命题了。</p><p>传统语义学认为符号的内涵与外延的统一是通过对象满足内涵与外延的真值决定的。或者说，正是金星那个星星满足是“白天出现在天空的那颗星星”，使得内涵为真，从而“长庚”的外延被限定为了金星。</p><h3 id="理性">理性</h3><p>接着考虑理性。理性对应于先验（a priori）性与后验（aposteriori）性。先验这个词最初源于亚里士多德的分析方法，后来被康德（Kant）由《纯粹理性批判》普及，即是先于经验的。康德把感性分为经验直观（empiricalintuition）和先验直观（intuition apriori），直观大抵可以用胡赛尔（Husserl）意向性理论中的“意向对象直接呈现给意向性活动”来解释。康德说时空观就是先验直观，因为其是随心灵一同先天获得的，而无需经过任何经验的加工与处理，由此物自体界便永远不可知了。</p><h3 id="模态">模态</h3><p>最后看模态。模态对应于必然性（necessity）与偶然性（possibility）的对立，这大概至少可以追溯到亚里士多德。亚里士多德的著名理论“不动的推动者”，后来被约翰·司各脱（JohannesScotus Erigena）改写为了自然的四部份即：</p><ol type="1"><li>未受造而具有创造力的上帝</li><li>未受造而无创造力的虚无</li><li>被创造而具有创造力的原初原因</li><li>被创造而无创造力的物质宇宙</li></ol><p>由此唯有上帝才是必然的，而包含我们的世界在内的一切都是偶然的。正是从这层意义上安瑟勒姆（Anselm）和托马斯·阿奎纳（St. ThomasAquinas）完成了上帝的五路证明中的一种，并由此给笛卡尔（Descartes）根据“我思故我在”建立“思”与“物”的联系奠定了基础。</p><h2 id="金三角的三边">金三角的三边</h2><p>首先考察弗雷格（Fregean）定理。弗雷格将意义与理性联系在一起，定理可以如此表述：</p><p><strong>弗雷格定理</strong>：两个命题 <spanclass="math inline"><em>A</em></span> 和 <spanclass="math inline"><em>B</em></span> 有相同的内容（sense）当且仅当<span class="math inline"><em>A</em> ≡ <em>B</em></span>在认知层面上的区别是微不足道的（cognitively insignificant）。</p><p>考察上述的例子“启明”与“长庚”。弗雷格的意思是“启明”和“长庚”在认识意义上已经有了区别，因为前者暗示了早上出现在天空中的星星，而后者暗示了夜晚中出现在天空的星星。我们知道两者相等是后验的，即后于经验的。相对的，“长庚”与“长庚”这两个命题则是根据同一律而得到的，是先验的。由此分析命题是先验的，综合命题是后验的。我们也知道逻辑实证主义说凡是有意义的命题要么是后验的，要么是可被经验证实的综合的，因此形而上学都是没有意义的，正是这一定理的发展。</p><p>查尔莫斯（Chalmers）这里将内容（sense）与内涵（intension）等价，又将认知意义上无区别（cognitivelyinsignificant）与先验（a priori）等价，从而将原定理如下转写：</p><p><strong>弗雷格定理</strong>：两个命题 <spanclass="math inline"><em>A</em></span> 和 <spanclass="math inline"><em>B</em></span> 有相同的内涵（intension）当且仅当<span class="math inline"><em>A</em> ≡ <em>B</em></span> 是先验的（apriori）。</p><p>这样的等价大抵不会有太多质疑空间。</p><p><strong>卡尔纳普定理</strong>：两个命题 <spanclass="math inline"><em>A</em></span> 和 <spanclass="math inline"><em>B</em></span> 有相同的内涵（intension）当且仅当<span class="math inline"><em>A</em> ≡ <em>B</em></span>是必然的（necessary）。</p><p>也就是说，根据卡尔纳普的说法，假设同一律在全部可能的世界中都是必然为真的，那么“长庚是长庚”这个命题就在全部可能的世界中都必然为真，从而这个命题就是个必然命题。然而我们很容易想象有一个可能的世界中早上和晚上在天空中亮着的星星不是一颗星星，那么在这个可能的世界中“长庚是启明”这个命题就不是真的了，从而这个命题是偶然而，从而其具有不同的内涵。</p><p>最后看康德定理。</p><p><strong>康德定理</strong>：一个命题 <spanclass="math inline"><em>S</em></span>是必然的（necessary）当且仅当其是先验的（a priori）。</p><p>这个我们看过《纯粹理性批判》或者研究过康德的都知道，他先区分了分析的和综合的，先验的和后验的。然而又将直观分为感性直观和知性直观，前者是人类所有而后者是人类所没有的。最后他将感性直观分为经验直观与先验直观。康德指出分析的、先验的命题是必然的，而后验的命题都必定是偶然的。为了调和长久以来争论不休的数学和逻辑的存在性问题，康德提出了先天综合命题，特指如“<spanclass="math inline">1 + 1 = 2</span>”这一类无法处理的问题。当然这类问题的处理我认为罗素处理的比较好。罗素指出所谓<span class="math inline">1 + 1 = 2</span>一类的命题并非是综合命题，而实际上都是满足同一律的分析命题。其实学过公里系统就比较好理解了，在某个集合中，我们是首先规定了后继函数，然后将<span class="math inline">1</span> 的后继记为 <spanclass="math inline">2 := <em>s</em><em>u</em><em>c</em><em>c</em>(1)</span>。</p><h2 id="克里普克的批判">克里普克的批判</h2><p>回到正题。通过康德、弗雷格和卡尔纳普，传统语义学的金三角便被建立起来了。然而克里普克指出，凡是专名/指称名词都是严格的指示词。也就是说，克里普克指出，凡是“长庚”这个专名都指“金星”。在这一基础下，他区分了意义、理性和模态的范畴，并指出存在先验偶然命题与后验必然命题。考虑“长庚是金星”这个命题，它是一个后验必然命题，因为哪怕存在某个可能的世界，由于专名的严格指示词的性质，“长庚”永远都指称金星，从而使得这个后验命题具有了必然性。也就是说如此一来内涵便不能决定外延了，传统语义学的这一坚固观点便被彻底批判。</p><p>形式化地，考虑：</p><p><em>引理 1</em>：<spanclass="math inline">∀<em>x</em>□(<em>x</em>=<em>x</em>)</span></p><ol type="1"><li><span class="math inline">∀<em>x</em>(<em>x</em>=<em>x</em>)</span>这是必然有的公理或可以根据等式断言定义而推出的定理。</li><li><spanclass="math inline">□(∀<em>x</em>(<em>x</em>=<em>x</em>))</span> <spanclass="math inline">(<em>N</em>)</span></li><li><spanclass="math inline">¬∀<em>x</em>□(<em>x</em>=<em>x</em>)</span>假设。</li><li><span class="math inline">$\exist x\neg\Box(x=x)$</span>3，定义。</li><li><span class="math inline">¬□(<em>a</em>=<em>a</em>)</span>4，定义。</li><li><span class="math inline">◇¬(<em>a</em>=<em>a</em>)</span>5，定义。</li><li><spanclass="math inline"><em>W</em> : ¬(<em>a</em>=<em>a</em>)</span>6，定义。</li><li><spanclass="math inline"><em>W</em> : ∀<em>x</em>(<em>x</em>=<em>x</em>)</span>1，定义。</li><li><spanclass="math inline"><em>W</em> : <em>a</em> = <em>a</em></span>替换，这是必然有的公理或可以根据等式断言定义而推出的定理。</li><li><span class="math inline">∀<em>x</em>□(<em>x</em>=<em>x</em>)</span>7、9 矛盾，3。</li></ol><p>从而有：</p><ol type="1"><li><spanclass="math inline">(<em>x</em>=<em>y</em>) → (<em>ϕ</em>[<em>z</em>∖<em>x</em>]→<em>ϕ</em>[<em>z</em>∖<em>y</em>])</span>这是必然有的公理或可以根据等式断言定义而推出的定理。</li><li><spanclass="math inline">(<em>x</em>=<em>y</em>) → (□(<em>x</em>=<em>x</em>)→□(<em>x</em>=<em>y</em>))</span>1，令 <spanclass="math inline"><em>ϕ</em>(<em>z</em>) = □(<em>x</em>=<em>z</em>)</span></li><li><span class="math inline">∀<em>x</em>□(<em>x</em>=<em>x</em>)</span>引理 1。</li><li><span class="math inline">∀<em>a</em>□(<em>a</em>=<em>a</em>)</span>3。</li><li><span class="math inline">□(<em>x</em>=<em>x</em>)</span>替换，这是必然有的公理或可以根据等式断言定义而推出的定理。</li><li><span class="math inline">(<em>x</em>=<em>y</em>)</span> 假设。</li><li><spanclass="math inline">□(<em>x</em>=<em>x</em>) → □(<em>x</em>=<em>y</em>)</span>2、6 MP。</li><li><span class="math inline">□(<em>x</em>=<em>y</em>)</span> 5、7MP。</li><li><spanclass="math inline">(<em>x</em>=<em>y</em>) → □(<em>x</em>=<em>y</em>)</span>6、8 演绎定理。</li><li><spanclass="math inline">∀<em>x</em>∀<em>y</em>((<em>x</em>=<em>y</em>)→□(<em>x</em>=<em>y</em>))</span>全称量词引入，必然有的公理。</li></ol><p>克里普克接着考虑两个符号“水”和“<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”，令 <spanclass="math inline"><em>x</em>=</span>“水”，<spanclass="math inline"><em>y</em>=</span>“<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”，则有 <spanclass="math inline">(</span>“水”<span class="math inline">=</span>“<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”<spanclass="math inline">) → □(</span>“水”<spanclass="math inline">=</span>“<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”<spanclass="math inline">)</span>。</p><h2 id="查尔莫斯的二维语义学">查尔莫斯的二维语义学</h2><p>为了解决这个问题，查尔莫斯提出了二维语义学。他指出所谓的可能性，这里的可能性本身就分为了认识论上的可能性与形而上学的可能性两个维度。前一个维度暗示原先的世界本可能是怎样的（away the actual world might turn out tobe），或者说撇开我们已经固定下来的对这个现实世界（actualworld）的知识，一个人认为世界可能是怎样为现实的（considers a possibilityasactual）。后一个维度被称为形而上学的可能性维度，这里暗示世界可能是但却不是怎样存在的（away the world might have been but isnot），或者说一个人认为这个世界是怎么反事实地存在的（considers apossibility ascounterfactual）。由此克里普克的批判便被置于了第二个维度，第一个维度的语义学并未受到冲击。</p><p>查尔莫斯由此提出了核心定理并修正了弗雷格定理：</p><ul><li><strong>核心定理</strong>：对任何命题 <spanclass="math inline"><em>S</em></span>，其是先验的当且仅当其在第一维度有必然的内涵（hasa necessary 1-intension）。</li><li><strong>新弗雷格定理</strong>：两个命题 <spanclass="math inline"><em>A</em></span> 和 <spanclass="math inline"><em>B</em></span> 有相同的第一维度的内涵（the same1-intension）当且仅当 <spanclass="math inline"><em>A</em> ≡ <em>B</em></span> 是先验的（apriori）。</li></ul><h3id="上下文内涵contextual-intension与知识内涵epistemic-intension">上下文内涵（contextualintension）与知识内涵（epistemic intension）</h3><p>为了解决似乎永远不存在先验的且有必然的认识论内涵的命题这一问题，查尔莫斯从两个角度考察符号与命题的内涵。对于上下文内涵，处于上下文中的符号（token）本身已经存在了类型（expressiontype）上的差异。对于某个上下文，或者按他的说法在某个以说话者为话语出发点的世界（centeredworlds）中，某个符号已经存在了类型上的差异：正字法（orthography）上看，“长庚”这个能指，凡是能指相同的符号，都具有相同的正字法类型；语言（linguistic）角度看，“水（water）”这个能指，如果这个能指出现在两个不同的上下文语境中，那么它们仍然具有相同的语言类型。语义上看，如果两个“水”这个能指，有相同的语义，或者至少某方面有部份相同的语义或内容，那么它们就具有相同的语义类型。</p><p>由此，考虑三个不同的可能的世界。第一个为现实世界，“水”作为所指称的那个无色无味生命之源的液体，其化学式为“<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”；第二个可能的世界，“水”仍然指那个无色无味生命之源的液体，但其化学式变成了“<spanclass="math inline"><em>X</em><em>Y</em><em>Z</em></span>”；第三个可能的世界，“水”指金属，那个无色无味生命之源的液体的化学式仍然是“<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”。这样一来表达式“水是<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”的真值由于其在现实世界为真，从而该表达式的正字法上下文内涵在现实世界为真，而在后两个可能的世界为假。这个意味是因为在现实世界里“水”与“<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”这两个能指被构建了正字法意义上的映射关系（通过内涵与外延但随后等价关系不再依赖于意义本身），而后两者并未构建这种映射关系，因而正字法意义上的上下文内涵总为假。</p><p>还是同样的例子，考虑语言上的上下文内涵。在第一个世界“水”与“<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”这两种表达方式被建立映射关系，而后两者中这种映射关系是否建立是未知的。从而语言意义上的上下文内涵在后两个世界中是未知的，因为这两种表达的映射关系可能被建立也可能未被建立。</p><p>或者也可以这么理解。一个能指符号 <spanclass="math inline"><em>A</em></span> 对应于一个所指，所指被分为内涵<span class="math inline"><em>i</em></span> 与外延 <spanclass="math inline"><em>e</em></span>。内涵也就是说这个能指能够被用罗素的摹状词理论进行转写，外延也就是说这个能指其实是被变为了一个限定指示词，一个专名。对于某两个能指，正字法类型表明其映射关系建立在能指上；语言类型表明其映射关系建立在外延上；语义类型表明其映射关系建立在内涵上。就这种意义上，根本无法找到某个符号使得其在第一维度具有必然的内涵（哪怕是正字法上下文内涵），也因而核心定理永远无法满足。</p><p>借助于知识内涵（epistemicintension），查尔莫斯提出了情景（scenario）的概念，借此解决可解读性（scrutability）的问题。对于全部可能的世界中，有一些是可能的世界在某些程度上与我们的世界（中心的世界）相同，而另一些可能的世界则与我们的现实世界（中心的世界）完全不同，被称为反事实的世界。对于后者，我们很容易从反事实的、形而上学意义上的可能性出发，首先将特定能指与外延联系起来。对于前者，就能够从认识论意义上的可能性出发，将特定能指与内涵联系起来。某个符号序列组成的命题的知识内涵是情景到真值的映射，使得：</p><p>对于某个中心的世界 <spanclass="math inline"><em>W</em></span>，我们说该世界的某个说话者处于情景<span class="math inline"><em>W</em></span> 中。我们说在情景 <spanclass="math inline"><em>W</em></span> 命题 <spanclass="math inline"><em>S</em></span> 的知识内涵（epistemicintension）是真的当且仅当有某个对情景 <spanclass="math inline"><em>W</em></span> 的标准化描述 <spanclass="math inline"><em>D</em></span> 使得在情形 <spanclass="math inline"><em>D</em></span> 中 <spanclass="math inline"><em>S</em></span>是认识论意义上必然的（epistemically necessitates）。</p><p>据此查尔莫斯做了更多定义：</p><ul><li>丰富性原则（Plenitude Principle）：对全部的命题 <spanclass="math inline"><em>S</em></span>，其是知识可能的（epistemicallypossible），如果有某个情形 <span class="math inline"><em>W</em></span>使得在情形 <span class="math inline"><em>W</em></span> 下命题为真。</li><li>形而上原则（Metaphysical Plenitude）：对全部的命题 <spanclass="math inline"><em>S</em></span>，其是知识可能的（epistemicallypossible），如果有某个形而上意义上可能的世界使得命题为真。</li><li>知识原则（Epistemic Plenitude）：对全部的命题 <spanclass="math inline"><em>S</em></span>，其是知识可能的（epistemicallypossible），如果有某个知识完全的句子 <spanclass="math inline"><em>L</em></span>，其蕴含 <spanclass="math inline"><em>S</em></span>。</li></ul><p>从而可以定义可解读性（scrutability）：对于被一个说话者使用的绝大多数符号<span class="math inline"><em>T</em></span>，进而对涉及 <spanclass="math inline"><em>T</em></span> 的任何真理 <spanclass="math inline"><em>S</em></span> 来说，都存在一个真理 <spanclass="math inline"><em>D</em></span>，<spanclass="math inline"><em>D</em></span> 独立于 <spanclass="math inline"><em>T</em></span>，并且知道 <spanclass="math inline"><em>D</em></span>是事实使这个说话者处在一个能够（不需要来自经验的进一步信息，仅凭理想化的理性反思）知道<span class="math inline"><em>S</em></span> 也是事实的位置上。</p><p>或者也可以说，查尔莫斯的二维语义学实际上已经具有了日常语言学派和人工语言学派双方的特点了。克里普克将专名全都视为严格指示词，从而能将其作为词项直接应用到他的模态逻辑中。二维语义学的第二维度对应了这种能指与所指的构建，而二维语义学的第一维度与情景概念正是为了给被还原成严格指示词的专名符号重新赋予摹状词属性，就好像维特根斯坦后来所说的人们生活在其中的那种语言游戏。而为了确保可解读性查尔莫斯提出的这种绝对理性的对情形/决定语言游戏的生活形式的规范描述，成为了架在日常语言上的人工语言桥梁，这意味着似乎好像仍然必须要有一种需要认为构建的规范的语言，来完成对不同情形下符号的转写释义任务。</p><p>或者说，假设“<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”为专名，我们同克里普克一样考察“水”这个符号。二维语义学的两个维度分别对应了以下事实：</p><ol type="1"><li>“水”这个符号实际上是一个摹状词，其等价于这样的集合：<spanclass="math inline">$\{x|\exist x,f(x)\}$</span>，其中函数 <spanclass="math inline"><em>f</em>(<em>x</em>)</span> 代表 <spanclass="math inline"><em>x</em></span>满足“水”这个符号/摹状词指定的性质的集合。此时，“水”<spanclass="math inline">≠</span>“<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”。或者应该说，“水”<spanclass="math inline">⊃</span>“<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”。这对应于二维语义学的第一个维度。</li><li>“水”这个符号实际上是一个专名，从而“水”<spanclass="math inline">=</span>“<spanclass="math inline"><em>H</em><sub>2</sub><em>O</em></span>”。这对应于二维语义学的第二个维度。</li></ol><h2 id="从维特根斯坦到海德格尔">从维特根斯坦到海德格尔</h2><p>现在重新考虑这个问题。蒯因批判克里普克对专名的使用，认为其对专名的使用正是预设了本质存在于对象内的前提，从而专名正对应了指称对象的本质本身，如果本质存在的话。从这层意义上看，查尔莫斯的回应实际上是通过扩展传统语义学来完成对克里普克摹状词/专名、认识论/本体论的二元对立的回应。倘若按照后期维特根斯坦暗示的那样，本质并不存在的话，二维语义学确实又将塌缩回传统语义学了。</p><p>另一方面仔细考察查尔莫斯的情景概念。情景与中心世界、可能世界种种概念的设置不已经先验预设了这样一种判断，即仿佛我们总能穷尽地通过逻辑验证完成对特定情景/中心世界下命题真值的判断了吗？然而事实上这确实是一种有些太过极端的逻辑实证主义风格的预设了。又或者是，像早期维特根斯坦与罗素那样，事先预设了事实与事态的二分对立，这里事态不正是可能世界的命题吗？</p><p>应该承认，上下文内涵中对正字法内涵的考察的确触及到了更深层的东西，将语言已经解构到了能指符号本身的地步，从而可以意识到这样一个问题，即可能在某些可能的世界中，逻辑判断符并不捕获其在我们生活的现实世界中所捕获的意义。</p><p>从这个角度来看，我们确实应该重新回到后期维特根斯坦与蒯因所提出的“翻译的不准确性”之中去了。查尔莫斯所谓情景，其实只是维特根斯坦所谓的、我们尚未发现（或者不可能发现但可能存在，从某种意味上也同样是尚未发现）的生活形式罢了，在这种生活形式中生活的人们仍然会进行对应的语言游戏，而不生活在其中的我们很容易可以想象存在一个可解释的、进行翻译的方式。就这一层面上看，维特根斯坦的世界图式，又或是塞拉斯所说的那个被语言做出承诺的、由进行语言游戏的居民所建造的世界故事其实也不过又是（递归的）另一种更加抽象的生活形式。只不过是可能的世界在当下的时机已经变成了不可能的世界，这种总有种唯实论色彩的共相式的世界图式才似乎永远处于黑格尔绝对精神式的运动之中。</p><p>回到解释问题。查尔莫斯认为对于某个情景 <spanclass="math inline"><em>W</em></span> 和某个命题 <spanclass="math inline"><em>S</em></span>我们能够找到一种对情景的标准描述使得这个命题在那个描述下是必然的，或者说，对于其他情景也是可解读的。撇开那股人工语言学派的色彩，我们很容易发现这正是像蒯因所说的那个理论的边界问题一样，当这样的规范描述出现问题时，只需要对规范描述本身进行调整即可。</p><p>我不由得想到海德格尔所说的操劳的人们。锤子作为锤子是什么呢？海德格尔区分手边工具与应手工具。当直棍与石块的组合被用于敲击以建造房屋时，其就成为了锤子。而当其未被使用时，其就只是手边的工具，或者也可能不是工具而已。对手边与应收的区分事实上正是对生活形式从另一个角度上的审视。</p><p>最后考虑德里达的“延异”。按照他的说法，万事万物都在“延异”之中，颇有些赫拉克利特的味道。但这种“延异”虽然标榜着对传统结构的消解，但延异本身是否又成为了新的结构呢？或者说一个问题是，延异本身是否在延异呢？如果延异之后仍然是延异，那么他的延异体现在哪里呢？不过延异本身倒却是也契合语言本身。无论是查尔莫斯所说的扩展了的上下文内涵、知识内涵，还是在变化着的生活形式中被主体进行的语言游戏，都暗示着语言本身的“延异”。</p><p>追寻怎么发生的、偶然为什么是如此的偶然实际上还是会落入某种本质主义的窠臼，仿佛总有些东西是永恒在那的，在发生的过程中总有些可以被追溯到“不动的推动者”的东西。仍然潜藏在现在哲学深处的这个最善的善，只有在重新回归到维特根斯坦所提出的生活形式之中、海德格尔所谓的被存在抛入其中操劳的人们的世界之中才终于短暂的消失。</p><h2 id="参考文献">参考文献</h2><ol type="1"><li>Chalmers, D. J. (2006). The Foundations of Two-DimensionalSemantics. In Oxford University Press eBooks (pp. 55–140).https://doi.org/10.1093/oso/9780199271955.003.0004</li><li>Gensler, H. J. (2012). Introduction to Logic. Routledge.http://books.google.ie/books?id=HnRekA0qkPsC&amp;printsec=frontcover&amp;dq=Introduction+to+Logic&amp;hl=&amp;cd=1&amp;source=gbs_api</li></ol>]]></content>
    <pubDate>Sat, 20 Jul 2024 07:37:48 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[宝可梦晶灿钻石／明亮珍珠与宝可梦 Home 联动相关]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/PokemonBDSP-20230624</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/PokemonBDSP-20230624</guid>
    <content type="html"><![CDATA[<h1id="宝可梦晶灿钻石明亮珍珠与宝可梦-home-联动相关">宝可梦晶灿钻石／明亮珍珠与宝可梦Home 联动相关</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/PokemonBDSP-20230624/cover-picture.jpg" alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2023.06.24<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2 id="bdsp-传输限制">bdsp 传输限制</h2><p>由于晶灿钻石／明亮珍珠（下称 bdsp）1.1 版本的复制 bug，在之后 ILCA开放与 Home 联动时对特定宝可梦的传输做出了一定的限制。</p><p>对于此，<ahref="https://wiki.52poke.com/wiki/Pokémon_HOME">神奇宝贝</a>百科上的记述如下：</p><blockquote><p>在正常游戏流程中仅可获得 1 只的宝可梦，从同一个游戏记录中最多仅可寄放1 只到 Pokémon HOME。例如，从《晶灿钻石／明亮珍珠》将帝牙卢卡寄放到Pokémon HOME 后，无法再次从该游戏记录将帝牙卢卡寄放到同一个 Pokémon HOME账号。<br />部分通过游戏漏洞或修改获得的宝可梦无法寄放到 Pokémon HOME。<br />因为程序漏洞问题，既不能寄放晃晃斑也不能将其领取到《晶灿钻石／明亮珍珠》；只有来自《晶灿钻石／明亮珍珠》的土居忍士可以领取到《晶灿钻石／明亮珍珠》。<br />不能领取超极巨化的皮卡丘、喵喵及伊布到《晶灿钻石／明亮珍珠》。</p></blockquote><p><ahref="https://www.serebii.net/pokemonhome/transfer.shtml">时拉比</a>上的记述则是：</p><blockquote><p>Pokémon Brilliant Diamond &amp; Shining Pearl have an extralimitation where you can only put 1 of each species of Special Pokémon(Legendary, Mythical) into Pokémon HOME from each save file.<br />Blocked Pokémon:<br />Pikachu, Eevee and Meowth with the Gigantamax Factor can’t be placed inthe game<br />Nincada can’t be placed in the game unless it came from BrilliantDiamond &amp; Shining Pearl<br />Spinda can’t be added in the game or removed from the game If a Pokémongets Hyper Trained in Scarlet &amp; Violet and isn’t Level 100, itcannot be added back until it is Level 100</p></blockquote><p>当然，问题在于这两个相对权威的百科网站对实际上的传送规则并没有更详细的说明。故而，笔者为此做了一些测试。实际上来说，从bdsp 向 home端的传送对神幻兽的限制并不如百科上字面理解的那样严格。事实上，这一限制（即同种神幻兽只能从存档中向home 转移一只）仅对来自 bdsp同一版本（bd/sp）的神幻兽起作用。另一方面，在遵循上述限制的前提下，同一个bdsp 的存档可以向 home传输的来源地标记为bdsp神奥地区的神幻兽宝可梦，其最多可以传输一只通常颜色的神幻兽宝可梦，以及一只异色（闪光）该种神幻兽宝可梦，即共计两只。从目前的表现反推，考虑是从Home 的追踪码结合来源标记系统作出的限制。</p><p>下面以几个例子详述：</p><ol type="1"><li>假如有来自 bdsp 神奥地区（来源标记为 <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/PokemonBDSP-20230624/Sinnoh_symbol.png" title=":size=16"alt="来源标记" />）的帝牙卢卡 A，以及来自其他地区（无来源标记的g3、g4、g5，或者不为先前提到的来源标记的地区，包含旧神奥）的帝牙卢卡B，那么帝牙卢卡A 和 B 可以同时从 bdsp 取放到 home。</li><li>假如有来自其他地区（来源标记不为 <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/PokemonBDSP-20230624/Sinnoh_symbol.png" title=":size=16"alt="来源标记" />）的帝牙卢卡 A 和帝牙卢卡 B，那么帝牙卢卡 A 和 B可以同时从 bdsp 取放到 home。</li><li>假如有帝牙卢卡 A 和帝牙卢卡 B，两者都有来源标记为 <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/PokemonBDSP-20230624/Sinnoh_symbol.png" title=":size=16"alt="来源标记" />，其中帝牙卢卡 A 出生于 bd，帝牙卢卡 B 出生于sp，那么将帝牙卢卡 A 由 bd 经过 home 取放到 sp 后，帝牙卢卡 A 和帝牙卢卡B 可以同时从 bdsp 取放到 home。</li><li>假如有帝牙卢卡 A 和帝牙卢卡 B，两者都有来源标记为 <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/PokemonBDSP-20230624/Sinnoh_symbol.png" title=":size=16"alt="来源标记" />，其中帝牙卢卡 A 出生于 bd，帝牙卢卡 B 出生于sp，将帝牙卢卡 B 经过连接交换直接从 sp 传输到 bd 后（即未经过home），那么帝牙卢卡 A 和帝牙卢卡 B 至多只能有一只可以从 bdsp 取放到home。</li><li>同样的，假如有帝牙卢卡 A 和帝牙卢卡 B，两者都有来源标记为 <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/PokemonBDSP-20230624/Sinnoh_symbol.png" title=":size=16"alt="来源标记" /> 且都出生于 bd，那么帝牙卢卡 A 和帝牙卢卡 B至多只能有一只可以同时从 bdsp 取放到 home。</li></ol><h2 id="规避传输限制的方法">规避传输限制的方法</h2><p>当然，有限制就有解决方法。实质上来说，最关键的预防方式是尽可能不要将来源标记为<img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/PokemonBDSP-20230624/Sinnoh_symbol.png"title=":size=16" alt="来源标记" />的神幻兽放到同一个bdsp的游戏存档中。然而，假如已经不幸发生了这样的情况，解决方法也不是没有。</p><p>事实上，可以参考上述例子的第 4 条，可以考虑将多余的来源标记为 <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/PokemonBDSP-20230624/Sinnoh_symbol.png" title=":size=16"alt="来源标记" /> 的神幻兽通过连接交换（而非home），直接传输到一个新的游戏存档中，再利用home从这个新的存档中将这只神幻兽取出。尽管成本较高，但这也是目前唯一可以对这一类神幻兽存取的方法了。</p><h2 id="附录">附录</h2><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/PokemonBDSP-20230624/picture-1.png"title="神奇宝贝百科罗列出的特殊的宝可梦。其中，“传说中的宝可梦”和“幻之宝可梦”两个类别的宝可梦都会受到 bdsp 的上述传输限制。这一限制也包括了可由宝可梦培育从蛋中孵化的霏欧纳"alt="传说中的宝可梦" /><figcaption aria-hidden="true">传说中的宝可梦</figcaption></figure>]]></content>
    <pubDate>Thu, 18 Jul 2024 17:34:17 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[如何评价动画《DARLING in the FRANXX》第 X 集？]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/archive/ZhiArchive/DitfEpisodeComment-20180415</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/archive/ZhiArchive/DitfEpisodeComment-20180415</guid>
    <content type="html"><![CDATA[<h1 id="如何评价动画darling-in-the-franxx第-x-集">如何评价动画《DARLINGin the FRANXX》第 X 集？</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/cover-picture.jpg"alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.04.21<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2 id="如何评价动画darling-in-the-franxx第十四集">如何评价动画《DARLINGin the FRANXX》第十四集？</h2><blockquote><p>本文首发于<ahref="https://www.zhihu.com/question/272379302/answer/367095277">知乎</a><br />发表日期：2018.04.15</p></blockquote><p>照例说说这集制作方面的亮点吧</p><hr /><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-2.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>开篇便是 2：35：1的纵横比画面，同时画面逐渐闭合。画面以纵向移镜的方式，拍摄 02站立在槲居树前的画面。画面中 02居于画面正中央，头及画面约三分之一处，面前则是巨大的树。整体构图与颜色的选择都与第六集中广濒死的那一幕镜头一样，旨在将广与02 进一步联系起来，推动剧情发展。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-3.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>随后转入的是 franxx的场景，纯白的画面亮度却较低，帮助营造了这集比较压抑的氛围。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-4.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>随后莓将 02 拉出驾驶舱后，运用的是一个02的主观镜头。同样使用 2.35：1的纵横比。同时，画面亮度仍然偏暗，画面正中央是倒下的广，与第六集中的广倒下的镜头构图十分相似。同时，将莓的说话声与其他声音响度调低，来将观众的注意力放在02 的话语之上，来展现出 02 的内心世界。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-5.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>随后是对 02 脸部特写的反打镜头。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-6.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>仍然是 2.35：1 的纵横比。三个 franxx围在鹤望兰边，而鹤望兰倒在正中。这样的调度也使得氛围更加压抑。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-7.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>转入对破碎的镜子的特写，并以此结束第一幕。</p><hr /><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-8.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>第二幕转入室内。同样降低莓话语的响度，来引导观众加深对 02的心理的理解。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-9.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>莓的这一镜头才用了镜头遮蔽。黑色的边框压缩着莓的画面，体现出了 02对莓的忽视。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-10.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>这里使用了夸张的 5.2：1 的纵横比，拍摄的是近景，却将 02的嘴部放在画面上，大概是为了体现出 02 压抑的内心。</p><hr /><p>在这一集中，对人物（尤其是02）嘴部、眼睛、手的特写明显多了，这也是展现出人物情感张力的一个方法。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-11.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>例如这一处，对 02 咬紧牙的嘴进行特写，将观众的注意力限定在了 02咬紧的牙上，很容易让观众感受到 02 的心理。</p><hr /><p>这一集中，所有回忆部分均使用了 2.35：1的纵横比以作区分。此外，有趣的一点是，在前半部分中，所有回忆部分颜色都偏蓝，似乎模拟了日光夜景的拍摄效果，同时画面切换的也越来越快。</p><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-12.webp"alt="Ditf Ep.14 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-13.webp"alt="Ditf Ep.14 截图" /></p></section><p>这样处理的效果，颜色上蓝色很能给人一种压抑感，同时切换速度逐渐增加的多个画面，得以使观众感跟随广对对他所经历的事进行一个回忆，在记起前去剧情的同时，给观众失落的感觉。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-14.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>而在最后，光进行回忆时，画面转回正常配色，切换的速度也变慢了，甚至还采用了叠化的剪辑方式，很容易让观众感受到广正逐渐回心转意，在回忆达到高潮出时，切回现在的镜头，广猛的一个转身要去追02。从怒斥 02“怪物”到追回 02以及之后的流泪，这样大幅度的情感变化基本通过这样一个回忆来完成。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-15.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>相似的，莓的回忆部分同样是这样的处理方式，奠定了莓表白的气氛。甚至可以说，这集很多处情感的自然转变，都是借由记忆的不同表现手法得以实现的。</p><hr /><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-16.webp"alt="Ditf Ep.14 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-17.webp"alt="Ditf Ep.14 截图" /></p></section><p>这一集构图上任务基本处于画面正中，多处画面都采用正面或背面打光的方式，大量增添了画面中的阴影，来制造压抑、失落的整体情感氛围。</p><hr /><p>剧情上回收大量情感线：</p><ul><li>广和充的矛盾终于解开了</li><li>五郎再度被虐（前期五郎与莓的情感集大概就是为了这一幕做准备）</li><li>莓对广的情感达到最高潮</li><li>广与 02 的情感在达到高潮的同时戛然而止，为后续剧情铺垫</li></ul><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-18.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>在一集中就将前十三集所涉及的几乎所有没能展开完全的情感全部展开并达到高潮，这是很难做到的。而在ditf本身角色与事件间的关联性就很强，也因此这一集中就能很自然的体现人物情感。</p><hr /><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-19.webp"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><p>片末将 02离开的镜头与广和莓的镜头交替的剪在一起（平行对照的剪辑方法），以此深化观众心中广和02的联系，来作之后剧情上的铺垫。最后采用的这个仰角镜头，也将这几集以来的压抑氛围一扫而空。02在第一集离开，而又在 14 集离去，也难免让人唏嘘。</p><hr /><p>目前看下来国家队有几处缺点：</p><ol type="1"><li>前期剧情过多。国家队前半段结束，主要铺设好了故事的背景，并塑造好了人物形象，展现了他们之间的关系与情感。这一部分占用了25 集动画中的 14集。对于一个拥有宏达世界观且还有大量对故事背景的伏笔未展开的动画来说，对人物的形象和关系部分明显过多了。而之后的后半部分应当就要在剧情发展上有更多的进展了，前期埋下的伏笔也快要解开了。</li><li>前后部分关联略少。由于上述原因，国家队在故事背景的世界观方面还未能展开，这时候本应继续留下足够多的伏笔，而到14集为止，国家队所留下的仅有叫龙、深渊、大人等类似于设定的几处伏笔，这显然有些少了。前后关联不够大，导致的就是剧情上的割裂感。所以前14 集作为一部青春片，已经能给观众完结的感觉了。</li></ol><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-1.gif"alt="Ditf Ep.14 截图" /><figcaption aria-hidden="true">Ditf Ep.14 截图</figcaption></figure><h2 id="如何评论darling-in-the-franxx第十五集">如何评论《DARLING in theFRANXX》第十五集？</h2><blockquote><p>本文首发于<ahref="https://www.zhihu.com/question/274158101/answer/372852569">知乎</a><br />发表日期：2018.04.22</p></blockquote><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-21.webp"alt="Ditf Ep.15 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-22.webp"alt="Ditf Ep.15 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-23.webp"alt="Ditf Ep.15 截图" /></p></section><p>这两集国家队的问题挺明显了，一语以概之，就是：演出不错，脚本不行。</p><p>例如这集，演出方面的一大亮点是在画面上再度使用画中字幅的手法，单兵不仅仅如此，而是在人物进行对话，情节在进行发展的同时出现的，以达到传达02 和广的内心的作用，这种手法确实挺让人眼前一亮的。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-24.webp"alt="Ditf Ep.15 截图" /><figcaption aria-hidden="true">Ditf Ep.15 截图</figcaption></figure><p>而之后还将这种手法与闪回的记忆画面快速剪辑到一起，更强化了人物的情感，这其实挺不错的。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-25.webp"alt="Ditf Ep.15 截图" /><figcaption aria-hidden="true">Ditf Ep.15 截图</figcaption></figure><p>而且一集下来其实观感还可以的，对一般观众来说也可以算得上比较燃，塑造气氛的方法我曾在别的回答中提到过了，简单来说就是多给信息，加快节奏，多用战斗场景和快节奏音乐的大量使用。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-26.webp"alt="Ditf Ep.15 截图" /><figcaption aria-hidden="true">Ditf Ep.15 截图</figcaption></figure><p>不过这个剧情设置很有问题。一方面，上一集刚分开的广和 02在这一集中又重逢了，还立刻变为了全新鹤望兰，剧情上有些过快了。另一方面，人物间的情感冲突本身已经铺垫了许多集，这一集就直接钦定广和02，让莓自己认输，这种方法不太讨巧。同时，过度的加强对广和 02间情感的塑造作用，难免更让现在的 ditf偏向于机甲版人渣的本愿。而以这个角度来看，故事就显得有些老套了。另外，人物的台词设置也十分令人尴尬。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-27.webp"alt="Ditf Ep.15 截图" /><figcaption aria-hidden="true">Ditf Ep.15 截图</figcaption></figure><p>说回来最后的那部分伏笔留的还不错，颇有些电影彩蛋的意味，只可惜这集去掉了ED画面而以剧情上的发展画面代替，使得本来可能有些亮点的地方也不那么好了。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-28.webp"alt="Ditf Ep.15 截图" /><figcaption aria-hidden="true">Ditf Ep.15 截图</figcaption></figure><p>话说这集是不是物化男性啊（笑</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-20.webp"alt="Ditf Ep.15 截图" /><figcaption aria-hidden="true">Ditf Ep.15 截图</figcaption></figure><h2 id="如何评价动画darling-in-the-franxx第十七集">如何评价动画《DARLINGin the FRANXX》第十七集？</h2><blockquote><p>本文首发于<ahref="https://www.zhihu.com/question/276036278/answer/390151942">知乎</a><br />发表日期：2018.05.13</p></blockquote><p>这一话镜头上还是挺出色的，举两个例子：</p><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-30.webp"alt="Ditf Ep.17 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-31.webp"alt="Ditf Ep.17 截图" /></p></section><p>首先是上两图的情节部分，均使用了仰角镜头。注意镜头中对角色站位的调度：亲卫队的人位于镜头左侧，13小队则在右侧，以这一幕主要角色心在中央。有趣的是，很容易看出亲卫队的人由于远近原因比例远大于13小队（甚至一个人大过整个小队），基本撑到了屏幕上下边缘，而小队则都在画面三分之一处。这样的镜头和调度直观的展现出了亲卫队成员对13 小队的压迫以及他的强势，也增强了压抑感。</p><p>我想说的第二个例子中镜头的使用大概最能代表这一集整体的运镜风格，是充和心在花园的那一段。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-32.webp"title="Cut 1 充眼部大特写" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-33.webp"title="Cut 2 心近景 侧面拍摄" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-34.webp"title="Cut 3 充脸部特写" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-35.webp"title="Cut 4 心脸部特写 正面拍摄" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-36.webp"title="Cut 5 心抚摸充头部的特写" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-37.webp"title="Cut 6 心脸部特写 侧面拍摄" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-38.webp"title="Cut 7 背面拍摄" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-39.webp"title="Cut 8 前八个镜头基本铺设好了之后情节发展的情感基础"alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-40.webp"title="Cut 9 突然转入心嘴部大特写，配合着台词的变化预示着新一段情节的展开"alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-41.webp"title="Cut 10 近景" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-42.webp"title="Cut 11" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-43.webp"title="Cut 12 心眼部大特写" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-44.webp"title="Cut 13 充脸部特写" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-45.webp"title="Cut 14 侧面拍摄的心嘴部大特写" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-46.webp"title="Cut 15 近景拍摄" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-47.webp"title="Cut 16" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-48.webp"title="Cut 17" alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-49.webp"title="Cut 18 这几个镜头主要以嘴部大特写和侧面拍摄的近景镜头（拍摄对象以胸部为主）所组成"alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-50.webp"title="Cut 19随着充的挥手转回正常的近景拍摄，结束这一段剧情"alt="Ditf Ep.17 片段分镜头截图" /><figcaption aria-hidden="true">Ditf Ep.17 片段分镜头截图</figcaption></figure><p>很容易感受到，这一部分镜头切换的较快，同时拍摄主要有以下几种：大特写（对眼睛和嘴）、特写、近景拍摄（拍摄对象多以脖子及以下部位为主），在这些镜头中进行切换。另一方面，有遵循着180度线原则，并在此基础上将摄影的方位改变为了中轴线上，充背后、对充和心分别的斜侧面镜头。类似的摄影剪辑方法在爱情类电影中出现较多，能较好的传达出人物之间逐渐加深的感情以及双方的主被动关系，但在动画中较少使用。</p><p>而整个一集也很喜欢在多角度的近景、特写、大特写等镜头中进行切换，并未曾越过中轴线，这与先前的整体拍摄风格不大一样。</p><hr /><p>剧情上是不错的。一方面继续进行日常的展开，逐步加强人物间的情感与冲突，同时随着亲卫队与13 小队冲突达到顶峰进一步推动剧情发展，同时铺设下足够的伏笔。</p><p>另一方面，又同时插入叫龙公主与假人类大人的镜头来推动世界观方面的剧情走向，似乎让这集变成了一个双线叙述的故事，但实则这一条线的镜头并不多。这样的形式有些少见，但倒也更体现出了制作者们的意思：目前先青春少男少女间的爱恋和冲突，随后再转入整体社会和人的冲突，来进一步展现世界观。</p><p>这样的安排其实还蛮不错的：主次分明，又为后续剧情打好了基础，每一条线路的叙述都安排的恰到好处。</p><hr /><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-51.webp"alt="Ditf Ep.17 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-52.webp"alt="Ditf Ep.17 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-53.webp"alt="Ditf Ep.17 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-29.webp"alt="Ditf Ep.17 截图" /></p></section><h2 id="如何评价动画darling-in-the-franxx第十九集">如何评价动画《DARLINGin the FRANXX》第十九集？</h2><blockquote><p>本文首发于<ahref="https://www.zhihu.com/question/277564528/answer/402166548">知乎</a><br />发表日期：2018.05.27</p></blockquote><p>剧情上，正如我在前两周指出的那样，这一集同样采用平行式的双线叙述，而且两者比重差不多，将ditf从青春恋爱拉回了主线剧情。一边是博士视角的历史科普，以博士和他的妻子（？）为主角，补全了整个ditf世界观的设定，另一方面则承接上一集，进一步展开小队与大人间的冲突，最终让小队开始“追寻自由”。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-55.jpg"alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><p>大问题没有，但我个人感觉这个双线式的叙述做的不够好。以博士为主视点快速回顾现代史来交代世界观，和以小队为主角追寻自由的主线剧情，两者关联不大，难免有强硬拼凑赶时间让动画更完整之嫌。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-56.webp"alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><p>从演出和分镜效果来看，果然运镜风格又一次大幅度变化，即不像开始时一味追求违背通常的现实主义/古典主义拍摄方法而行，也不是前几集那种古典主义式的拍摄手法。从这一集来看，运镜是十分风格化的。这集中表现在博士视角讲述历史的部分，除去常见的将多用静态画面和重要事件剪到一起外，这一次运镜的独特风格更多表现在画面本身，这些画面很好的传达出了象征意味。</p><p>最能让观众主观感受到的是镜头遮蔽这一手法的频繁运用。</p><hr /><p>例如开篇处：</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-57.webp"alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><p>这个镜头主要分为两部分，撑满了画面上下的 ape大人脸部特写（右侧）与缩小一圈的博士脸部特写（左侧，浮于大人的画面之上）。一大一小的画面很好的传达出了博士几乎无法反抗大人的指令。</p><hr /><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-58.webp"alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><p>在例如这个镜头，仅给出了两位说话者的画面部分，人物仿佛被压在画面之中（所谓的画面很“紧”），很好的展现了博士的心理（注意台词）。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-59.webp"alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><p>随后的这个镜头，同上图一样，但却将两人的画面相背放置在一起，而人物原本是这样的调度。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-60.webp"alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><p>通过画面将两个相对且有距离的人物一下子放在一起，又使用了“紧”的画面，也能很好的传达人物的心里情感。</p><p>类似的镜头还有：</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-61.webp"title="表现的是两位昔日夫妻间的隔阂" alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><hr /><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-62.webp"alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><p>在例如上面这个例子，本该是近景，却通过缩小的画面仅给出了官员的脸部，画面同样十分“紧”，也很好的让观众感受到了形式的紧张。</p><p>类似的镜头还有以下这个。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-63.webp"alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><hr /><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-64.webp"alt="Ditf Ep.19 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-65.webp"alt="Ditf Ep.19 截图" /></p></section><p>在例如上述的两个画面，很容易感受到其明暗调度：大人居于光下，而博士则一个人位于大人的影子之中，让观众直观的感受到博士受大人控制程度之高。</p><hr /><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-66.webp"alt="Ditf Ep.19 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-67.webp"alt="Ditf Ep.19 截图" /></p></section><p>这种比例的遮蔽镜头在后半段出现较多。相较于前一种，画面明显“松”了不少。这里是适应这部分较缓和的气氛。</p><p>下一处例子中，则是这种遮蔽形状与变形宽银幕比例的画面连续的放映，画面本身是静止的，仅作为为博士叙述历史的配图而已。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-68.webp"alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-69.webp"title="也批评一点，这个镜头遮蔽的形状改变的意义不大，显得有些突兀"alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><p>从这里开始，静止画面运用的更多了，很容易看出博士在这里开始个人情感越来越少，而一味在追求科学研究，也因此妻子的死去也并未让博士过度悲伤。</p><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-70.webp"alt="Ditf Ep.19 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-71.webp"alt="Ditf Ep.19 截图" /></p></section><p>这一段以及之后的回忆部分的情感氛围本身也是没有什么波折的。</p><p>相似的构图还有下面这个。</p><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-72.webp"alt="Ditf Ep.19 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-73.webp"alt="Ditf Ep.19 截图" /></p></section><hr /><p>这部分博士一味追求科学研究，也因此最为多见的构图是下面这种，典型的电影框中框式构图。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-74.webp"alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-75.webp"title="仅仅截到了背后的视角" alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><p>博士被研究处的线条所紧紧夹住，正暗示了博士沉迷于科学研究之中。</p><hr /><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-76.webp"alt="Ditf Ep.19 截图" /><figcaption aria-hidden="true">Ditf Ep.19 截图</figcaption></figure><p>最后想说的是这个镜头的地方。镜头本身没什么特别，但却采用了改变摄影机角度的摇镜方法，画面由水平逐渐变为倾斜，画面本身也让人感觉渐渐从平衡变为不平衡，可以说给了观众一个危险即将出现的心理预期。紧随其后变是叫龙的屠杀，因而这个镜头可以说是十分到位了。</p><p>世界观交代完了，小队也开始追求自由了，随后几集打戏应明显变多，运镜风格也应该会变得和开始几集一样了。</p><hr /><p>补几个EVA梗，挺有意思。</p><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-77.webp"alt="Ditf Ep.19 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-78.webp"alt="Ditf Ep.19 截图" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-54.webp"alt="Ditf Ep.19 截图" /></p></section><h2 id="如何评价-darling-in-the-franxx-第二十四集大结局">如何评价DARLING in the FRANXX 第二十四集（大结局）？</h2><blockquote><p>本文首发于<ahref="https://www.zhihu.com/question/284316606/answer/436757637">知乎</a><br />发表日期：2018.07.08</p></blockquote><p>这集⋯⋯先不说中间某几个部分炫技似的用了镜头的缩放（看起来这一用法毫无目的性），整个故事彻底崩了⋯⋯</p><p>锦织哥哥可能真的是只想做个恋爱动画与公司动画回忆集，继先前的「Eva」、「偶像大师」、「天元突破」、「飞跃巅峰2」之后，这一集中我似乎还能看到「飞跃巅峰！」结局类似的画面：</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-80.webp"title="双星闪耀着回到地球，不过这次不是线稿了⋯⋯"alt="Ditf Ep.24 截图" /><figcaption aria-hidden="true">Ditf Ep.24 截图</figcaption></figure><p>我甚至还能在这集看到「斩服少女」的满舰饰幼年</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-81.webp"title="画面上方" alt="Ditf Ep.24 截图" /><figcaption aria-hidden="true">Ditf Ep.24 截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/DitfEpisodeComment-20180415/picture-79.webp"alt="斩服少女" /><figcaption aria-hidden="true">斩服少女</figcaption></figure><p>话又说回来，本来还有点优点的演出分镜手法到了现在已经彻底沦为了毫无目的的炫技，角色原先设定的彻底崩塌以及故事剧情上的全面崩盘（不仅仅是莫名其妙的展开，更是故事各部分的比重完全不对。一个简单的例子就是最终大战就这么莫名其妙的在几分钟内结束了），这些都表明这国家队只不过是一部惊世骇俗的烂作而已。</p><p>可能说的有些过了，但对于开播前满怀着期待的一个宅社和扳机粉丝来说，这动画到了现在确实有够让人失望的。</p>]]></content>
    <pubDate>Thu, 18 Jul 2024 17:09:51 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[国人画师黄成希负责的《博人传：火影忍者新时代》第 65 话，在制作水平上带来了多大的提升？]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/archive/ZhiArchive/Boruto65-20180721</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/archive/ZhiArchive/Boruto65-20180721</guid>
    <content type="html"><![CDATA[<h1id="国人画师黄成希负责的博人传火影忍者新时代第-65-话在制作水平上带来了多大的提升">国人画师黄成希负责的《博人传：火影忍者新时代》第65 话，在制作水平上带来了多大的提升？</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/cover-picture.jpg" alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于<ahref="https://www.zhihu.com/question/285984587/answer/447142428">知乎</a><br />发表日期：2018.07.21<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2 id="回答">回答</h2><p>水平不足，错误估计了剧场版的作画难度。重新回去看过后发现，松本宪生作画的那一段的确难度很大，这应当是体现在对空间位置分布的关系上。</p><hr /><p>在回答这个问题前特地又回去看了一下博人传剧场版的这一部分，越发佩服黄导了。</p><p>很明显的能感觉到，博人传 65话的作画更加出色，整体分镜也是同样的出色。</p><p>在博人传剧场版中，更多采用大远景或中近景的方式，而且几乎没有出现鸣人佐助同时与大筒木打斗的画面，又或者是进行了较为生硬的切接，而这样就导致了部分地方镜头衔接有些生硬。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-1.webp"title="鸣人佐助同时进行打斗的部分也只是运用平行剪辑"alt="鸣人作画截图" /><figcaption aria-hidden="true">鸣人作画截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-2.webp"title="更多都是绘制单人近景的打斗" alt="鸣人作画截图" /><figcaption aria-hidden="true">鸣人作画截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-3.webp" alt="鸣人作画截图" /><figcaption aria-hidden="true">鸣人作画截图</figcaption></figure><p>而博人传 65集就完全不同了。全部的分镜都是为最大化展现人物动作力度和战斗场面来设计的，我甚至觉得他根本没有考虑作画难度。很容易看出的是其多用远景来展现，并不多用较生硬的切接，而更多运用镜头的移动来完整的展现战斗，甚至还出现了一段远景的三人作战部分，我想这部分作画难度挺高的。</p><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-4.webp"alt="鸣人作画截图" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-5.webp"alt="鸣人作画截图" /></p></section><p>当时在无法运用镜头移动来展现时，则通过采用视线顺接或动作顺接的方式来剪辑，非常自然。而在剧场版采用平行剪辑展现鸣人佐助各自动作的部分，在博人传中则采用分割画面来各自展现的方法，而分割用的变化的粗线也能暗暗调动起观众的情绪。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-6.webp" alt="作画截图" /><figcaption aria-hidden="true">作画截图</figcaption></figure><p>另一方面，也能通过夸张的作画和较极端的透视来展现动作力度，因此才能将战斗画的让观众看的很爽。</p><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-7.webp"alt="佐助作画截图" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-8.webp"alt="佐助作画截图" /></p></section><p>此外，虽是采用按图形相似原则来转换现实与回忆部分，但画面的整体结构几乎完全相同，也有了不错的效果。之后的几个推轨也做得都很棒。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-9.webp" alt="博人作画截图" /><figcaption aria-hidden="true">博人作画截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-10.webp"alt="博人作画截图" /><figcaption aria-hidden="true">博人作画截图</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-11.webp"title="极度自然又能展现人物的心理变化" alt="博人作画截图" /><figcaption aria-hidden="true">博人作画截图</figcaption></figure><p>而我个人认为全集最重要的部分，也就是鸣人和博人一起搓丸子的部分，动画版和剧场版的分镜和画面也完全不同。剧场版采用在将丸子搓大的这整个动作之间，插入类似插画一般的画面来展现鸣人的回忆。</p><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-12.webp"alt="鸣人回忆片段" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-13.webp" alt="鸣人回忆片段" /></p></section><p>而博人传则是运用叠化，将火影中重要人物置于博人两侧不断变化，能很好的展现鸣人的成长和鸣人与同伴之间深厚的羁绊，也能体现出丸子蕴含的情感之深，我个人更喜欢动画版的处理。</p><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-14.webp"alt="鸣人回忆片段" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-15.webp" alt="鸣人回忆片段" /><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-16.webp"alt="鸣人回忆片段" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-17.webp" alt="鸣人回忆片段" /><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-18.webp"alt="鸣人回忆片段" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-19.webp" alt="鸣人回忆片段" /><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-20.webp"alt="鸣人回忆片段" /></p></section><p>能感觉到博人传剧情上有几个小改动。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-21.webp" alt="博人传截图" /><figcaption aria-hidden="true">博人传截图</figcaption></figure><p>例如这一处，剧场版中是佐助被严重烧伤而而昏迷，博人生气的击打大筒木和他的凤凰的。</p><p>而博人传中则是两人一起击打大筒木的土人，我想这可能是为了让人物实力更加平衡处理的吧。此外，最后那段大筒木托梦似的部分则是常规操作。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-22.webp" alt="博人传截图" /><figcaption aria-hidden="true">博人传截图</figcaption></figure><p>最后说点私货吧。火影我是四年前开始补起来的，想必对其感情并没有一集集追过来的朋友深，这种超长时间连载的民工漫几乎无一例外的烂尾了，出了的续作刚开始也是难看的要命，不过看了这一集，反倒感触很深。将一切用青春来解释似乎没什么问题，但从我的角度，果然还是更认为这是动画/漫画独特的力量吧。</p><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-23.webp"alt="博人传截图" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-24.webp"alt="博人传截图" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-25.webp"alt="博人传截图" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ZhiArchive/_media/Boruto65-20180721/picture-26.webp"alt="博人传截图" /></p></section>]]></content>
    <pubDate>Thu, 18 Jul 2024 16:29:07 +0800</pubDate>
  </entry>
  
</channel>
</rss>
