<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Pikapikapi Blog</title>
    <atom:link href="https://pikapikapikaori.github.io/pikapikapi-blog/pikapikapi-blog-rss.xml" rel="self" type="application/rss+xml" />
    <link>https://pikapikapikaori.github.io/pikapikapi-blog</link>
    <description>Pikapikapi Blog</description>
     
    <entry>
      <title><![CDATA[实用网站快速链接]]></title>
      <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/UsefulWebsites</link>
      <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/UsefulWebsites</guid>
      <content type="html"><![CDATA[<h1 id="实用网站快速链接">实用网站快速链接</h1><blockquote><p>本篇主要记录一些比较实用的网站等</p></blockquote><h2 id="影视书籍游戏资源等">影视书籍游戏资源等</h2><h3 id="离线存储">离线存储</h3><table><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><a href="http://dmhy.org">动漫花园</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画、日剧为主</td></tr><tr class="even"><td style="text-align: center;"><a href="https://nyaa.si">Nyaa</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主，外站</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://mikanani.me">Mikan Project</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主，支持RSS</td></tr><tr class="even"><td style="text-align: center;"><a href="https://acg.rip">ACG RIP</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://share.acgnx.se">末日动漫</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="even"><td style="text-align: center;"><a href="http://www.comicat.org">漫猫动漫</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="odd"><td style="text-align: center;"><a href="http://www.miobt.com">MioBT</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="even"><td style="text-align: center;"><a href="https://bangumi.moe">萌番组</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://eztvx.to/home">EZTV</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">美剧为主，外站</td></tr><tr class="even"><td style="text-align: center;"><a href="https://www2.rarbggo.to">RARBG</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">电影、美剧为主，外站</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://yts.mx">YTS</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">电影为主，外站</td></tr><tr class="even"><td style="text-align: center;"><a href="https://moviejie.net">电影街</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">电影为主</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://13dl.me/home/">13DL</a></td><td style="text-align: center;">云盘</td><td style="text-align: center;">漫画为主，日站</td></tr><tr class="even"><td style="text-align: center;"><a href="https://kox.moe">Kox.moe</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">漫画为主，台站</td></tr><tr class="odd"><td style="text-align: center;"><a href="http://libgen.rs">Library Genesis</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">书籍资料，外站</td></tr><tr class="even"><td style="text-align: center;"><a href="https://fitgirl-repacks.site">FitGirl Repacks</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">游戏为主，外站</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://www.skidrowcodex.net">SKIDROWCODEX.NET</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">游戏为主，外站</td></tr><tr class="even"><td style="text-align: center;"><a href="https://oda.lzacg.one">量子ACG</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字ACG游戏为主</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://pan.jlbx.xyz">姬路白雪の资源小站</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字ACG游戏为主</td></tr><tr class="even"><td style="text-align: center;"><a href="https://zi0.cc">梓澪の妙妙屋</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字ACG游戏为主</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://www.shinnku.com">失落小站</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字ACG游戏为主</td></tr><tr class="even"><td style="text-align: center;"><a href="http://retropc.net/alice/">Alicesoft</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">Alicesoft官方老游戏，日站</td></tr><tr class="odd"><td style="text-align: center;"><a href="http://www.k73.com/down/3ds/list-81-2.html">k73资源网</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">老游戏ROM</td></tr><tr class="even"><td style="text-align: center;"><a href="https://romsfun.com">ROMSFUN</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">老游戏ROM，外站</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://archive.org/download/3ds-cia-eshop">INTERNET ARCHIVE 3ds cia</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">3DS CIA，外站</td></tr><tr class="even"><td style="text-align: center;"><a href="https://www.hacg.mov">琉璃神社</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">ACGN综合资源</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://www.jiumodiary.com">鸠摩搜索</a></td><td style="text-align: center;">聚合搜索</td><td style="text-align: center;">书籍资料搜索</td></tr><tr class="even"><td style="text-align: center;"><a href="https://www.btdig.com">BTDigg</a></td><td style="text-align: center;">BT聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://kickass.sx">KickAss</a></td><td style="text-align: center;">BT聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr><tr class="even"><td style="text-align: center;"><a href="https://www.tpbproxypirate.com">Pirate Bay</a></td><td style="text-align: center;">BT聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://www.1337x.tw">1377x</a></td><td style="text-align: center;">BT聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr><tr class="even"><td style="text-align: center;"><a href="https://www.magnetdl.com">MagnetDL</a></td><td style="text-align: center;">BT聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr></tbody></table><h3 id="在线阅览">在线阅览</h3><table><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><a href="https://copymanga.site">拷贝漫画</a></td><td style="text-align: center;">在线阅读</td><td style="text-align: center;">漫画为主</td></tr><tr class="even"><td style="text-align: center;"><a href="https://dogemanga.com">漫画狗</a></td><td style="text-align: center;">在线阅读</td><td style="text-align: center;">漫画为主</td></tr></tbody></table><h2 id="资料">资料</h2><table><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><a href="http://duobaoxiang.ysepan.com">ACG情报交流</a></td><td style="text-align: center;">ACGN资料</td><td style="text-align: center;">ACG资料整理</td></tr><tr class="even"><td style="text-align: center;"><a href="https://www.sakugabooru.com">SAKUGABOORU</a></td><td style="text-align: center;">ACGN资料</td><td style="text-align: center;">作画片段信息</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://w.atwiki.jp/sakuga/">作画wiki</a></td><td style="text-align: center;">ACGN资料</td><td style="text-align: center;">作画资料</td></tr><tr class="even"><td style="text-align: center;"><a href="http://www.inouejet.com/camera/">アニメ用語</a></td><td style="text-align: center;">ACGN资料</td><td style="text-align: center;">动画用语辞典</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://blog.sakugabooru.com">SAKUGABLOG</a></td><td style="text-align: center;">ACGN资料</td><td style="text-align: center;">作画信息</td></tr><tr class="even"><td style="text-align: center;"><a href="https://80s-ova.com">80年代のOVA</a></td><td style="text-align: center;">ACGN资料</td><td style="text-align: center;">动画介绍推荐</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://www.getchu.com">Getchu</a></td><td style="text-align: center;">ACGN资料</td><td style="text-align: center;">ACGN发售信息</td></tr><tr class="even"><td style="text-align: center;"><a href="https://bgmlist.com">番组放送</a></td><td style="text-align: center;">ACGN资料</td><td style="text-align: center;">动画放送信息汇总</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://erogamescape-dyndns-org.translate.goog/~ap2/ero/toukei_kaiseki/?_x_tr_sch=http&amp;_x_tr_sl=ja&amp;_x_tr_tl=en&amp;_x_tr_hl=zh-CN&amp;_x_tr_pto=op">批评空间</a></td><td style="text-align: center;">ACGN资料</td><td style="text-align: center;">文字AVG游戏鉴赏，<a href="https://erogamescape.dyndns.org">原站</a></td></tr><tr class="even"><td style="text-align: center;"><a href="https://trace.moe">Anime Scene Search</a></td><td style="text-align: center;">ACGN工具</td><td style="text-align: center;">动画截图搜索</td></tr><tr class="odd"><td style="text-align: center;"><a href="http://www.iqdb.org">Multi-service image search</a></td><td style="text-align: center;">ACGN工具</td><td style="text-align: center;">动画截图搜索</td></tr><tr class="even"><td style="text-align: center;"><a href="https://nulla2011.github.io/sysx/">女声优拼音缩写查询</a></td><td style="text-align: center;">ACGN工具</td><td style="text-align: center;">女声优拼音缩写查询</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://www.pogdesign.co.uk/cat/">TV Calendar</a></td><td style="text-align: center;">影视资料</td><td style="text-align: center;">欧美剧集放送信息汇总</td></tr><tr class="even"><td style="text-align: center;"><a href="https://www.gematsu.com">GEMATSU</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">游戏平台信息</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://ocg-rule.readthedocs.io/zh-cn/latest/">OCG Rule</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">YGO OCG规则</td></tr><tr class="even"><td style="text-align: center;"><a href="https://www.ygo-sem.cn/index.html">YGO-Engine</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">YGO卡组</td></tr><tr class="odd"><td style="text-align: center;"><a href="http://www.qi-wmcard.com">Yugioh(OCG) card list ＆ news</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">YGO卡查</td></tr><tr class="even"><td style="text-align: center;"><a href="https://www.ourocg.cn">OurOCG</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">YGO卡查</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://bbs.newwise.com/thread-955986-1-1.html">【WIXOSS】入门及规则介绍</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">WIXOSS规则</td></tr><tr class="even"><td style="text-align: center;"><a href="http://yabejp.web.fc2.com/mahjong/index.html">現代麻雀技術論</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">麻将技巧</td></tr><tr class="odd"><td style="text-align: center;"><a href="http://beginners.biz">麻雀戦術書「ビギナーズラック」</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">麻将技巧</td></tr></tbody></table><h2 id="其他导航站">其他导航站</h2><table><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><a href="https://www.miaoaaa.com">ACG喵导航</a></td><td style="text-align: center;">ACGN网站导航</td><td style="text-align: center;">ACGN网站导航</td></tr><tr class="even"><td style="text-align: center;"><a href="https://www.acgbox.link">ACG盒子</a></td><td style="text-align: center;">ACGN网站导航</td><td style="text-align: center;">ACGN网站导航</td></tr></tbody></table><h2 id="其他">其他</h2><table><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><a href="https://github.com/Jackett">Jackett</a></td><td style="text-align: center;">BT聚合搜索服务源码</td><td style="text-align: center;">影视类BT聚合搜索，需自行部署</td></tr></tbody></table>]]></content>
      <pubDate>Thu, 4 Apr 2024 14:29:21 +0800</pubDate>
    </entry>
     
    <entry>
      <title><![CDATA[日本旅行随拍 令和六年二月]]></title>
      <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/JPTra-20240217</link>
      <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/JPTra-20240217</guid>
      <content type="html"><![CDATA[<h1 id="日本旅行随拍-令和六年二月">日本旅行随拍 令和六年二月</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-14.jpg" alt="" /><figcaption>picture</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.03.01<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>令和六年二月十七日至令和六年二月二十四日。</p><h2 id="北海道札幌-小樽">北海道：札幌 &amp; 小樽</h2><section class="multiImagesContainerSection"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-2.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-3.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-4.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-5.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-6.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-7.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-8.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-9.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-10.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-1.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-11.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-12.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-13.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-14.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-15.jpg" alt="picture" /></p></section><h2 id="越後湯沢">越後湯沢</h2><section class="multiImagesContainerSection"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-17.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-18.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-19.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-16.jpg" alt="picture" /></p></section><h2 id="横浜-東京ロボット">横浜 &amp; 東京：ロボット</h2><section class="multiImagesContainerSection"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-21.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-22.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-23.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-24.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-25.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-26.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-27.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-28.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-29.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-30.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-31.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-32.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-33.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-34.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-35.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-36.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-37.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-38.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-39.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-40.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-41.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-42.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-20.jpg" alt="picture" /></p></section><h2 id="京都">京都</h2><section class="multiImagesContainerSection"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-44.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-45.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-46.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-47.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-48.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-49.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-50.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-51.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-52.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-53.jpg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/JPTra-20240217/picture-43.jpg" alt="picture" /></p></section>]]></content>
      <pubDate>Fri, 1 Mar 2024 21:04:24 +0800</pubDate>
    </entry>
     
    <entry>
      <title><![CDATA[2023年度TV动画单集十选]]></title>
      <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/YearBest-2023-20240106</link>
      <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/YearBest-2023-20240106</guid>
      <content type="html"><![CDATA[<h1 id="年度tv动画单集十选">2023年度TV动画单集十选</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/cover-picture.jpg" alt="" /><figcaption>cover</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.01.08<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>很久不写评论了。年中开始正好空闲时间渐多，闲来无事为了记录也为了练练笔故而今年决定每个季度简单记录一下印象比较深的动画片。冬季动画错过了成文的时机，春夏秋季度的动画可见：</p><ul><li><a href="/writings/SeasonBest-202304-20230612">2023 春季动画（2023.04）</a></li><li><a href="/writings/SeasonBest-202307-20230703">2023 夏季动画（2023.07）</a></li><li><a href="/writings/SeasonBest-202310-20231111">2023 秋季动画（2023.10）</a></li></ul><p>年选十回虽说是十回，然而对的上自己口味的并没有那么多。也不愿为了填充十回的数量而生搬硬凑，最终绞尽脑汁也只选出五话，也只能如此了。</p><p>先简述下选集规则吧：</p><ul><li>2023年内初次放送的TV/WEB动画内单集、2023年内作为BD/DVD特典发售的OVA/OAD</li><li>每作仅限一集（同一季度年内两季度分割放送视为一作、同系列不同季度视为不同作）</li><li>仅代表个人口味</li></ul><h2 id="アイドルマスター-シンデレラガールズ-u149-4-羽が折れているのに飛んでいくものなに">「アイドルマスター シンデレラガールズ U149」 #4 「羽が折れているのに飛んでいくもの、なに？」</h2><blockquote><p>脚本： 村山沖<br />絵コンテ：河原龍太<br />演出： 河原龍太<br />作画監督： 野田猛<br />播出时间：2023.04.26</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-1.jpg" alt="" /><figcaption>picture</figcaption></figure><p>冈本学在21年无职转生（「無職転生 ～異世界行ったら本気だす～」）大展身手后作为监督负责的第二部作品，作画演出分镜多方面的用心程度上无不延续了无职转生的超高质量。尽管本作后段内核已经出现了把握上的些许偏差（为了让偶像带去梦想甚至要牺牲staff自己家庭中孩童的微小快乐），甚至于在一些演出上出现了用力过猛的状况，然而这也不能否定本作前期单回的出色。</p><p>延续本家单回关注单一角色单元剧、单回暗埋c位伏线完成最终情感爆发到完成live的传统，本作ep4作为关注于桃华的单回，可说是质量最高的几集之一。作为应当贯穿近乎全部单元回的爱丽丝伏线在本集中被巧妙转化为了与桃华相对比的暗线，对桃华的塑造不仅从周边staff上展现，更是从与她同作为偶像的爱丽丝上衬出。相比于服饰小物的直观对比，构图上的展现更加直观，作为背景/调度物的建筑结构无情地将桃华与他人隔开。本身带着神秘学色彩的寺庙更是加剧了这一压抑感。那段酣畅淋漓的、展现桃华第一视角的蹦极作画完成了情感上的宣泄，从此做作的小物退出了画面，无情的建筑结构也似乎披上了温情，成为主动消除桃华与他人距离的存在。</p><h2 id="ワールドダイスター-10-それぞれの幻影">「ワールドダイスター」 #10 「それぞれの幻影」</h2><blockquote><p>脚本：江嵜大兄<br />絵コンテ·演出：伊東優一<br />作画監督：安形佳己、王宣静、他<br />播出时间：2023.06.11</p></blockquote><p>超能力在演剧主题中的加入不多作置评，然而舞台装置在叙事甚至于画面中的直接出现事实上给与了从调度与演出层面刻画角色的更多可能。对此笔者印象最深的其实是「SHINE POST」那句对演出结束后观众席的评判，不过这里暂且略去不表。本集借助于以灯光效果为代表的舞台装置合理地将角色的心境纳入到调度与画面共同组成的叙事结构中，又能借助以harmony为代表的古典动画手段暗表情思，十分犀利。</p><h2 id="bang-dream-its-mygo-10-ずっと迷子">「BanG Dream! It’s MyGO!!!!!」 #10 「ずっと迷子」</h2><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-4.png" alt="" /><figcaption>picture</figcaption></figure><blockquote><p>脚本：後藤みどり<br />絵コンテ：梅津朋美(エディッツ)<br />演出：梅津朋美(エディッツ)<br />CGディレクター：大森 大地、遠藤 求<br />播出时间：2023.08.17</p></blockquote><p>歇斯底里女同闹麻炒作动漫，全3D制作却表现出了多方面的高水平。ep3、ep7等都有着不少的话题度，而作为直接点出标题、乐队名中“Mygo/迷子”双关意味的本集，则是对乐队五人从形式上的相聚到分离再到真正聚合的最终完成。情感上远超ep3的程度，同样借助于舞台装置完成了调度、画面与叙事的多重塑造，而叙事结构与音乐母题的高度一致性更为可圈可点。歌曲中作为叙事载体的詩（うた）重聚为形式上的歌（うた）的全过程，其与乐队成员、乐器构成上的对应关系不言自明。</p><h2 id="英雄教室-10-俺よりうまいものに逢いに行く">「英雄教室」 #10 「俺よりうまいものに逢いに行く」</h2><blockquote><p>脚本：ハヤシナオキ<br />絵コンテ：大平直樹<br />演出：工藤寛顕<br />総作画監督：川村幸祐<br />播出时间：2023.09.10</p></blockquote><p>纯粹的厕纸改动漫从第一集开篇无敌勇者找朋友开始便一眼望穿，然而弥足珍贵的是精确把握情感调度的同时又不忘加入对经典的neta作为调剂的出色结构。继ep8暗指SAC，ep9以EVA逆A巨人哥斯拉的neta贯穿整集之后，ep10的魔爪伸向出崎统标志性的harmony与三回pan，在大量插科打诨后借助对明日之丈的neta实现了情绪上的小爆发，以此完成了一个最标准的英雄之旅（A Hero’s Journey）结构。如此淳朴的欢乐与感动实在是太弥足珍贵了。</p><h2 id="川越ボーイズシング-9-いつかのアイムソーリー">「川越ボーイズ・シング」 #9 「いつかのアイムソーリー」</h2><blockquote><p>脚本：川越学園文芸部<br />絵コンテ・演出・作画監督：武内宣之<br />播出时间：2023.12.04</p></blockquote><p>几乎可以被直接作为垃圾丢掉的动画，最终话直到本文成文时仍未播出。然而可能也正因此才使本集更加突出，足以在秋季动画中留下一笔。夸张的广角、克制的剧伴与刻意强调的背景音从一开始便突兀地展现了极压抑的氛围，而这一切的不适感则春风化雨般的被表露情绪的合唱所消解。最难能可贵的是最后并没有让所谓不可或缺的伙伴生硬地留下来以满足美好大团圆的幻想，而是更现实地创造了一个对双方都相对圆满的离别。</p><h2 id="年度最佳">年度最佳</h2><p>只看TV/WEB动画的最好单集未免有些太过偏颇，最后再简单记录下今年看过的一些其他想说说的动画。</p><h3 id="最佳剧场アイカツ-10th-story-未来へのstarway">最佳剧场：「アイカツ！ 10th STORY ～未来へのSTARWAY～」</h3><blockquote><p>監督：木村隆一<br />脚本：加藤陽一<br />上映时间：2023.01.20</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-2.jpg" alt="" /><figcaption>picture</figcaption></figure><p>献给长大成人后的、十年前观看初代偶活的粉丝的纪念性剧场。然而远比先前的「魔女見習いをさがして」，也远比之后的「キボウノチカラ～オトナプリキュア’23～」更好，是真正考虑了粉丝心情的动画。笔者当时正值大学将毕业的时期，留下如此评论：</p><blockquote><p>在自己也将毕业的这个时点看感触还真是微妙。毕业并不是什么了不得的大事，要缅怀的青春也早已在不经意间流去，离别之后的未来也绝不是什么星星闪闪的道路。相比于EVA那充满说教意味的圆满到不能再圆满的补完，我倒是更被她们用片刻青春编织出的无限延伸到未来的梦打动。就算被迫地走向再平凡普通的未来也不要紧，那是曾经闪耀的我们，以及你们，可以无数次重新开始的STARWAY。</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-3.jpg" alt="" /><figcaption>picture</figcaption></figure><p>偶像正因不是永恒的所以才永恒的美丽。别离了学生时期才能参与的偶像活动后，长大成人、变得成熟后的她们的道路又在哪里？我不明白。巧妙编排的三集TV动画中落在最终话的，是在描述大人们的她们日常生活的一集之后的，重新回顾毕业live的一集。偶活精神连接到了无限延伸的未来，正因如此笔者还愿意相信那个她们将一切落在的、闪闪发光的STARWAY上。</p><h3 id="最佳机器人グリッドマン-ユニバース">最佳机器人：「グリッドマン ユニバース」</h3><blockquote><p>監督：雨宮哲<br />脚本：長谷川圭一、雨宮哲<br />上映时间：2023.03.24</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-5.jpeg" alt="" /><figcaption>picture</figcaption></figure><p>古力特与电光机王的续作，完美收结一切的粉丝向剧场。雨宫那从动画人博览会开始便心心念念的古力特动画在他心中大概是有了一个不错的结尾。我喜欢的一切大概都在这里了。</p><p>約束と、愛と、賞味期限。</p><h3 id="最佳人设ひろがるスカイプリキュア">最佳人设：「ひろがるスカイ！プリキュア」</h3><blockquote><p>監督：小川孝治<br />脚本：加藤還一、金月龍之介、井上美緒、山岡潤平、成田良美、守護このみ、伊藤睦美、村山功<br />开播时间：2023.02.05</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-6.jpg" alt="" /><figcaption>picture</figcaption></figure><p>光美做出相当改变的一作。同年的男人光美舞台剧企划、yes precure续作大人光美动画企划等等，而本作更是首次加入了男人光美与大人光美作为主要角色，主角也选择了蓝色作为主色。脚本制作上希望回归初代的两人情感，也有不少单回做出了大胆的改变：全片不出现怪物而主角变身是为了帮助一般市民。尽管做出了如此多看似相当积极的改变然而动画本身实在鸡肋。然而人设确实是好看的，这就是斎藤敦史哥的含金量。</p><h3 id="最佳oped無職転生ⅱ-異世界行ったら本気だす">最佳op/ed：「無職転生Ⅱ ～異世界行ったら本気だす～」</h3><blockquote><p>監督：平野宏樹<br />脚本：漆原虹平、大野敏哉、高山淳史<br />开播时间：2023.07.02</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-8.jpg" alt="" /><figcaption>picture</figcaption></figure><p>制作周期管理不顺与大量核心人员离职等诸多原因导致本作二期的制作质量实在一言难尽，脚本上的最后坚持也能看出staff对本作的热爱。尽管如此，本作的op可说是延续了一期的出色质量。“迈出一步”这一行为作为全系列的最核心在这一op中被继续体现：伴着鲁迪的行走，他与其他人建立起了联系，其他人将这种联系化为了力量，而这股力量本身也转而成为了鲁迪自身的力量。op影像构建的思路实质上与一期几个出色单回的思路有着一定程度上的一致性，鲁迪转生前后身份行为的对比更是突出“迈出一步”这一核心的最直接手段。窗户的意象手段同样由一期延续到了op甚至于正片之中，作为鲁迪与他人建立联系的渠道存在着。在此之上更为明显的三色鸟更不必多说了。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-7.jpg" alt="" /><figcaption>picture</figcaption></figure><h3 id="最佳厕纸改陰の実力者になりたくて-2nd-season">最佳厕纸改：「陰の実力者になりたくて！ 2nd season」</h3><blockquote><p>監督：中西和也<br />脚本：加藤還一<br />开播时间：2023.10.04</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-9.jpg" alt="" /><figcaption>picture</figcaption></figure><p>最佳单回中虽然没有提到，然而影子大人自22年的一期以来都保持了不错的改变水准。尽管二期整体不如一期来的那么有趣，不过从整体制作上就足见中西对本作的热爱。无论是用爱发电的几个作画质量不错的一人原画回，还是对趣味性与所谓龙傲天情节带来的爽快感的把控都相当出色，在此之上还能用心绘制众多的女性角色，相当完美地表现出了半自动误解流轻小说的最大趣味所在。</p><h3 id="最佳原创オーバーテイク-birdie-wing--golf-girls-story--season-2">最佳原创：「オーバーテイク！」 &amp; 「BIRDIE WING -Golf Girls’ Story- Season 2」</h3><p>虽说是最佳原创但实质上是把邦多利企划排除后的最佳原创，或者也可以说是2D动画最佳。</p><h4 id="birdie-wing--golf-girls-story--season-2">「BIRDIE WING -Golf Girls’ Story- Season 2」</h4><blockquote><p>監督：稲垣隆行<br />脚本：黒田洋介<br />开播时间：2023.04.07</p></blockquote><p>贫穷但凭借着相当的创意与用心表现出了最大的趣味。黑田对neta与情节设置的把控达到了极出色的地位，而在此之上古谷彻与池田秀一的加入更是添加了不少作品之外的趣味性，也因此，相信每一个敢达吃都能在本作中发现别样的乐趣。</p><h4 id="オーバーテイク">「オーバーテイク！」</h4><blockquote><p>監督：あおきえい<br />脚本：高山カツヒコ、あおきえい、関根アユミ<br />开播时间：2023.10.01</p></blockquote><p>淳朴的青春赛车片吧可以说是，不是很赛车，然而短短12集聚焦于两个主角的心结，非常自然地将不同时序内互成因果的事件娓娓道来，又自然地过渡到了矛盾的解决。在多个角色塑造相当丰富的基础上，又能看似不经意地将一些微小的改变落实，这大概也是最难能可贵的地方了。</p>]]></content>
      <pubDate>Fri, 19 Jan 2024 01:04:32 +0800</pubDate>
    </entry>
     
    <entry>
      <title><![CDATA[季度印象最深刻单集 2023.10]]></title>
      <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/SeasonBest-202310-20231111</link>
      <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/SeasonBest-202310-20231111</guid>
      <content type="html"><![CDATA[<h1 id="季度印象最深刻单集-2023.10">季度印象最深刻单集 2023.10</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202310-20231111/cover-picture.JPG" alt="" /><figcaption>cover</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.01.02<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2 id="薬屋のひとりごと-4-恫喝">「薬屋のひとりごと」 #4 「恫喝」</h2><blockquote><p>播出时间：2023.10.28</p></blockquote><p>倒不是说本集写得有多么多么好或者说画的也多么多么厉害，应该说制作上比较用心或者说有诚意。一改前三集到的风格，本集在作画意味上人物的小动作都相当之多。尽管不难发现roto的大量应用，然而愿意为这么多人物设计这么多小动作并在画面上表现出来就已经很难得。动态的画面而非手冢追求的有限动画的极意这一点就带来了相当的观看体验。</p><h2 id="葬送のフリーレン-9-断頭台のアウラ">「葬送のフリーレン」 #9 「断頭台のアウラ」</h2><blockquote><p>播出时间：2023.11.03</p></blockquote><p>本季度的潮男动画之一，YOASOBI和漫画两方相辅相成的炒作动漫。尽管赢在题材选择足够好，着眼于勇者死后魔法使的带娃故事本身，又无处不再强调时间流逝，然而小段落故事集却都只能做到要么一会cue一下对过去勇者小队的回忆，要么就只能拿出中忍考试那样的打打打，这样的漫画真的有趣吗。而动画却又对时间流逝这一点少加强调，进一步弱化了最亮点的地方。也因此，大力宣发的OP实质上也只有两卡能够得我心：一是如下GIF所展示的芙莉莲在起步向前走前的一小段中心变化的作画，用右脚落下的小动作和左脚鞋子褶皱的请问变化生动地暗示了芙莉莲从驻足到决心再到向前迈进的一连串动作，被限制在小腿部的画框却借助于这一点点的作画就向观众暗示了画框外的人物动作，但又不直接画出使得观众浮想联翩。另外一点则是在结尾处，将勇者时期站在最后的芙莉莲与带娃时站在最前方的芙莉莲进行了画面移动后的拼接，倒是很好地揭示了作品最大的亮点。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202310-20231111/picture-1.gif" alt="" /><figcaption>picture</figcaption></figure><p>说回本集，应该说是很纯粹凭作画力制胜的一集。广受赞赏的两段穿脱衣（修塔尔克、费伦）转描味太明显，虽然修的还不错但置于前后画面之内难免过于生硬。而最大的亮点果然还是在女魔族和修塔尔克打打打的地方。从拖斧子举起再到蹲下这一段，泥土碎屑受到重力落下的速度感与摩擦力带来的粘滞感都很好地体现出了，另外蹲下前身体小幅前倾的细微动作也暗示了作画时对于动作本身的设计与考量都非常到位。踩点的完美选择使得这一段即使不是一拍一却达到了相当好的效果，确实是好看的作画。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202310-20231111/picture-2.gif" alt="" /><figcaption>picture</figcaption></figure><h2 id="川越ボーイズシング-9-いつかのアイムソーリー">「川越ボーイズ・シング」 #9 「いつかのアイムソーリー」</h2><blockquote><p>播出时间：2023.12.04</p></blockquote><p>淳朴垃圾动画中的异质优秀回，说是神回未免太过夸大，不过也足够在本季留下一笔。本话从开篇开始就用一个个扭曲的广角大特写给出压抑的氛围，克制的剧伴与被强调的背景音很明显加剧了氛围的整体走向。更难能可贵的则是本话最后并没有让所谓不可或缺的伙伴生硬地留下来以满足美好大团圆的幻想，而是更现实地创造了一个对双方都相对圆满的离别，这一点在这个片中实在是有些难能可贵了。</p><h2 id="陰の実力者になりたくて-2nd-season-11-決断">「陰の実力者になりたくて！ 2nd season」 #11 「決断」</h2><blockquote><p>播出时间：2023.12.13</p></blockquote><p>半自动流轻改动画影子大人一期在去年就已经大获好评，而前几集的略显低迷后，中西和也回归分镜演出的本集无疑拿出了最符合影子大人的安排。不仅在对剧情节奏的把控上极其完美，A part安排的数个搞笑情节（延续至上集的女仆与epsilon、与前形成鲜明对比的三回多艾姆公爵）能恰到好处的搏人一笑而又不至于喧宾夺主（如同#10希德与萝兹对话的一幕）而在进入主线后的情节安排也相当赶紧利落，数幕被良好的展现而又不会挤占彼此的时长。在误解系大前提的条件下借助出色的演出与分镜让高潮前萝兹戴戒指一幕在初看时华丽帅气又能让观众在事后回想时回味出其中的趣味。而在最高潮处借助大量市场展现黑色蔷薇出场与惊慌无措的群众后以奏响乐曲的暗影一刀切断黑色蔷薇的手臂作结完成情感上的突然收场，直接为最终集完成了最好的造势。</p>]]></content>
      <pubDate>Tue, 2 Jan 2024 20:17:49 +0800</pubDate>
    </entry>
     
    <entry>
      <title><![CDATA[随记：近日玩具 癸卯年癸亥月甲午日]]></title>
      <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Notes-20231202</link>
      <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Notes-20231202</guid>
      <content type="html"><![CDATA[<h1 id="随记近日玩具-癸卯年癸亥月甲午日">随记：近日玩具 癸卯年癸亥月甲午日</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/cover-picture.gif" alt="" /><figcaption>picture</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2023.12.02<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>癸卯年癸亥月甲午日，申城。</p><p>phat偶像大师本家系列收齐了，不过miki以外的还没拆。15周年纪念的三人组、e8的miki睡美人，还有几个高垣枫和涩谷凛的手办也还没拆。另外不得不说偶像大师在国内的热度确实太低了，手办基本都是大降价。</p><section class="multiImagesContainerSection"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-4.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-6.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-7.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-1.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-8.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-5.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-3.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-2.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-9.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-10.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-11.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-12.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-13.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-14.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-15.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-16.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-17.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-18.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-19.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-20.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-21.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-22.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-23.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-24.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-25.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-26.jpeg" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20231202/picture-27.jpeg" alt="picture" /></p></section>]]></content>
      <pubDate>Mon, 4 Dec 2023 18:26:49 +0800</pubDate>
    </entry>
     
    <entry>
      <title><![CDATA[论文阅读 2023.11]]></title>
      <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/ITtech/PaperReading-202311-20231114</link>
      <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/ITtech/PaperReading-202311-20231114</guid>
      <content type="html"><![CDATA[<h1 id="论文阅读-2023.11">论文阅读 2023.11</h1><blockquote><p>本文首发于个人博客<br />发表日期：2023.11.24<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2 id="on-existence-of-truthful-fair-cake-cutting-mechanisms">On Existence of Truthful Fair Cake Cutting Mechanisms</h2><blockquote><p>Tao, B. (2022, July 12). On Existence of Truthful Fair Cake Cutting Mechanisms. Proceedings of the 23rd ACM Conference on Economics and Computation. https://doi.org/10.1145/3490486.3538321</p></blockquote><p>在传统的切蛋糕（cake-cutting，换言之某个异质可分的物体）问题中，往往以比例性或无嫉妒来衡量分配方法的公平与否。然而，参与人可能会谎报自己的估值函数来获得更多的分配。本文考虑从博弈论角度入手，如何设计一个机制来解决这个问题。</p><h3 id="问题建模">问题建模</h3><p>考虑一个异质可分的物体（蛋糕），其被建模为区间<span class="math inline">[0, 1]</span>，要被分配给<span class="math inline"><em>n</em></span>个智能体。每个智能体<span class="math inline"><em>i</em></span>有一个值密度函数$f_i: [0, 1] <em>{} <span class="math inline"><em>来</em><em>描</em><em>述</em><em>他</em><em>对</em><em>蛋</em><em>糕</em><em>的</em><em>偏</em><em>好</em>。<em>如</em><em>果</em></span>[0, 1]<span class="math inline"><em>可</em><em>以</em><em>划</em><em>分</em><em>为</em><em>有</em><em>限</em><em>多</em><em>个</em><em>区</em><em>间</em>，<em>则</em><em>价</em><em>值</em><em>密</em><em>度</em><em>函</em><em>数</em></span>f_i<span class="math inline"><em>是</em><em>分</em><em>段</em><em>常</em><em>数</em>，<em>并</em><em>且</em></span>f_i<span class="math inline"><em>在</em><em>每</em><em>个</em><em>区</em><em>间</em><em>上</em><em>都</em><em>是</em><em>常</em><em>数</em>。<em>文</em><em>章</em><em>考</em><em>虑</em><em>代</em><em>理</em><em>的</em><em>价</em><em>值</em><em>密</em><em>度</em><em>函</em><em>数</em><em>是</em><em>分</em><em>段</em><em>常</em><em>数</em>。<em>如</em><em>果</em></span>f_i(x)&gt;0x<span class="math inline">，<em>则</em><em>智</em><em>能</em><em>体</em></span>i<span class="math inline"><em>是</em><em>饥</em><em>饿</em>（<em>h</em><em>u</em><em>n</em><em>g</em><em>r</em><em>y</em>）<em>的</em>。<em>给</em><em>定</em><em>一</em><em>个</em><em>子</em><em>集</em></span>X<span class="math inline">，</span>i<span class="math inline"><em>在</em></span>X<span class="math inline"><em>上</em><em>的</em><em>效</em><em>用</em><em>为</em></span>v_i(X)=</em>{X}f_i(x)dx$。</p><p>分配<span class="math inline">(<em>A</em><sub>1</sub>, ⋯, <em>A</em><sub><em>n</em></sub>)</span>是<span class="math inline">[0, 1]</span>互不相交子集的集合，其中<span class="math inline"><em>A</em><sub><em>i</em></sub></span>是 分配给智能体<span class="math inline"><em>i</em></span>的子集。下面有对分配几个定义：</p><ul><li><strong>完整</strong>：如果<span class="math inline">$\bigcup^n_{i=1}A_i=[0,1]$</span>，则分配是完整的。</li><li><strong>成比例</strong>：如果每个代理收到整个蛋糕的平均份额，则分配是成比例的。即<span class="math inline">$\forall i:\quad v_i(A_i)\geq\frac{1}{n}v_i([0,1])$</span>。</li><li><strong><span class="math inline"><em>α</em></span>-成比例</strong>：<span class="math inline">$\forall i:\quad v_i(A_i)\geq\frac{\alpha}{n}v_i([0,1])$</span>。</li><li><strong>无嫉妒</strong>：如果每个代理人根据他自己的估值获得的部分的价值略高于任何其他代理人收到的任何部分的价值。即<span class="math inline">∀<em>i</em>, <em>j</em>  <em>v</em><sub><em>i</em></sub>(<em>A</em><sub><em>i</em></sub>) ≥ <em>v</em><sub><em>i</em></sub>(<em>A</em><sub><em>j</em></sub>)</span>。</li></ul><p>无嫉妒分配总是成比例的。如果只有两个参与人，如果分配是完整的，那么分配是成比例的当且仅当它是无嫉妒的。</p><p>机制是函数<span class="math inline">ℳ</span>，它将<span class="math inline"><em>n</em></span>个值密度函数<span class="math inline"><em>F</em> = (<em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>n</em></sub>)</span>映射到分配<span class="math inline">(<em>A</em><sub>1</sub>, ⋯, <em>A</em><sub><em>n</em></sub>)</span>。给定<span class="math inline">ℳ(<em>F</em>) = (<em>A</em><sub>1</sub>, ⋯, <em>A</em><sub><em>n</em></sub>)</span>，记<span class="math inline"><em>M</em><sub><em>i</em></sub>(<em>F</em>) = <em>A</em><sub><em>i</em></sub></span>。如果分配始终给出成比例的分配或无嫉妒分配，则机制是完整的。文章仅考虑确定性机制。</p><p>如果每个智能体的主导策略是报告他的真实价值函数密度，则机制<span class="math inline">ℳ</span>是真实的，即<span class="math inline"><em>v</em><sub><em>i</em></sub>(ℳ<sub><em>i</em></sub>(<em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>n</em></sub>)) ≥ <em>v</em><sub><em>i</em></sub>(ℳ<sub><em>i</em></sub>(<em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>i</em> − 1</sub>, <em>f</em>′<sub><em>i</em></sub>, <em>f</em><sub><em>i</em> + 1</sub>, ⋯, <em>f</em><sub><em>n</em></sub>)), ∀<em>i</em> ∈ [<em>n</em>], ∀(<em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>n</em></sub>), ∀<em>f</em>′<sub><em>i</em></sub></span>。</p><h3 id="机制的存在性">机制的存在性</h3><p>文章首先证明，即使以下所有条件成立，也不存在真实的比例机制：</p><ul><li>有两名代理人</li><li>每个智能体的价值密度函数是分段常数</li><li>每个智能体都处于饥饿状态：每个<span class="math inline"><em>f</em><sub><em>i</em></sub></span>都满足<span class="math inline"><em>f</em><sub><em>i</em></sub>(<em>x</em>) &gt; 0  ∀<em>x</em> ∈ [0, 1]</span></li><li>机制不需要是完整的：机制可能会丢弃蛋糕的一部分。</li></ul><p>更具体的，文章利用反证法证明了该结论。假设两个智能体存在一个真实的比例机制<span class="math inline">ℳ</span>，那么构造多个切蛋糕实例，分析<span class="math inline">ℳ</span>在这些实例上的输出，并证明无法保证所有这些实例的真实性和比例性。</p><p>文章构造了六个实例，对于前五个实例，文章表明<span class="math inline">ℳ</span>的输出是唯一的。基于前五个实例的输出，文章表明任何<span class="math inline">ℳ</span>对构造的第六个实例的分配输出将违反比例性或真实性。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202311-20231114/picture-1.png" alt="" /><figcaption>picture</figcaption></figure><ol type="1"><li><span class="math inline">∀<em>x</em> ∈ [0, 1]</span>。显然这里<span class="math inline">$|\mathcal{M}_1(F^{(1)})|=|\mathcal{M}_2(F^{(1)})|=\frac{1}{2}$</span>。记<span class="math inline"><em>X</em><sub>1</sub> = ℳ<sub>1</sub>(<em>F</em><sup>(1)</sup>), <em>X</em><sub>2</sub> = ℳ<sub>2</sub>(<em>F</em><sup>(1)</sup>)</span>。形象的，可以考虑<span class="math inline"><em>X</em><sub>1</sub> = [0, 0.5], <em>X</em><sub>2</sub> = (0.5, 1]</span><ul><li><span class="math inline"><em>F</em><sup>(1)</sup> = (<em>f</em><sub>1</sub><sup>(1)</sup>, <em>f</em><sub>2</sub><sup>(1)</sup>)</span></li><li><span class="math inline"><em>f</em><sub>1</sub><sup>(1)</sup>(<em>x</em>) = 1</span></li><li><span class="math inline"><em>f</em><sub>2</sub><sup>(1)</sup>(<em>x</em>) = 1</span></li></ul></li><li><span class="math inline">∀<em>x</em> ∈ [0, 1]</span>。<ul><li><span class="math inline"><em>F</em><sup>(2)</sup> = (<em>f</em><sub>1</sub><sup>(2)</sup>, <em>f</em><sub>2</sub><sup>(2)</sup>)</span></li><li><span class="math inline"><em>f</em><sub>1</sub><sup>(2)</sup>(<em>x</em>) = 1</span></li><li><span class="math inline">$f^{(2)}_2(x)=\begin{cases}\epsilon&amp;x\in X_1\\1&amp;x\in X_2\end{cases}$</span></li></ul></li><li><span class="math inline">∀<em>x</em> ∈ [0, 1]</span>。记<span class="math inline"><em>X</em><sub>11</sub> = ℳ<sub>1</sub>(<em>F</em><sup>(3)</sup>)⋂<em>X</em><sub>1</sub>, <em>X</em><sub>12</sub> = ℳ<sub>2</sub>(<em>F</em><sup>(3)</sup>)⋂<em>X</em><sub>1</sub>, <em>X</em><sub>21</sub> = ℳ<sub>1</sub>(<em>F</em><sup>(3)</sup>)⋂<em>X</em><sub>2</sub>, <em>X</em><sub>22</sub> = ℳ<sub>2</sub>(<em>F</em><sup>(3)</sup>)⋂<em>X</em><sub>2</sub></span>。形象地，<span class="math inline"><em>X</em><sub>11</sub> = [0, 0.25], <em>X</em><sub>12</sub> = (0.25, 0.5], <em>X</em><sub>21</sub> = (0.5, 0.75], <em>X</em><sub>22</sub> = (0.75, 1]</span>。<ul><li><span class="math inline"><em>F</em><sup>(3)</sup> = (<em>f</em><sub>1</sub><sup>(3)</sup>, <em>f</em><sub>2</sub><sup>(3)</sup>)</span></li><li><span class="math inline">$f^{(3)}_1(x)=\begin{cases}0.5&amp;x\in X_1\\1&amp;x\in X_2\end{cases}$</span></li><li><span class="math inline">$f^{(3)}_2(x)=\begin{cases}\epsilon&amp;x\in X_1\\1&amp;x\in X_2\end{cases}$</span></li></ul></li><li><span class="math inline">∀<em>x</em> ∈ [0, 1]</span>。<ul><li><span class="math inline"><em>F</em><sup>(4)</sup> = (<em>f</em><sub>1</sub><sup>(4)</sup>, <em>f</em><sub>2</sub><sup>(4)</sup>)</span></li><li><span class="math inline">$f^{(4)}_1(x)=\begin{cases}1&amp;x\in X_{11}\\\epsilon&amp;x\in X_{12}\\2\epsilon&amp;x\in X_{21}\\\epsilon&amp;x\in X_{22}\end{cases}$</span></li><li><span class="math inline">$f^{(4)}_2(x)=\begin{cases}\epsilon&amp;x\in X_1\\1&amp;x\in X_2\end{cases}$</span></li></ul></li><li><span class="math inline">∀<em>x</em> ∈ [0, 1]</span>。<ul><li><span class="math inline"><em>F</em><sup>(5)</sup> = (<em>f</em><sub>1</sub><sup>(5)</sup>, <em>f</em><sub>2</sub><sup>(5)</sup>)</span></li><li><span class="math inline"><em>f</em><sub>1</sub><sup>(5)</sup>(<em>x</em>) = 1</span></li><li><span class="math inline">$f^{(5)}_2(x)=\begin{cases}1-\epsilon&amp;x\in X_{11}\\\epsilon&amp;x\in X_{12}\\1&amp;x\in X_2\end{cases}$</span></li></ul></li><li><span class="math inline">∀<em>x</em> ∈ [0, 1]</span>。<ul><li><span class="math inline"><em>F</em><sup>(6)</sup> = (<em>f</em><sub>1</sub><sup>(6)</sup>, <em>f</em><sub>2</sub><sup>(6)</sup>)</span></li><li><span class="math inline">$f^{(6)}_1(x)=\begin{cases}1&amp;x\in X_{11}\\\epsilon&amp;x\in X_{12}\\2\epsilon&amp;x\in X_{21}\\\epsilon&amp;x\in X_{22}\end{cases}$</span></li><li><span class="math inline">$f^{(6)}_2(x)=\begin{cases}1-\epsilon&amp;x\in X_{11}\\\epsilon&amp;x\in X_{12}\\1&amp;x\in X_2\end{cases}$</span></li></ul></li></ol><p>文章证明 在最后一个实例的情况下，不能找到一个能输出保证真实性与成比例的分配的机制。因此，考虑对真实性或比例性的进行要求上的放宽。文章首先证明，如果不放松真实性，那么近似比例机制（0.974031-近似）是不存在的。</p><h3 id="较弱的真实性保证规避风险的真实性">较弱的真实性保证：规避风险的真实性</h3><p>文章证明，如果机制<span class="math inline">ℳ</span>满足，所以参与人如实报告其价值密度函数的策略形成纳什均衡，则<span class="math inline">ℳ</span>是真实的。</p><p>文章首先定义了规避风险的真实性：</p><p>如果对于具有价值密度函数<span class="math inline"><em>f</em><sub><em>i</em></sub></span>的每个代理人<span class="math inline"><em>i</em></span>以及对于任何<span class="math inline"><em>f</em>′<sub><em>i</em></sub></span>，以下任一条件成立，那么机制<span class="math inline">ℳ</span>是风险规避真实的：</p><ul><li>对任何<span class="math inline"><em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>i</em> − 1</sub>, <em>f</em><sub><em>i</em> + 1</sub>, ⋯, <em>f</em><sub><em>n</em></sub></span>，有<span class="math inline"><em>v</em><sub><em>i</em></sub>(ℳ<sub><em>i</em></sub>(<em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>i</em> − 1</sub>, <em>f</em><sub><em>i</em></sub>, <em>f</em><sub><em>i</em> + 1</sub>, ⋯, <em>f</em><sub><em>n</em></sub>)) ≥ <em>v</em><sub><em>i</em></sub>(ℳ<sub><em>i</em></sub>(<em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>i</em> − 1</sub>, <em>f</em>′<sub><em>i</em></sub>, <em>f</em><sub><em>i</em> + 1</sub>, ⋯, <em>f</em><sub><em>n</em></sub>))</span></li><li>存在某个<span class="math inline"><em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>i</em> − 1</sub>, <em>f</em><sub><em>i</em> + 1</sub>, ⋯, <em>f</em><sub><em>n</em></sub></span>，使得<span class="math inline"><em>v</em><sub><em>i</em></sub>(ℳ<sub><em>i</em></sub>(<em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>i</em> − 1</sub>, <em>f</em>′<sub><em>i</em></sub>, <em>f</em><sub><em>i</em> + 1</sub>, ⋯, <em>f</em><sub><em>n</em></sub>)) &lt; <em>v</em><sub><em>i</em></sub>(ℳ<sub><em>i</em></sub>(<em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>i</em> − 1</sub>, <em>f</em><sub><em>i</em></sub>, <em>f</em><sub><em>i</em> + 1</sub>, ⋯, <em>f</em><sub><em>n</em></sub>))</span></li></ul><p>如果<span class="math inline">ℳ</span>是成比例的，并且对于具有价值密度函数<span class="math inline"><em>f</em><sub><em>i</em></sub></span>的每个代理人<span class="math inline"><em>i</em></span>以及对于任何<span class="math inline"><em>f</em>′<sub><em>i</em></sub></span>，以下任一条件成立，那么机制<span class="math inline">ℳ</span>是比例风险规避真实的：</p><ul><li>对任何<span class="math inline"><em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>i</em> − 1</sub>, <em>f</em><sub><em>i</em> + 1</sub>, ⋯, <em>f</em><sub><em>n</em></sub></span>，有<span class="math inline"><em>v</em><sub><em>i</em></sub>(ℳ<sub><em>i</em></sub>(<em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>i</em> − 1</sub>, <em>f</em><sub><em>i</em></sub>, <em>f</em><sub><em>i</em> + 1</sub>, ⋯, <em>f</em><sub><em>n</em></sub>)) ≥ <em>v</em><sub><em>i</em></sub>(ℳ<sub><em>i</em></sub>(<em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>i</em> − 1</sub>, <em>f</em>′<sub><em>i</em></sub>, <em>f</em><sub><em>i</em> + 1</sub>, ⋯, <em>f</em><sub><em>n</em></sub>))</span></li><li>存在某个<span class="math inline"><em>f</em><sub>1</sub>, ⋯, <em>f</em><sub><em>i</em> − 1</sub>, <em>f</em><sub><em>i</em> + 1</sub>, ⋯, <em>f</em><sub><em>n</em></sub></span>，使得<span class="math inline">$v_i(\mathcal{M}_i(f_1,\cdots,f_{i-1},f'_i,f_{i+1},\cdots,f_n))&lt;\frac{1}{n}v_i([0,1])$</span></li></ul><h3 id="风险规避真实的无嫉妒机制">风险规避真实的无嫉妒机制</h3><p>首先考虑下面的算法：</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202311-20231114/picture-2.png" alt="" /><figcaption>picture</figcaption></figure><p>该算法可以为具有分段常数值密度函数的参与人输出无嫉妒分配。该算法首先从所有参与人收集所有不连续点，从而将蛋糕划分为多个区间，其中每个参与人的价值密度函数在每个区间上都是均匀的。然后，该算法将每个区间统一分配给所有参与人。该算法的输出分配<span class="math inline">(<em>A</em><sub>1</sub>, ⋯, <em>A</em><sub><em>n</em></sub>)</span>满足<span class="math inline">$v_i(A_j)=\frac{1}{n}v_i([0,1])$</span>（这个分配的属性称为完美），这显然是无嫉妒。 然而，为了使算法具有确定性，我们需要指定参与人从左到右的顺序，以了解每个间隔的分配方式。当然，此算法不是风险规避真实的。</p><p>原因是，参与人可以“删除”连续点来合并两个区间<span class="math inline">[<em>x</em><sub><em>j</em></sub>, <em>x</em><sub><em>j</em> + 1</sub>)</span>和<span class="math inline">[<em>x</em><sub><em>j</em> + 1</sub>, <em>x</em><sub><em>j</em> + 2</sub>)</span>。 如果他的价值在<span class="math inline">[<em>x</em><sub><em>j</em></sub>, <em>x</em><sub><em>j</em> + 1</sub>)</span>（或<span class="math inline">[<em>x</em><sub><em>j</em> + 1</sub>, <em>x</em><sub><em>j</em> + 2</sub>)</span>）上更高，并且他知道该机制将在最左边分配一块<span class="math inline">[<em>x</em><sub><em>j</em></sub>, <em>x</em><sub><em>j</em> + 2</sub>)</span>。因此，每个区间上确定性的从左到右的顺序会损害真实性。</p><p>基于此，文章提出了下面的机制，其能够输出一个比例风险规避真实的、无嫉妒的分配。该机制与上面的机制相同，只是每个区间<span class="math inline">[<em>x</em><sub><em>j</em></sub>, <em>x</em><sub><em>j</em> + 1</sub>)</span>上从左到右的顺序取决于索引<span class="math inline"><em>j</em></span>。直观上，如果一个智能体尝试合并两个区间，他不知道他在<span class="math inline">[<em>x</em><sub><em>j</em></sub>, <em>x</em><sub><em>j</em> + 1</sub>)</span>的<span class="math inline">$\frac{1}{n}$</span>的部分在哪里，因为他不知道其他智能体的值密度函数。这使得他最终可能会收到价值较低的部分。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202311-20231114/picture-3.png" alt="" /><figcaption>picture</figcaption></figure><h3 id="具有关联块的比例风险规避真实的机制">具有关联块的比例风险规避真实的机制</h3><p>机制2可能导致许多参与人收到零碎的区间，而在某些情况下参与人可能更享受到一块整区间。</p><p>考虑两个经典算法，其能给出具有连续区间的分配：</p><ol type="1"><li>动刀算法（Moving-knife）：令<span class="math inline">$a_i=\frac{1}{n}v_i([0,1])$</span>为代理<span class="math inline"><em>i</em></span>的比例值。动刀算法为每个代理<span class="math inline"><em>i</em></span>标记一个点<span class="math inline"><em>x</em><sub><em>i</em></sub></span>，使得<span class="math inline">[0, <em>x</em><sub><em>i</em></sub>)</span>对代理<span class="math inline"><em>i</em></span>恰好是值<span class="math inline"><em>a</em><sub><em>i</em></sub></span>。然后，算法找到<span class="math inline"><em>x</em><sub>1</sub>, ⋯, <em>x</em><sub><em>n</em></sub></span>中的最小值<span class="math inline"><em>x</em><sub><em>i</em><sup>*</sup></sub></span>，并将<span class="math inline">[0, <em>x</em><sub><em>i</em><sup>*</sup></sub>)</span>分配给代理人<span class="math inline"><em>i</em><sup>*</sup></span>。 接下来，对于蛋糕的剩余部分<span class="math inline">[<em>x</em><sub><em>i</em><sup>*</sup></sub>, 1]</span>，算法为<span class="math inline"><em>n</em> − 1</span>个剩余代理的每个标记一个点<span class="math inline"><em>x</em>′<sub><em>i</em></sub></span>，使得<span class="math inline">[<em>x</em><sub><em>i</em><sup>*</sup></sub>, <em>x</em>′<sub><em>i</em></sub>)</span>对于代理<span class="math inline"><em>i</em></span>来说正好值<span class="math inline"><em>a</em><sub><em>i</em></sub></span>。然后算法找到<span class="math inline"><em>n</em> − 1</span>个<span class="math inline"><em>x</em>′<sub><em>i</em></sub></span>中最小值<span class="math inline"><em>x</em><sub><em>i</em><sup><em>t</em></sup></sub></span>，并将<span class="math inline">[<em>x</em><sub><em>i</em><sup>*</sup></sub>, <em>x</em><sub><em>i</em><sup><em>t</em></sup></sub>)</span>分配给代理<span class="math inline"><em>i</em><sup><em>t</em></sup></span>。不断重复直到第<span class="math inline"><em>n</em> − 1</span>个智能体被分配了一个间隔，然后最后一个智能体获得了蛋糕的剩余部分。很容易验证每个前<span class="math inline"><em>n</em> − 1</span>个智能体收到的间隔恰好等于他的比例值，而最后一个智能体可能收到超过他比例值。</li><li>Even-Paz算法：是一个基于divide-and-conquer的算法。对每个参与人<span class="math inline"><em>i</em></span>，算法找到某个点<span class="math inline"><em>x</em><sub><em>i</em></sub></span>使得<span class="math inline">$v_i([0,x_i])=\lfloor\frac{n}{2}\rfloor v_i([0,1])$</span>。随后其找点<span class="math inline"><em>x</em><sub>1</sub>, ⋯, <em>x</em><sub><em>n</em></sub></span>的中值<span class="math inline"><em>x</em><sup>*</sup></span>。令<span class="math inline"><em>L</em></span>是全部参与人<span class="math inline"><em>i</em></span>使得<span class="math inline"><em>x</em><sub><em>i</em></sub> &lt; <em>x</em><sup>*</sup></span>的集合，<span class="math inline"><em>R</em></span>是全部参与人<span class="math inline"><em>i</em></span>使得<span class="math inline"><em>x</em><sub><em>i</em></sub> ≥ <em>x</em><sup>*</sup></span>的集合。由于<span class="math inline"><em>L</em></span>中每个参与人<span class="math inline"><em>i</em></span>都相信<span class="math inline">$v_i([0,x^*])\geq\lfloor\frac{n}{2}\rfloor v_i([0,1])$</span>，且<span class="math inline"><em>L</em></span>中有<span class="math inline">$\lfloor\frac{n}{2}\rfloor$</span>歌参与人，因而<span class="math inline">[0, <em>x</em><sup>*</sup>]</span>存在某个分配，使得<span class="math inline"><em>L</em></span>中每个参与人<span class="math inline"><em>i</em></span>都收到至少<span class="math inline">$\frac{1}{n}v_i([0,1])$</span>。递归地解决这两部分即可。</li></ol><p>当然，两个算法也都不是比例风险回避真实的。</p><p>因此，文章最后提出了下面的机制。特别是，如果需要全部分配，那么对于饥饿的参与人来说，它是比例风险规避真实的。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202311-20231114/picture-4.png" alt="" /><figcaption>picture</figcaption></figure><p>为了使得机制对非饥饿的参与人也是比例风险回避真实的，可以通过不全部分配来实现：只需要将第7行的分配改为将<span class="math inline">[<em>x</em><sub><em>j</em> − 1</sub><sup>(<em>i</em><sub><em>j</em></sub>)</sup>, <em>c</em><sub><em>j</em></sub>)</span>分配给代理人<span class="math inline"><em>i</em><sub><em>j</em></sub></span>。</p><h2 id="参考资料">参考资料</h2><ol type="1"><li>Tao, B. (2022, July 12). On Existence of Truthful Fair Cake Cutting Mechanisms. Proceedings of the 23rd ACM Conference on Economics and Computation. https://doi.org/10.1145/3490486.3538321</li></ol>]]></content>
      <pubDate>Fri, 24 Nov 2023 21:55:08 +0800</pubDate>
    </entry>
     
    <entry>
      <title><![CDATA[论文阅读 2023.09]]></title>
      <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/ITtech/PaperReading-202310-20231016</link>
      <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/ITtech/PaperReading-202310-20231016</guid>
      <content type="html"><![CDATA[<h1 id="论文阅读-2023.09">论文阅读 2023.09</h1><blockquote><p>本文首发于个人博客<br />发表日期：2023.10.31<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2 id="randomized-fifo-mechanisms">Randomized FIFO Mechanisms</h2><blockquote><p>Castro, F., Ma, H., Nazerzadeh, H., &amp; Yan, C. (2022, July 12). Randomized FIFO Mechanisms. Proceedings of the 23rd ACM Conference on Economics and Computation. https://doi.org/10.1145/3490486.3538353</p></blockquote><p>考虑一个打车平台，平台需要为每个乘客匹配一个司机，文章则着重研究如果实现较好的匹配。在传统的先进先出（FIFO）匹配中，平台维护一个司机列表（等待订单时间最久的司机排在头部），并优先匹配列表头部的司机。然而，在这种调度下司机很容易获得订单，这导致在列表头部的司机会倾向于拒绝低价值的订单而等待高价值的。从而，中等或低价值的订单很难被接受，这降低了平台的收入与出行的吞吐量较低。</p><p>为了解决这一问题，近年平台开始对司机进行限制：例如，平台正在向预先估算距离与收入的方向发展，并可能会在司机未接订单时隐藏目的地。然而，经验丰富的司机很容易绕过这些限制。另一方面，强制司机接受每个订单可能会使得每个司机获得的利益相差过大，从而降低司机的参与度，甚至可能导致司机离开平台。也有研究后进先出（LIFO）的可应用性，然而这会导致不公平：司机可以随时离线以参加到队列末尾，且在队列头部的将很难获得订单。</p><p>目前已有研究提出了时空价格机制（spatio-temporal pricing mechanism），其能保证社会福利最优与激励一致，然而这在实践中难以实现。一方面，对较短的行程提高定价并不合理，同时平台也无法让司机的支出定于某个预先设置好的单价，这也导致较长行程的收入难以降低。</p><p>由于某些行程总是能获得更多利益，文章研究在不调整行程价格的前提下，如何进行行程订单的分配。文章考虑行程具有一个起点，同时乘客和司机具有固定到达率。乘客要求前往多个目的地，而司机的收入也各不相同。当每个乘客到达时，或者乘客的行程请求被拒绝后，平台会将乘客的行程提供给队列中的司机。乘客愿意为一次匹配等待一段时间，但他们会在被司机拒绝一定次数后会取消订单。司机排队等候订单这一行为对于司机和平台来说成本都很高。司机旨在优化他们的总回报，即行程收入减去他们产生的等待成本。</p><p>文章考虑，在任何时间点，司机都知道供应、需求、队列长度以及他们在队列中的位置。 当提出行程请求时，司机会预先获得行程目的地和收入，以决定是否接受。此外，司机不会因为他们采取的任何行动而受到惩罚，并且可以拒绝任意数量的行程调度而不会失去他们在队列中的位置，在任何时间点重新加入队列的尾部，以及决定在抵达出发点时不加入队列，或在任何时间离开队列，从而可以在没有乘客的情况下重新返回出发点。</p><p>文章首先提出直接先进先出机制，该机制将低收入的行程直接提供给队列中较靠后的司机。文章证明接受所有调度在司机之间形成了子博弈完美均衡，并且均衡结果实现了第一最佳行程吞吐量和第二最佳净收入（即通过任何灵活和透明的机制可实现的最高稳态净收入）。然而，直接FIFO机制在实践中被认为是不公平的。以芝加哥中途机场为例。距离队列头部足够近的司机将不再接收任何返回芝加哥市中心的行程。</p><p>为了在不使用不公平调度规则的情况下实现最佳吞吐量和收入，文章引入了一系列随机FIFO机制。 随机 FIFO 机制由队列中的一组桶指定（例如，前10个位置、第10到20个位置等）。每个行程请求首先统一随机地提供给第一个容器中的司机。每次拒绝后，该机制都会将行程提供给下一个桶中的随机司机。通过以这种随机方式逐渐将订单发送到队列中，随机FIFO机制利用等待时间适当地调整激励措施，实现第一最佳吞吐量和第二最佳净收入；跳过队列其余部分的选项会激励队列中更靠后的司机接受收入较低的旅行；将每次调度随机分配给一小群司机，会增加每个司机等待下一次调度的时间，从而允许该机制优先考虑靠近队列头部的司机前往每个目的地，而不会刺激过度挑选。</p><h3 id="机制模型">机制模型</h3><p>考虑一个连续时间的模型，模型中有一个统一的起点，乘客的行程被分派给在队列中等待的司机。<span class="math inline">ℒ = {1, 2, ⋯, <em>l</em>}</span>表明了离散行程类型（比如目的地不同）的集合<span class="math inline"><em>l</em> ∈ ℤ<sub> &gt; 0</sub></span>。乘客的需求与司机的供应都是非原子的，并且不随时间推移改变。对每个位置<span class="math inline"><em>i</em> ∈ ℒ</span>，<span class="math inline"><em>μ</em><sub><em>i</em></sub> &gt; 0</span>表示请求到达位置<span class="math inline"><em>i</em></span>的乘客的到达率（换言之，单位时间到达的乘客数量）。在乘客到达后，其需求需要被分派给司机。所有的乘客都有一个耐心等级<span class="math inline"><em>P</em> ∈ ℤ<sub> &gt; 0</sub></span>，其表明乘客的需求在被司机接受前乘客愿意等待的时间，但乘客也可能会在第<span class="math inline"><em>P</em><sup>th</sup></span>次被司机拒绝后取消行程并离开。司机可以承载任何乘客到目的地，乘客本身没有对司机的偏好。</p><p>接着用<span class="math inline"><em>λ</em> &gt; 0</span>表示司机的到达率。在司机到达后，司机需要决定是否要加入队列。到达每个位置<span class="math inline"><em>i</em> ∈ ℒ</span>的净收入是<span class="math inline"><em>w</em><sub><em>i</em></sub></span>，其表明司机在完成到位置<span class="math inline"><em>i</em></span>的行程时可以获得收益<span class="math inline"><em>w</em><sub><em>i</em></sub></span>，而不加入队列或不携带行程订单就离开队列的司机的收入为0。司机在队列中等待的每个单位时间，都会产生机会成本<span class="math inline"><em>c</em> &gt; 0</span>，平台产生的机会成本则为<span class="math inline"><em>c</em><sub><em>p</em></sub> ∈ [0, <em>c</em>]</span>。司机具有战略性，他们想要最优化行程的收入与等待的机会成本的差值，且对于乘客或目的地没有偏好。</p><p>调度机制本身的时间表如下：在每个乘客到达时，机制会将乘客的行程需求分发给队列中的司机，如果司机接受了这次分派的行程，那么会离开队列以接乘客。否则，行程会被重新分派，直到有司机接受行程订单、乘客取消订单或机制决定不分派订单。</p><p>文章考虑如下的设置：机制有对需求、供应、机会成本以及到不同行程的净收入的完整信息，假设全部司机也都共享相同的信息。文章希望设计一种透明灵活的机制，即在任何时刻司机都知道队列的总长度与自己在队列中的位置。当司机被分派行程订单时，能够预知行程的目的地与净收入，以决定是否要接受这个订单。此外，司机不会因为自己的行动而被惩罚，并乐意选择是否：在拒绝订单的同时保留自己在队列中的位置；在任何时刻重新加入队列的末尾；不加入队列或在没有乘客的情况下离开队列。</p><p>平台的吞吐量事单位时间内队列中司机完成的订单数量。平台的净收入是司机单位时间内完成的订单的净收入和，减去平台在司机等待过程中产生的机会成本。当司机不理性并接受全部被分派的订单时，此时可实现的最高吞吐量所产生的净收入被视为第一最佳收入。</p><p>简单起见，假设行程按顺序排列<span class="math inline"><em>w</em><sub>1</sub> &gt; <em>w</em><sub>2</sub> &gt; ⋯ &gt; <em>w</em><sub><em>l</em></sub> ≥ 0</span>。在需求和供应稳定且无穷小时，平台也不需要非零的司机队列。稳定状态下，一个想要获得更多净收入的平台不应让司机留在队列中，而应在司机到达时按净收入降序分派订单，直到司机队列为空或乘客行程订单被分派完。将被（部分）完成的行程中收入最低的记为<span class="math inline">$i^*=\max\{i]in\mathcal{L}|\lambda&gt;\sum^{i-1}_{j=1}u_j\}$</span>（相当于在尽可能满足更多的订单的情况下将前面的订单尽可能分派给司机）。</p><p>稳定状态下的第一最佳收入发生在队列中没有司机的情况。司机到达时就被以净收入倒序分派订单。剩下的司机则被建议离开队列（可以去别的起点接乘客）。第一最佳的吞吐量为<span class="math inline"><em>T</em><sub><em>F</em><em>B</em></sub> = min {<em>λ</em>, ∑<sub><em>i</em> ∈ ℒ</sub><em>μ</em><sub><em>i</em></sub>}</span>，第一最佳收入则为<span class="math inline">$R_{FB}=\sum^{i^*-1}_{i=1}w_i\mu_i + w_i\cdot\min\{\lambda-\sum^{i^*-1}_{i=1}\mu_i,\mu_{i^*}\}$</span>。</p><h3 id="严格fifo分派">严格FIFO分派</h3><p>研究表明如果司机能够灵活的选择订单，这会刺激过度的挑选。在严格FIFO分派下，考虑到目的地1的乘客订单，这一订单会被队列头部的司机接受（注意目的地已经按净收入降序排序）。另一方面，在头部（无穷小）的司机只愿意接受到位置1的订单，因为他在队列头部，能够接受所有订单，也不需要等待到目的地1的订单。</p><p>类似的，一个司机愿意接受到目的地2的订单仅当到位置1的订单的额外等待时间超过<span class="math inline"><em>w</em><sub>1</sub> − <em>w</em><sub>2</sub></span>。令<span class="math inline">𝒯<sub>1, 2</sub></span>表明司机相比于立刻接受到位置2的订单，愿意等待到位置1的最大额外时间，即¥¥<span class="math inline">𝒯<sub>1, 2</sub> = (<em>w</em><sub>1</sub> − <em>w</em><sub>2</sub>)/<em>c</em></span>。根据利特尔法则有第一个愿意接受到位置2订单的司机排在位置<span class="math inline">$n_2\overset{\Delta}{=}\mu_1\mathcal{T}_{1,2}$</span>而对于这个位置的司机，他的持续受益（净收益减去时间成本）是<span class="math inline"><em>w</em><sub>2</sub></span>。类似的，相比于前往位置<span class="math inline"><em>i</em> + 1</span>，愿意等待去位置<span class="math inline"><em>i</em></span>的司机需要额外的<span class="math inline">𝒯<sub><em>i</em>, <em>i</em> + 1</sub></span>单位的等待时间。</p><p>因而如果乘客有无限耐心且不会订单，非形式化地，在<span class="math inline"><em>n</em><sub><em>i</em></sub></span>位置的司机总能得到<span class="math inline"><em>w</em><sub><em>i</em></sub></span>的持续预期受益。在均衡时，只有当司机的位置<span class="math inline"><em>q</em> ≥ <em>n</em><sub><em>i</em></sub></span>时才应该接受分派的订单：</p><p><br /><span class="math display">$$\begin{align*}    n_1 &amp;= 0\\    n_i &amp;\overset{\Delta}{=} \sum^{i-1}_{j=1}(\frac{w_j-w_{j+1}}{c}\sum^j_{k=1}\mu_k),\forall i\geq2\end{align*}$$</span><br /></p><p>文章计算出这种情况下的均衡，等价于如下的子博弈完美均衡：</p><ul><li>当且仅当司机位置在<span class="math inline"><em>q</em> ≥ <em>n</em><sub><em>i</em></sub></span>时接受到每个位置<span class="math inline"><em>i</em> ∈ ℒ</span>的订单</li><li>当且仅当队列长度弱低于<span class="math inline">$\overline{Q}$</span>时加入队列，并在加入后永远不离开队列或重新加入队列末尾。这里<span class="math inline">$\overline{Q}\overset{\Delta}{=}n_l+\frac{w_l}{c}\sum^l_{i=1}\mu_i=\sum_{i\in\mathcal{L}}w_i\mu_i/c$</span>。</li></ul><p>然而，若乘客耐心有限，那么乘客的订单将不会到达愿意接受这一订单的司机。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202310-20231016/picture-1.png" alt="" /><figcaption>picture</figcaption></figure><h3 id="直接fifo机制">直接FIFO机制</h3><p>文章接着介绍了一种不公平的机制，在这一机制中，在队列末尾的司机会被优先分派订单。</p><p>更形式化的，对长度为<span class="math inline"><em>Q</em> &gt; 0</span>的队列，令<span class="math inline"><em>q</em> ∈ [0, <em>Q</em>]</span>为队列中的一个特定位置，其中<span class="math inline"><em>q</em> = 0</span>代表在队列头部，也就是等待了最久时间的司机。令<span class="math inline"><em>h</em></span>表示特定乘客行程订单的分发历史，也就是提供过这一行程的司机当时在队列中的位置。用<span class="math inline"><em>ϕ</em></span>表示不分发该行程的决定。</p><p>调度机制如下：给定长度<span class="math inline"><em>Q</em></span>的队列，行程的历史<span class="math inline"><em>h</em></span>以及行程的目的地，该机制在<span class="math inline">[0, <em>Q</em>] ∪ {<em>ϕ</em>}</span>上确定一个概率分布。当乘客到达，或乘客的订单被某个司机拒绝后，机制要么将行程订单重新分派给队列中处于某个位置<span class="math inline"><em>q</em></span>的司机，要么拒绝该行程。</p><p>这一机制根据队列长度这一状态与行程的分派历史来决定分派，而不依赖于其他因素。文章同样关注司机基于队列长度与司机位置所做出的决策，并将这一策略记为三元组<span class="math inline"><em>σ</em> = (<em>α</em>, <em>β</em>, <em>γ</em>)</span>：</p><ol type="1"><li><span class="math inline"><em>α</em>(<em>q</em>, <em>Q</em>, <em>i</em>) ∈ [0, 1]</span>是位于位置<span class="math inline"><em>q</em></span>的司机在被分派到位置<span class="math inline"><em>i</em></span>的行程订单时接受的概率</li><li><span class="math inline"><em>β</em>(<em>q</em>, <em>Q</em>) ∈ [0, 1]</span>是位于位置<span class="math inline"><em>q</em></span>的司机重新加入队列末尾的概率</li><li><span class="math inline"><em>γ</em>(<em>q</em>, <em>Q</em>) ∈ [0, 1]</span>是位于位置<span class="math inline"><em>q</em></span>的司机离开队列并不携带乘客的概率</li></ol><p>令<span class="math inline"><em>U</em>(<em>q</em>, <em>Q</em>, <em>σ</em>, <em>σ</em>′)</span>表示当队列长度<span class="math inline"><em>Q</em></span>，该司机接受策略<span class="math inline"><em>σ</em></span>而其他司机接受策略<span class="math inline"><em>σ</em>′</span>时（包括未来加入队列的司机），位于位置<span class="math inline"><em>q</em></span>的司机持续受益的随机变量。这包括了司机未来可能获得的净收益，减去从此时开始在队列中等待产生的机会成本的差。将<span class="math inline">$\pi(q,Q,\sigma,\sigma')\overset{\Delta}{=}\mathbb{E}[U(q,Q,\sigma,\sigma')]$</span>表示司机从位置<span class="math inline"><em>q</em></span>开始的期望收益。文章接着进行了以下定义：</p><ul><li><strong>子博弈完美均衡（SPE, subgame perfect equilibrium）</strong>：策略<span class="math inline"><em>σ</em><sup>*</sup></span>在司机间形成子博弈完美均衡，如果对任何经济体与任何可行的策略<span class="math inline"><em>σ</em></span>，有<span class="math inline"><em>π</em>(<em>q</em>, <em>Q</em>, <em>σ</em><sup>*</sup>, <em>σ</em><sup>*</sup>) ≥ <em>π</em>(<em>q</em>, <em>Q</em>, <em>σ</em>, <em>σ</em><sup>*</sup>), ∀<em>Q</em> ≥ 0, ∀<em>q</em> ∈ [0, <em>Q</em>]</span></li><li><strong>个体理性（IR）</strong>：机制在SPE下是IR的，如果策略<span class="math inline"><em>σ</em><sup>*</sup></span>在司机间形成子博弈完美均衡时，对任何经济体，<span class="math inline"><em>π</em>(<em>q</em>, <em>Q</em>, <em>σ</em><sup>*</sup>, <em>σ</em><sup>*</sup>) ≥ 0, ∀<em>Q</em> ≥ 0, ∀<em>q</em> ∈ [0, <em>Q</em>]</span></li><li>无嫉妒（Envy-freeness）：一个机制在SPE下是无嫉妒的，如果策略<span class="math inline"><em>σ</em><sup>*</sup></span>在司机间形成子博弈完美均衡时，对任何经济体，<span class="math inline"><em>π</em>(<em>q</em><sub>1</sub>, <em>Q</em>, <em>σ</em><sup>*</sup>, <em>σ</em><sup>*</sup>) ≥ <em>π</em>(<em>q</em><sub>2</sub>, <em>Q</em>, <em>σ</em><sup>*</sup>, <em>σ</em><sup>*</sup>), ∀<em>Q</em> ≥ 0, ∀<em>q</em><sub>1</sub>, <em>q</em><sub>2</sub> ∈ [0, <em>Q</em>] s.t. <em>q</em><sub>1</sub> ≤ <em>q</em><sub>2</sub></span></li></ul><p>给定机制<span class="math inline">ℳ</span>与在其达到SPE的策略<span class="math inline"><em>σ</em><sup>*</sup></span>，令<span class="math inline"><em>Q</em><sup>*</sup></span>表示在该策略下稳定状态时队列的长度，换言之此时单位时间加入队列的司机数量与离开队列的司机数量相等。用<span class="math inline"><em>z</em><sub><em>i</em></sub>(<em>σ</em><sup>*</sup>)</span>表示当所有司机都采用策略<span class="math inline"><em>σ</em><sup>*</sup></span>时，在稳定状态下完成的目的地为<span class="math inline"><em>i</em></span>的行程订单占比，因而有吞吐量：<span class="math inline">$T_{\mathcal{M}}(\sigma^*)\overset{\Delta}{=}\sum_{i\in\mathcal{L}}z_i(\sigma^*)\mu_i$</span>。平台净收益为<span class="math inline">$R_{\mathcal{M}}(\sigma^*)\overset{\Delta}{=}\sum_{i\in\mathcal{L}}z_i(\sigma^*)\mu_i w_i-Q^* c_p$</span>。当<span class="math inline"><em>c</em><sub><em>p</em></sub> = <em>c</em></span>时，平台的净收益就等于全部司机的净收益。</p><p>机制预期能达到第一最佳吞吐量，以及第二最佳收入，即当机制透明灵活，能给司机提供全部信息，并不会惩罚司机时，在稳定均衡状态下的最大净收益。</p><p><strong>直接FIFO机制</strong>：到每个目的地<span class="math inline"><em>i</em> ∈ ℒ</span>的行程被以FIFO形式分发给队列中从<span class="math inline"><em>n</em><sub><em>i</em></sub></span>位置开始的司机，并要求此时<span class="math inline"><em>Q</em> ≥ <em>n</em><sub><em>i</em></sub></span>，否则不分派该行程。若乘客有无限的耐心，则按照严格FIFO机制调度。</p><p>文章证明在这种机制下全部司机接受直接FIFO机制分发的行程订单，并当且仅当队列最大为<span class="math inline">$\overline{Q}\overset{\Delta}{=}n_l+\frac{w_l}{c}\sum_{i\in\mathcal{L}}\mu_i$</span>时才加入队列，采用这样的策略能够达到SPE。同时，该均衡也是IR和无嫉妒的。另一方面，当司机数量大于所需数量时，尽管机制无法实现第一最佳收入，但能够实现第二最佳收入与第一最佳吞吐量。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202310-20231016/picture-2.png" alt="" /><figcaption>picture</figcaption></figure><p>然而，在直接FIFO机制下靠近头部的司机可能会比后面的司机以更慢的速度接收到某些目的地的行程订单，因此不太公平。</p><h3 id="随机fifo机制">随机FIFO机制</h3><p>文章最后提出了随机FIFO机制，该机制相对公平，并能实现最佳的均衡情况下的吞吐量与净收益。文章首先定义了在所有订单都被均匀随机地分派给全部司机情况下的均衡状态：</p><p><strong>稳定状态下的纳什均衡</strong>：在某个机制下，策略<span class="math inline"><em>σ</em><sup>*</sup></span>在司机间形成了稳定状态下的纳什均衡，当存在队列长度<span class="math inline"><em>Q</em><sup>*</sup> ≥ 0</span>使得：</p><ol type="1"><li>对任何可行的策略<span class="math inline"><em>σ</em></span>和队列中任意位置<span class="math inline"><em>q</em> ∈ [0, <em>Q</em><sup>*</sup>]</span>，有<span class="math inline"><em>π</em>(<em>q</em>, <em>Q</em><sup>*</sup>, <em>σ</em><sup>*</sup>, <em>σ</em><sup>*</sup>) ≥ <em>π</em>(<em>q</em>, <em>Q</em><sup>*</sup>, <em>σ</em>, <em>σ</em><sup>*</sup>)</span></li><li>当所有司机都采用策略<span class="math inline"><em>σ</em><sup>*</sup></span>，且稳定的状态表明队列长度为<span class="math inline"><em>Q</em><sup>*</sup></span></li></ol><p>文章表明，在达到稳定状态下的纳什均衡时，最佳的机制实现了第一最佳吞吐量与第二最佳收入。当<span class="math inline"><em>c</em><sub><em>p</em></sub> = 0</span>时，也实现了第一最佳收入。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202310-20231016/picture-3.png" alt="" /><figcaption>picture</figcaption></figure><p><strong>随机FIFO机制</strong>：随机FIFO机制被队列<span class="math inline">$([\underline{b}^{(1)},\overline{b}^{(1)}],[\underline{b}^{(2)},\overline{b}^{(2)}],\cdots,[\underline{b}^{(m)},\overline{b}^{(m)}])$</span>中<span class="math inline"><em>m</em> ≥ 1</span>个桶（bin）指定。当行程被第<span class="math inline"><em>k</em></span>次分派时，机制将其均匀随机地分发给第<span class="math inline"><em>k</em></span>个桶<span class="math inline">$[\underline{b}^{(k)},\overline{b}^{(k)}]$</span>中的司机。</p><p>给定任意经济体，令<span class="math inline">(ℒ<sup>(1)</sup>, ℒ<sup>(2)</sup>, ⋯, ℒ<sup>(<em>m</em>)</sup>)</span>为前<span class="math inline"><em>i</em><sup>*</sup></span>个目的地<span class="math inline">{1, 2, ⋯, <em>i</em><sup>*</sup>} ∈ ℒ</span>的有序划分，其中<span class="math inline"><em>m</em> ≤ min {<em>i</em><sup>*</sup>, <em>P</em>}</span>：</p><ol type="1"><li>总体详尽：<span class="math inline">$\cup^m_{k=1}\mathcal{L}^{(k)}=\{1,2,\cdots,i^*\},\forall k\in[1,m],\mathcal{L}^{(k)}\neq\emptyset$</span></li><li>互斥：<span class="math inline">∀<em>k</em><sub>1</sub>, <em>k</em><sub>2</sub> ≤ <em>m</em> s.t. <em>k</em><sub>1</sub> ≠ <em>k</em><sub>2</sub>, ℒ<sup>(<em>k</em><sub>1</sub>)</sup> ∩ ℒ<sup>(<em>k</em><sub>2</sub>)</sup> = ∅</span></li><li>单调：<span class="math inline">∀<em>k</em><sub>1</sub>, <em>k</em><sub>2</sub> ≤ <em>m</em> s.t. <em>k</em><sub>1</sub> ≠ <em>k</em><sub>2</sub>, <em>i</em> &lt; <em>j</em>∀<em>i</em> ∈ ℒ<sup>(<em>k</em><sub>2</sub>)</sup>, <em>j</em> ∈ ℒ<sup>(<em>k</em><sub>2</sub>)</sup></span></li></ol><p>给定一个经济体和前<span class="math inline"><em>i</em><sup>*</sup></span>个目的地<span class="math inline">{1, 2, ⋯, <em>i</em><sup>*</sup>} ∈ ℒ</span>的有序划分<span class="math inline">(ℒ<sup>(1)</sup>, ℒ<sup>(2)</sup>, ⋯, ℒ<sup>(<em>m</em>)</sup>)</span>，按如下方式构造队列<span class="math inline">$([\underline{b}^{(1)},\overline{b}^{(1)}],[\underline{b}^{(2)},\overline{b}^{(2)}],\cdots,[\underline{b}^{(m)},\overline{b}^{(m)}])$</span>中的<span class="math inline"><em>m</em></span>个桶：</p><p><br /><span class="math display">$$\begin{align*}    \underline{b}^{(k)} &amp;\overset{\Delta}{=}\sum_{i\in\cup_{k'&lt;k}\mathcal{L}^{(k')}}(w_i-\min_{i'\in\mathcal{L}^{(k)}}\{w_i'\})\mu_i/c \\    \overline{b}^{(k)} &amp;\overset{\Delta}{=}\sum_{i\in\cup_{k'\leq k}\mathcal{L}^{(k')}}(w_i-\min_{i'\in\mathcal{L}^{(k)}}\{w_i'\})\mu_i/c\end{align*}$$</span><br /></p><p>文章最后具体表明了这一类能实现最佳稳定状态下纳什均衡的随机FIFO机制：</p><p><strong>随机FIFO机制</strong>：对任何经济体和前<span class="math inline"><em>i</em><sup>*</sup></span>个目的地<span class="math inline">{1, 2, ⋯, <em>i</em><sup>*</sup>} ∈ ℒ</span>的有序划分<span class="math inline">(ℒ<sup>(1)</sup>, ℒ<sup>(2)</sup>, ⋯, ℒ<sup>(<em>m</em>)</sup>)</span>，其中<span class="math inline"><em>m</em> ≤ min {<em>i</em><sup>*</sup>, <em>P</em>}</span>，能够满足上述随机分给桶内司机的机制能达到第一最佳吞吐量与第二最佳收入。当<span class="math inline"><em>c</em><sub><em>p</em></sub> = 0</span>时，也实现了第一最佳收入。通过这一种机制，司机的收入的波动性也被大大减小了。</p><h3 id="实验结果">实验结果</h3><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202310-20231016/picture-6.png" alt="" /><figcaption>picture</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202310-20231016/picture-4.png" alt="" /><figcaption>picture</figcaption></figure><p>数据集如上，文章根据实际情况假定了机会成本，乘客到达率等因素。为了估计出行的分布以及按目的地划分的出行净收入，文章利用了芝加哥市公开的乘车共享平台（Uber、Lyft）的出行级别数据。该数据集提供了每次出行的票价（四舍五入到最接近的2.50美元）、每次行程的出发地和目的地，以及每次行程开始和结束的时间戳（四舍五入到最近的15分钟）。芝加哥市内共有801个区，文章将其视为目的地集。</p><p>2018年11月1日至2020年3月11日，从奥黑尔出发的出行总数为453万次。 按目的地区划分的出行次数如图5a，按目的地划分的平均出行费用如图1a。文章假设驾驶员的机会成本为<span class="math inline"><em>c</em> = 1/3</span>，代表在城市中驾驶的平均驾驶员每小时赚取20美元的情况。结合平均票价、平均行程持续时间和机会成本，文章按旅行目的地估算净利润，如图5b。</p><p>文章将乘客的总到达率固定为<span class="math inline">∑<sub><em>i</em> ∈ ℒ</sub><em>μ</em><sub><em>i</em></sub> = 12</span>每分钟。这大致等于工作日傍晚时段完成行程的比率。文章假设平台司机时间的机会成本为每分钟<span class="math inline"><em>c</em><sub><em>p</em></sub> = <em>c</em> = 1/3</span>，这对应于第一最佳和第二最佳净收入之间差距是最大的场景。最后，文章评估的随机FIFO机制对应于将已完成行程集按顺序划分为最多<span class="math inline"><em>P</em></span>个子集，每个子集包含（大约）相同数量的目的地。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202310-20231016/picture-5.png" alt="" /><figcaption>picture</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202310-20231016/picture-7.png" alt="" /><figcaption>picture</figcaption></figure><h2 id="参考文献">参考文献</h2><ol type="1"><li>Castro, F., Ma, H., Nazerzadeh, H., &amp; Yan, C. (2022, July 12). Randomized FIFO Mechanisms. Proceedings of the 23rd ACM Conference on Economics and Computation. https://doi.org/10.1145/3490486.3538353</li></ol>]]></content>
      <pubDate>Tue, 31 Oct 2023 22:22:21 +0800</pubDate>
    </entry>
     
    <entry>
      <title><![CDATA[论文阅读 2023.09]]></title>
      <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/ITtech/PaperReading-202309-20230920</link>
      <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/ITtech/PaperReading-202309-20230920</guid>
      <content type="html"><![CDATA[<h1 id="论文阅读-2023.09">论文阅读 2023.09</h1><blockquote><p>本文首发于个人博客<br />发表日期：2023.10.10<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2 id="the-landscape-of-auto-bidding-auctions-value-versus-utility-maximization">The Landscape of Auto-bidding Auctions: Value versus Utility Maximization</h2><blockquote><p>Balseiro, S., Deng, Y., Mao, J., Mirrokni, V., &amp; Zuo, S. (2021). The Landscape of Auto-Bidding Auctions: Value Versus Utility Maximization. SSRN Electronic Journal. https://doi.org/10.2139/ssrn.3785579</p></blockquote><p>本文关注在支出回报率（RoS）约束下将一个不可分割物品向多个代理人出售的情形下，当买家的目标为私有不被公开时，且买家可能追求最大化价值或最大化期望收入，此时是否能达到第一最佳回报（first best revenue）。</p><p><em>RoS（Return on Spend）：多记为ROAS（Return on Ad Spend），即广告支出回报率，是一种营销指标，用于衡量花在广告上的每一美元所赚取的收入。具体的，其可被计算为广告收入与广告支出的比值。</em></p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202309-20230920/pircture-1.png" alt="" /><figcaption>picture</figcaption></figure><h3 id="广告商-卖家博弈模型">广告商 &amp; 卖家博弈模型</h3><p>考虑将一个不可分割物品卖给<span class="math inline"><em>n</em></span>个买家。买家<span class="math inline"><em>i</em></span>对于物品有估价<span class="math inline">$v_i\in\mathcal{V},\mathcal{V}\subseteq[0,\infin)$</span>，卖家卖出该物品总有固定的支出<span class="math inline"><em>c</em> ≥ 0</span>。该支出可以被视为运输费，或是未从其他渠道进行销售的潜在机会成本。买家<span class="math inline"><em>i</em></span>的估价可由先验分布<span class="math inline"><em>F</em><sub><em>i</em></sub></span>导出，当然每个买家的分布都是独立的。每个买家都有一个需要满足的约束条件，在文章中这一约束被具象化为RoS，其标明了买家收到的价值与实际支出的最小目标比率<span class="math inline">$t_i\in\mathcal{T},\mathcal{T}\subseteq[0,\infin)$</span>。买家<span class="math inline"><em>i</em></span>的目标比率被认为可以由公开的先验分布<span class="math inline"><em>G</em><sub><em>i</em></sub></span>导出，同样这些分布也是独立的。假设<span class="math inline"><em>F</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>), <em>G</em><sub><em>i</em></sub>(<em>t</em><sub><em>i</em></sub>)</span>都连续并具有密度<span class="math inline"><em>f</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>), <em>g</em><sub><em>i</em></sub>(<em>t</em><sub><em>i</em></sub>)</span>。同样可以用向量标记全部的估值与目标比率：<span class="math inline"><em>v</em>, <em>t</em></span>。</p><p>文章考虑估值与目标RoS比率分别为私有或公开等多种情况下卖家应如何选择拍卖机制。卖家目标是最大化买家付款与固定成本的差值，而买家则可能想要最大化价值，或是最大化回报率。以<span class="math inline"><em>I</em></span>表示支付系数，那么如果买家期望最大化效用那么<span class="math inline"><em>I</em> = 1</span>，如果其希望最大化价值那么<span class="math inline"><em>I</em> = 0</span>，换言之有：<span class="math inline">回报 = 价值 − <em>I</em> ⋅ 支出</span>。</p><p><em>这里是说买家对物品有一个私有的估价，这个估价和买家最终的支出并不要求一定相等（而在传统模型中两者被视为完全相同）。</em></p><p>形式化地，考虑一般情况下买家的估价与目标回报率都私有的情况，机制可由分配规则<span class="math inline"><em>x</em> : (𝒱 × 𝒯)<sup><em>n</em></sup> → [0, 1]<sup><em>n</em></sup></span>与支付规则<span class="math inline"><em>p</em> : (𝒱 × 𝒯)<sup><em>n</em></sup> → ℝ<sup><em>n</em></sup></span>给出，其中<span class="math inline"><em>x</em><sub><em>i</em></sub>(<em>v</em>, <em>t</em>)</span>表示物品被分配给第<span class="math inline"><em>i</em></span>个买家的概率，<span class="math inline"><em>p</em><sub><em>i</em></sub>(<em>v</em>, <em>t</em>)</span>表示其支出。由于仅有一个不可分割的物品，显然有<span class="math inline">$\sum^n_{i=1}x_i(v,t)\leq1$</span>。</p><p>整个拍卖按如下时序发生：</p><ol type="1"><li>每个买家<span class="math inline"><em>i</em></span>从<span class="math inline"><em>G</em><sub><em>i</em></sub></span>导出其目标回报率<span class="math inline"><em>t</em><sub><em>i</em></sub></span>。如果目标回报率私有则买家可以汇报任意<span class="math inline">$\hat{t_i}\in\mathcal{T}$</span>。</li><li>卖家向全部买家公开他们各自的目标回报率。</li><li>买家<span class="math inline"><em>i</em></span>从<span class="math inline"><em>F</em><sub><em>i</em></sub></span>导出估值<span class="math inline"><em>v</em><sub><em>i</em></sub></span>。如果估价私有那么买家可以任意汇报<span class="math inline">$\hat{v_i}\in\mathcal{V}$</span>。当然这里的汇报值应满足他自己的支出回报率。</li><li>卖家向每个买家<span class="math inline"><em>i</em></span>分概率<span class="math inline"><em>x</em><sub><em>i</em></sub>(<em>v̂</em>, <em>t̂</em>)</span>并向他收取支付价格<span class="math inline"><em>p</em><sub><em>i</em></sub>(<em>v̂</em>, <em>t̂</em>)</span>。</li></ol><p>文章意图设计一个使买家能诚实地进行汇报的机制（即激励相容）。更形式化的，假设当买家<span class="math inline"><em>i</em></span>汇报的目标回报率是<span class="math inline">$\hat{t_i}\in \mathcal{T}$</span>，且所有买家都恒定诚实汇报时，假设他在第二阶段（上述后两个阶段）的最佳预期收益是<span class="math inline">$U_i(\hat{t_i};t)$</span>，其中后者<span class="math inline"><em>t</em> ∈ 𝒯<sup><em>n</em></sup></span>是全部买家的目标回报率，那么有：</p><p><br /><span class="math display">$$\begin{align*}U_i(\hat{t_i};t)=&amp;\max_{\alpha:\mathcal{V}\rightarrow\Delta(\mathcal{V})}\mathbb{E}[v_i\cdot x_i((\alpha(v_i),v_{-i}),(\hat{t_i},t_{-i}))-I\cdot p_i((\alpha(v_i),v_{-i}),(\hat{t_i},t_{-i}))] \\&amp;\text{s.t.}\ \mathbb{E}_v[v_i\cdot x_i((\alpha(v_i),v_{-i}),(\hat{t_i},t_{-i}))-t_i\cdot p_i((\alpha(v_i),v_{-i}),(\hat{t_i},t_{-i}))]\geq 0\end{align*}$$</span><br /></p><p>这里<span class="math inline"><em>α</em></span>代表买家随机选择的投标策略，以满使全部买家都能满足自己的回报率约束。</p><p>此时机制是激励相容的，如果其满足：</p><ol type="1"><li>每个买家<span class="math inline"><em>i</em></span>都被预期如实汇报真实的目标回报率：对全部<span class="math inline">$t_i,\hat{t_i}\in\mathcal{T}$</span>，有<span class="math inline">$U_i(t_i;t)\geq U_i(\hat{t_i};t)$</span>。（<span class="math inline"><em>I</em><em>C</em> − <em>t</em></span>）</li><li>每个买家<span class="math inline"><em>i</em></span>都能通过汇报他自己真实的估价（当他如实汇报目标回报率，且其他买家也都如实汇报时）以实现最佳收益：对全部<span class="math inline"><em>t</em> ∈ 𝒯<sup><em>n</em></sup></span>，有<span class="math inline"><em>U</em><sub><em>i</em></sub>(<em>t</em><sub><em>i</em></sub>; <em>t</em>) = 𝔼<sub><em>v</em></sub>[<em>v</em><sub><em>i</em></sub> ⋅ <em>x</em><sub><em>i</em></sub>(<em>v</em>, <em>t</em>) − <em>I</em> ⋅ <em>p</em><sub><em>i</em></sub>(<em>v</em>, <em>t</em>)]</span>。（<span class="math inline"><em>I</em><em>C</em> − <em>v</em></span>）这里这也暗示回报率约束在被诚实汇报时自然地得到满足：对全部买家<span class="math inline"><em>i</em></span>以及目标回报率<span class="math inline"><em>t</em> ∈ 𝒯<sup><em>n</em></sup></span>，<span class="math inline">𝔼<sub><em>v</em></sub>[<em>v</em><sub><em>i</em></sub> ⋅ <em>x</em><sub><em>i</em></sub>(<em>v</em>, <em>t</em>) − <em>t</em><sub><em>i</em></sub> ⋅ <em>p</em><sub><em>i</em></sub>(<em>v</em>, <em>t</em>)] ≥ 0</span>。</li></ol><p>在考虑卖家方机制设计问题时，文章也考虑满足个体理性条件，即需要买家的中期收益也要大于等于零：<span class="math inline"><em>v</em><sub><em>i</em></sub> ⋅ <em>X</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>, <em>t</em>) − <em>I</em> ⋅ <em>P</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>, <em>t</em>) ≥ 0, ∀<em>i</em>, <em>v</em><sub><em>i</em></sub> ∈ 𝒱, <em>t</em> ∈ 𝒯<sup><em>n</em></sup></span>。这里中期收益被定义为<span class="math inline"><em>X</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>, <em>t</em>) = 𝔼<sub><em>v</em><sub> − <em>i</em></sub></sub>[<em>x</em><sub><em>i</em></sub>((<em>v</em><sub><em>i</em></sub>, <em>v</em><sub> − <em>i</em></sub>), <em>t</em>)], <em>P</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>, <em>t</em>) = 𝔼<sub><em>v</em><sub> − <em>i</em></sub></sub>[<em>p</em><sub><em>i</em></sub>((<em>v</em><sub><em>i</em></sub>, <em>v</em><sub> − <em>i</em></sub>), <em>t</em>)]</span>。（<span class="math inline"><em>I</em><em>R</em></span>）显然对追求最大化价值的买家IR永远成立，而对于追求最大化效用的买家，IR要求其支付永远不超过价值。</p><p>卖方希望能找到一个满足个体理性（IR）与激励相容的机制，其能够最大化卖方的收益，即<span class="math inline">$OPT=\max_{x,p}\sum^n_{i=1}\mathbb{E}_{v,t}[p_i(v,t)-c\cdot x_i(v,t)] \text{s.t. (IR),(IC-t),(IC-v)}$</span>。文章将机制与第一最佳收入比较，并指出当买家的私人信息都公开时其是可实现的。卖家此时只要满足个体理性与回报率约束即可，换言之有第一最佳收入<span class="math inline">$FB=\max_{x,p}\sum^n_{i=1}\mathbb{E}_{v,t}[p_i(v,t)-c\cdot x_i(v,t)] \text{s.t. (IR),(RoS)}$</span>。</p><p>为了便于计算与证明，考虑目标调整价值（target-adjusted-value）<span class="math inline">$\frac{v_i}{t_i}$</span>。文章证明当该值大于卖家的固定开销时（<span class="math inline">max<sub><em>i</em></sub><em>v</em><sub><em>i</em></sub>/<em>t</em><sub><em>i</em></sub> &gt; <em>c</em></span>），第一最佳机制应当分配给有最高目标调整价值的买家，此时应当向卖家收取该调整价值的费用；否则商品不应当被售出。换言之其类似于有底价<span class="math inline"><em>c</em></span>的一价拍卖，其中买家按目标调整价格排序。直观上看该机制应尽可能大地设定支付价格，以满足回报率约束。倘若将支付价格删去，那么卖家的对象可以被转化为<span class="math inline">$\sum^n_{i=1}(v_i/t_i-c)\cdot x_i(v,t)$</span>，这也正是第一最佳分配。这种机制当然不是激励相容的。</p><p>为了便于记述记<span class="math inline">(<em>x</em>)<sup>+</sup> = max {<em>x</em>, 0}</span>，那么第一最佳收入为<span class="math inline">$FB=\sum^n_{i=1}\mathbb{E}_{v,t}[(\max_i v_i/t_i-c)^+]$</span>，这对于效用最大化与价值最大化两种买家都成立。当<span class="math inline">$p_i(v,t)=(v_i/t_i)\cdot x_i(v,t),x_i(v,t)=1\{i=\argmax_{j:v_j/t_j&gt;c}v_j/t_j\}$</span>时能实现第一最佳收入。</p><h3 id="激励相容的表征">激励相容的表征</h3><p>文章指出IC-v的定义并不容易给出，因其实质上包含了在全部投标策略空间上的优化问题。文章假定对任何目标回报率空间<span class="math inline"><em>t</em></span>每个买家<span class="math inline"><em>i</em></span>和他汇报的目标<span class="math inline">$\hat{t_i}$</span>都存在一个投标策略<span class="math inline"><em>α</em> : 𝒱 → <em>Δ</em>(𝒱)</span>使得<span class="math inline">$\mathbb{E}_{v_i}[v_i\cdot X_i(\alpha(v_i),(\hat{t_i},t_{-i}))-t_i\cdot P_i(\alpha(v_i),(\hat{t_i},t_{-i}))]&gt;0$</span>。（满足IR）。</p><p>文章基于这个假设证明，一个机制是IC-v当切仅当对每个买家<span class="math inline"><em>i</em></span>存在证书函数（certificate function）<span class="math inline"><em>γ</em><sub><em>i</em></sub> : 𝒯<sup><em>n</em></sup> → [0, ∞]</span>使得：</p><ol type="1"><li>对全部<span class="math inline"><em>t</em></span>与全部<span class="math inline"><em>v</em><sub><em>i</em></sub>, <em>v</em><sub><em>i</em></sub>′ ∈ 𝒱</span>有<span class="math inline">(1 + <em>γ</em><sub><em>i</em></sub>(<em>t</em>)) ⋅ <em>v</em><sub><em>i</em></sub> ⋅ <em>X</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>, <em>t</em>) − (<em>I</em> + <em>γ</em><sub><em>i</em></sub>(<em>t</em>) ⋅ <em>t</em><sub><em>i</em></sub>) ⋅ <em>P</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>, <em>t</em>) ≥ (1 + <em>γ</em><sub><em>i</em></sub>(<em>t</em>)) ⋅ <em>v</em><sub><em>i</em></sub> ⋅ <em>X</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>′, <em>t</em>) − (<em>I</em> + <em>γ</em><sub><em>i</em></sub>(<em>t</em>) ⋅ <em>t</em><sub><em>i</em></sub>) ⋅ <em>P</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>′, <em>t</em>)</span></li><li><span class="math inline">𝔼<sub><em>v</em><sub><em>i</em></sub></sub>[<em>v</em><sub><em>i</em></sub> ⋅ <em>X</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>, <em>t</em>) − <em>t</em><sub><em>i</em></sub> ⋅ <em>P</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>, <em>t</em>)] ≥ 0⊥<em>γ</em><sub><em>i</em></sub>(<em>t</em>) ≥ 0</span></li></ol><p>这里<span class="math inline">⊥</span>表示RoS约束与<span class="math inline"><em>γ</em><sub><em>i</em></sub>(<em>t</em>)</span>非负性之间的互补条件，即两个不等式都成立且至少其中一个满足等号取等条件。注意严格的IC在<span class="math inline"><em>γ</em><sub><em>i</em></sub>(<em>t</em>) = 0</span> 时取到，其防止任何买家在任何时刻出现偏差（严格的IC并不保证RoS总能满足）。</p><p>当<span class="math inline"><em>I</em> = 0</span>（买家追求价值最大化）且<span class="math inline"><em>γ</em><sub><em>i</em></sub>(<em>t</em>) = 0</span>时条件一暗示<span class="math inline"><em>X</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>, <em>t</em><sub><em>i</em></sub>)</span>是独立于<span class="math inline"><em>v</em><sub><em>i</em></sub></span>的常量。另一方面<span class="math inline"><em>I</em> = 1</span>或<span class="math inline"><em>γ</em><sub><em>i</em></sub>(<em>t</em>) &gt; 0</span>时，条件一则可以被转化为：</p><ul><li>分配<span class="math inline"><em>X</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>, <em>t</em>)</span>在<span class="math inline"><em>v</em><sub><em>i</em></sub></span>上不是递减的。</li><li>对全部<span class="math inline"><em>v</em><sub><em>i</em></sub> ∈ 𝒱</span>，<span class="math inline">$P_i(v_i,t)=P_i(0,t)+\eta_i(t)\cdot(v_i\cdot X_i(v_i,t)-\in^{v_i}_0 X_i(z,t)dz),\eta_i(t)=(1+\gamma_i(t))/(I+\gamma_i(t)\cdot t_i)$</span>。（<span class="math inline"><em>I</em><em>C</em> − <em>v</em> − 支付</span>）</li></ul><p>接着考虑IC-t。当买家都如实汇报且回报率向量是<span class="math inline"><em>t</em></span>时，以<span class="math inline"><em>R</em><em>o</em><em>S</em><sub><em>i</em></sub>(<em>t</em>)</span>表示买家<span class="math inline"><em>i</em></span>的RoS，那么有：</p><p><br /><span class="math display">$$\begin{align*}RoS_i(t)=\begin{cases}    \mathbb{E}_{v_i}[v_i\cdot X_i(v_i,t)]/\mathbb{E}_{v_i}[P_i(v,t)] &amp;\text{if} \mathbb{E}_{v_i}[P_i(v,t)]&gt;0 \\    +\infty \text{otherwise}\end{cases}\end{align*}$$</span><br /></p><p>文章证明，对IC-v的机制，其也是IC-t的仅当对每个买家<span class="math inline"><em>i</em></span>与任何<span class="math inline"><em>t</em><sub> − <em>i</em></sub> ∈ 𝒯<sup><em>n</em> − 1</sup></span>，有：</p><ol type="1"><li><span class="math inline"><em>U</em><sub><em>i</em></sub>(<em>t</em><sub><em>i</em></sub>; <em>t</em><sub> − <em>i</em></sub>)</span>不随<span class="math inline"><em>t</em><sub><em>i</em></sub></span>增加而增长（防止用户谎报更高的回报率）</li><li>对<span class="math inline">$\hat{t_i}&lt;t_i$</span>，如果<span class="math inline">$U_i(\hat{t_i};(\hat{t_i},t_{-i}))&gt;U_i(t_i;(t_i,t_{-i}))$</span>那么<span class="math inline">$RoS_i(\hat{t_i},t_{-i})&lt;t_i$</span>（防止用户谎报更低的回报率）</li></ol><p>这两个条件指出当RoS常量不绑定时预期收入也是常数。</p><p><strong>估价公开而目标回报率私有</strong>时，买家只能谎报目标回报率，当真实回报率空间为<span class="math inline">(<em>t</em><sub><em>i</em></sub>, <em>t</em><sub> − <em>i</em></sub>)</span>而买家<span class="math inline"><em>i</em></span>汇报<span class="math inline">$\hat{t_i}$</span>时他的期望收益是<span class="math inline">$U_i(\hat{t_i};t)=\mathbb{E}_{v_i}[v_i\cdot X_i(v_i,(\hat{t_i},t_{-i}))-I\cdot P_i(v_i,(\hat{t_i},t_{-i}))]$</span>，且<span class="math inline">$\mathbb{E}_{v_i}[v_i\cdot X_i(v_i,(\hat{t_i},t_{-i}))-t_i\cdot P_i(v_i,(\hat{t_i},t_{-i}))]\geq0$</span>，否则效用恒定为<span class="math inline"> − ∞</span>。此时上述条件是充要的。</p><p><strong>估价与目标回报率都私有</strong>时，为了使条件充要，文章提供了进一步的限制条件，其依赖于前述的证书函数：考虑机制的证书函数<span class="math inline">{<em>γ</em><sub><em>i</em></sub>}<sub><em>i</em> ∈ [<em>n</em>]</sub></span>，其是IC-t当且仅当对每个买家<span class="math inline"><em>i</em></span>与任何<span class="math inline"><em>t</em><sub> − <em>i</em></sub> ∈ 𝒯<sup><em>n</em> − 1</sup></span>有<span class="math inline">$\frac{\partial U_i(t_i;(t_i,t_{-i}))}{\partial t_i}=-\frac{\gamma_i(t_i,t_{-i})\cdot U_i(t_i;(t_i,t_{-i}))}{t_i-I}$</span>，如果<span class="math inline"><em>t</em></span>是可微点。</p><p>文章指出当机制是IC-v的时，最佳的投标策略总是采取统一乘法投标（uniform(multiplicative) bidding），也就是说考虑常量<span class="math inline"><em>β</em> &gt; 0</span>，总是去投标<span class="math inline"><em>β</em> ⋅ <em>v</em><sub><em>i</em></sub></span>。形式化地，对任何<span class="math inline">$\hat{v_i}\in\mathcal{T},v\in\mathcal{T}^n$</span>，存在最佳的投标策略<span class="math inline"><em>α</em></span>，<span class="math inline"><em>α</em>(<em>v</em>) = <em>β</em> ⋅ <em>v</em></span>，其中<span class="math inline"><em>v</em> ∈ 𝒱, <em>β</em> &gt; 0</span>为常量，这一策略可以实现<span class="math inline">$U_i(\hat{t_i};t)$</span>。</p><p>这一乘数可以被计算得出。更具体的，令<span class="math inline">$margin(\beta,\phi;\hat{t_i},t)=\mathbb{E}_{v_i}[v_i\cdot X_i(\beta\cdot v_i,(\hat{t_i};t_{-i}))-\phi\cdot P_i(\beta\cdot v_i,(\hat{t_i},t_{-i}))]$</span>，其中<span class="math inline"><em>β</em> &gt; 0, <em>ϕ</em> &gt; 0</span>。当<span class="math inline">$\gamma_i(\hat{t_i},t_{-i})&gt;0$</span>或<span class="math inline"><em>T</em> &gt; 0</span>时，<span class="math inline"><em>m</em><em>a</em><em>r</em><em>g</em><em>i</em><em>n</em>(<em>β</em>, <em>ϕ</em>)</span>就<span class="math inline"><em>β</em></span>而言是单峰的。换言之，可以首先计算可行域<span class="math inline">$[\underline{\beta},\overline{\beta}]$</span>使得对<span class="math inline">$\forall\beta\in[\underline{\beta},\overline{\beta}]$</span>都有<span class="math inline">$margin(\beta,\phi;\hat{t_i},t)&gt;0$</span>。从而，乘数可以由计算<span class="math inline">$\forall\beta\in[\underline{\beta},\overline{\beta}]$</span>间使得<span class="math inline">$margin(\beta,\phi;\hat{t_i},t)&gt;0$</span>最大的数而得到。</p><h3 id="最大化价值者的收入最优拍卖">最大化价值者的收入最优拍卖</h3><ol type="1"><li>对<strong>价值公开而目标回报率私有</strong>的情况，适用于最大化价值者的收入最优拍卖应是如下的机制：<span class="math inline">$x_i(v,t)=1\{i=\argmax_{j:v_j/t_j&gt;c}v_j/t_j\},p_i(v,t)=v_i/t_i \cdot x_i(v,t)$</span>。</li><li>对<strong>价值私有而目标回报率公开</strong>的情况，机制则是如下的形式：<span class="math inline">$x_i(v,t)=1\{i=\argmax_{j:v_j/t_j&gt;c}v_j/t_j\},p_i(v,t)=\frac{1+\gamma_i(t)}{\gamma_i(t)}\cdot x_i(v,t)\cdot\max\{c,\max_{j\neq i} v_j/t_j\}$</span>，<span class="math inline"><em>γ</em><sub><em>i</em></sub></span>应使得<span class="math inline">𝔼<sub><em>v</em><sub><em>i</em></sub></sub>[<em>v</em><sub><em>i</em></sub> ⋅ <em>X</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>, <em>t</em>) − <em>t</em><sub><em>i</em></sub> ⋅ <em>P</em><sub><em>i</em></sub>(<em>v</em><sub><em>i</em></sub>, <em>t</em>)] = 0</span>。</li></ol><p>如前所述，情况一类似于有底价的一价拍卖，而情况二则类似于维克利拍卖（二价拍卖），两种情况下买家都被按目标调整价值排序，且支付都应满足RoS约束。文章证明本机制是IC-t的，并能获得第一最佳收入。另一方面，如果价值与目标回报率都私有，那么追求收入最优的拍卖机制无法实现第一最佳收入。</p><h3 id="最大化效用者的收入最优拍卖">最大化效用者的收入最优拍卖</h3><h4 id="价格公开目标回报率私有">价格公开，目标回报率私有</h4><p>方便起见，记<span class="math inline"><em>U</em>(<em>t</em>) = <em>U</em>(<em>t</em>; <em>t</em>)</span>。令<span class="math inline"><em>ϕ</em>(<em>w</em>) = min<sub><em>x</em></sub>𝔼<sub><em>v</em></sub>[<em>x</em>(<em>v</em>, <em>t</em>)]s.t. 𝔼<sub><em>v</em></sub>[<em>v</em> ⋅ <em>x</em>(<em>v</em>, <em>t</em>)] = <em>w</em></span>表示能向买方提供预期价值<span class="math inline"><em>w</em></span>的最低预期分配。文章将收入最大化的问题视作一个优化问题，其中<span class="math inline"><em>U</em>(<em>T</em>)</span>为唯一的决定性变量。由于关于IC-t的表述是充要的，因而最大化的方程可以写作：</p><p><br /><span class="math display">$$\begin{align*}    \max_{x,p}\mathbb{E}_{t,v}[p(v,t)-c\cdot x(v,t)] \\    \text{s.t. }\mathbb{E}_v[v\cdot x(v,t) - t\cdot p(v,t)] \geq 0, \forall t \in \mathcal{T}, \\    U(t)=\mathbb{E}_v[v\cdot x(v,t) - p(v,t)]\text{不增且不为负}\end{align*}$$</span><br /></p><p>由此，通过解决这一优化问题，文章为最大化效用者提供了一种最优的拍卖机制：</p><p>令阈值<span class="math inline">$\underline{t}\geq\overline{t}$</span>满足<span class="math inline">$\overline{t}=\argmax_{t\geq t^{\max}} Rev(t),w^*=\frac{\underline{t}}{\underline{t}-1}\cdot U^*(\overline{t})$</span>，其中有：</p><p><br /><span class="math display">$$\begin{align*}    Q(w) &amp;= w - c\cdot \phi(w)\\    w^* &amp;=\argmax_{0\leq w\leq\mathbb{E}_v[v]} Q(w)\\    U^*(t) &amp;= \argmax_u Q(\min\{w^*\frac{t}{t-1}\cdot u\})-u \\    Rev(t) &amp;= \int^t_1 (Q(\min\{w^*,\frac{z}{z-1}\cdot U^*(t)\})-U^*(t))\cdot g(z)dz \\    &amp;+ \int^{\infty}_t(Q(\min\{w^*,\frac{z}{z-1}\cdot U^*(z)\})-U^*(z))\cdot g(z)dz\end{align*}$$</span><br /></p><p>定义乘数函数<span class="math inline">$r:[\underline{t},\overline{t}]\rightarrow \mathbb{R}_{\geq 0}$</span>对任意<span class="math inline">$t\in[\underline{t},\overline{t}]$</span>有<span class="math inline">$\mathbb{E}_v[v\cdot1\{v/r(t)&gt;c\}]=\frac{t}{t-1}\cdot U^*(\overline{t})$</span>。最优的机制可以被如下导出：</p><p><br /><span class="math display">$$\begin{align*}    x(v,t) &amp;= \begin{cases}        1\{v&gt;c\} &amp; \text{if }t\in[1,\underline{t}] \\        1\{v/r(t)&gt;c\} &amp; \text{if }t\in[\underline{t},\overline{t}] \\        1\{v/t&gt;c\} &amp; \text{if }t\in[\overline{t},\infty)     \end{cases} \\    p(v,t) &amp;= \begin{cases}        v/\underline{t}\cdot x(v,t) &amp; \text{if }t\in[1,\underline{t}] \\        v/t\cdot x(v,t) &amp; \text{if }t\in[\underline{t},\overline{t}] \\        v/t\cdot x(v,t) &amp; \text{if }t\in[\overline{t},\infty)     \end{cases}\end{align*}$$</span><br /></p><h4 id="价格私有目标回报率公开">价格私有，目标回报率公开</h4><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202309-20230920/picture-2.png" alt="" /><figcaption>picture</figcaption></figure><h2 id="参考资料">参考资料</h2><ol type="1"><li>Balseiro, S., Deng, Y., Mao, J., Mirrokni, V., &amp; Zuo, S. (2021). The Landscape of Auto-Bidding Auctions: Value Versus Utility Maximization. SSRN Electronic Journal. https://doi.org/10.2139/ssrn.3785579</li></ol>]]></content>
      <pubDate>Mon, 16 Oct 2023 13:55:30 +0800</pubDate>
    </entry>
     
    <entry>
      <title><![CDATA[季度印象最深刻单集 2023.07]]></title>
      <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/SeasonBest-202307-20230703</link>
      <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/SeasonBest-202307-20230703</guid>
      <content type="html"><![CDATA[<h1 id="季度印象最深刻单集-2023.07">季度印象最深刻单集 2023.07</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202307-20230703/cover-picture.JPG" alt="" /><figcaption>cover</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2023.09.28<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2 id="bang-dream-its-mygo-3-crychic">「BanG Dream! It’s MyGO!!!!!」 #3 「CRYCHIC」</h2><blockquote><p>播出时间：2023.06.29</p></blockquote><p>7月早两天开播的纯3D动画，实在是意料之外的惊喜。在前两集的蓄势之后，#3完全采用灯的第一视角主观镜头，由视角带来的信息量限制与情感流露变得比客观镜头自然得多。主观视角→笔记本文字的频繁转换与直接黑底白字的演出手法类似而又全然不同。以文字暗示情感的同时却不会将情感突然的中断来完成情感的积蓄，借助灯书写的文字完成专场与情感提示使得情感的流淌更加连续。作为情感爆发口而被歌唱出的春日影却不是彻底的歇斯底里，而是含蓄而克制的呐喊。诸多小物件的运用，多次出现的镜面则成为了少数情感的缺口，给予了灯与观众一个第三者的客观视角，也由此完成了无法达到的与自身的交互。</p><p>短短24分钟却在几乎全程主观镜头的前提下完成了几次自然的时间转换，完整地展现了灯与爱音相遇前类似的分离到重聚，以及再到分离。调度的高度相似性也成为了后续集数的铺垫，为之后留下了相当的可能性。这么看来前三集大概确实是一个整体，唯有像这样同时放出才能让观众在短时间内积蓄起期望的情感。</p><h2 id="呪術廻戦-第2期-25-懐玉">「呪術廻戦 第2期」 #25 「懐玉」</h2><blockquote><p>播出时间：2023.07.06</p></blockquote><p>可以说是本季度监督御所園翔太在他负责的电锯人#8的加强版，a part给人的印象是极有味道的日式恐怖。一方面，从景观中零星的异象被发现以及夜幕中的空镜头，引到作为a part主角的两人进入旧屋，穿插令人印象极深刻的甚至连绘柄和着色都与赛璐璐动画类似的“过去”影像，诸多要素营造恐怖氛围的同时也不忘挑动起观众的兴奋感。而在借自然城市景观完成对情绪的铺垫后，歌姬进入旧宅的部分则大量使用低机位推拉镜、鱼眼镜头等在TV动画中不常见的规格进一步维持着紧张恐怖的情绪。</p><p>当然由这一部份的超规格引导出的也是作画层面质量的不统一，尤其是歌姬一个人踏入房间的那一段低机位，与前后的部分无论从张数还是修正上都相差太多，难免有突兀感。此外，b part实在太儿戏。</p><h2 id="ゾン100ゾンビになるまでにしたい100のこと-1-アキラ-オブ-ザ-デッド">「ゾン100～ゾンビになるまでにしたい100のこと～」 #1 「アキラ オブ ザ デッド」</h2><blockquote><p>播出时间：2023.07.09</p></blockquote><p>很厉害的一话。从开场开始的强力作画贯穿始末，无论是obake还是摄影机移动下的透视变化都画的相当好看。a part为了塑造社畜阴暗情绪的压抑从开始的辅以不同景深下的稳定的中近景镜头，再变化到鱼眼镜头与晃动的、倾斜的镜头的逐渐增加，几处匹配专场也看得出用心。包括到后面色彩的消失、画框线条的抖动、噪点的出现，等等。b part开始由日常到非日常的转换也相当出彩。高密度的动态作画、色彩由油漆斑点到前景的落叶再到滤镜以及最终的恢复色彩、男主的冲破画框都很有看点。</p><p>不过实际上a part有些卡镜头被撑的太满，有种微妙的不协调感，不像是故意如此的。可能也说明了对2.35画幅的把控仍有不足。</p><h2 id="無職転生ⅱ-異世界行ったら本気だす-1-失意の魔術師">「無職転生Ⅱ ～異世界行ったら本気だす～」 #1 「失意の魔術師」</h2><blockquote><p>播出时间：2023.07.09</p></blockquote><p>想了想还是姑且列一下吧。尽管冈本学等一众一期中坚从Studio Bind跑去做U49，加上#0紧张的工期与砍了开头张数的演出，本话终于是找回了一点一期的感受。在鲁迪踏出那一步前全无bgm的设置，使得观众的情绪也能够在鲁迪“走出”那一步的同时第一次得到释放，能令人想起一期#25末尾的那段绝佳的演出。而本话结尾的另一种意义的走出也有着不错的演绎。打开窗户的鲁迪并没有直接走出房门，但片刻后映到窗户上的火光却呼应着鲁迪“不是什么都没改变”的台本。而后音乐响起，鲁迪落下的眼泪化为雨过天晴前的最后一滴雨水打落到黄金的麦穗上，画面一转回到洛琪希带鲁迪第一次走出家门的时候，与一期多处情绪渲染高潮时刻的交相呼应终于给了鲁迪，以及观众，再次走出那一步的勇气。</p><p>事实上“走出一步”这一点对无职转生来说可谓是相当重要的一个主题，无论是原著小说还是动画都是如此。或者说，“走出一步（一歩を踏み出す）”实质上也正是“认真地活下去（本気だす）”的最具象且直观的表现。对于原著而言，多个重要篇章的结尾都以后者作结，而前者自然而然地成为了动画这一形式体裁的母题。一期中“走出一步”更加隐晦，从鲁迪被洛克希放上马踏出家门到转移时间后与瑞杰路德结伴踏上回家的路再到最后一集#25那有着强烈情感抒发的直白的一步，在这一过程中“走出一步”逐渐被观众所感知。另一方面一期Part.2的ed也从另一个方面点出了这一点：鲁迪开头只能透过窗户望着被他改变了的，“走出一步”的人们，而自己却仍在原地踏步。有这一点推进到鲁迪自身“走出一步”，从而呈现出的是鲁迪对魔大陆冒险经历中快乐的回忆切片。</p><p>窗户这一表现手法从某种意义上延续到了二期Part.1的op。三色鸟的隐喻太过明显故而略去不表，而被踏上路途的鲁迪在学院缓慢前行的过程中窗户与大理石地板映照出了被他改变的“走出一步”的人们。从这一点来看情感上本作也很好地延续了一期从一始终的力量。</p><h2 id="bang-dream-its-mygo-7-今日のライブが終わっても">「BanG Dream! It’s MyGO!!!!!」 #7 「今日のライブが終わっても」</h2><blockquote><p>播出时间：2023.07.27</p></blockquote><p>继#3后的又一神回，live中的两首歌被与叙事完美的结合。开场后固定镜头与几个单调客观的机位，环境声中微弱却存在着的时钟声，刻意被设置在后景又不被摄影机完全容纳的人物述说着氛围的压抑。而这种压抑也一直被延续到live的第一首歌开头：因多次失误而时暗时亮的灯光，故意设置的混音使得燈的声音即使卖力地呼喊也难以被清晰辨识。渲染情绪的同时又不忘进一步地从空间关系上刻画人物：走向一角的燈自然地避开了观众的视线，游离在外的野良猫，分局的角色们，等等。</p><section class="multiImagesContainerSection"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202307-20230703/picture-1.png" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202307-20230703/picture-2.png" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202307-20230703/picture-3.png" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202307-20230703/picture-4.png" alt="picture" /></p></section><p>直到灯的独白压抑感才被一扫而空，间奏逐渐转化为春日影的前奏，灯光逐渐明亮，照亮了原本昏暗的舞台，照亮了从昏暗后台中走出的他们。不难注意到这两首歌实质上也与人物的情感转变有这相当程度的一致性。在此之上，そよ的情感刻画也借着人物的动作调度与镜头对人物的容纳能力一同被暗示。这种对画面与脚本的掌控能力实在太精彩。</p><section class="multiImagesContainerSection"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202307-20230703/picture-5.png" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202307-20230703/picture-7.png" alt="picture" /> <img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202307-20230703/picture-6.png" alt="picture" /></p></section><h2 id="bang-dream-its-mygo-10-ずっと迷子">「BanG Dream! It’s MyGO!!!!!」 #10 「ずっと迷子」</h2><blockquote><p>播出时间：2023.08.17</p></blockquote><p>动画标题名 &amp; 乐队名 まいご的双关意义第一次被直接点出，在经历#9的所谓「解散」之后困于过去的四个人的迷子（まいご）形象愈发明显，而使得乐队五人再次重组的契机则是彷徨着的灯终于想要迈出一步。重聚的过程随着角色加入的倒序而推进，其中与开头几话的对仗呼应也是相当明显。乐器的逐步加入，五个人重聚于舞台上时詩（うた）终于变成了歌（うた），以这种相当激进的方式来将看似无法解决的问题进行推进也与这部充斥着重女的动画有一种情感意味上的合理性。</p><h2 id="無職転生ⅱ-異世界行ったら本気だす-7-獣族令嬢拉致監禁事件">「無職転生Ⅱ ～異世界行ったら本気だす～」 #7 「獣族令嬢拉致監禁事件」</h2><blockquote><p>播出时间：2023.08.20</p></blockquote><p>无职二期回光返照的一集，从开头开始就能最直观的从作画意味上直接体会到：细微的小动作不断，特效作画更加灵动切实地还原流体为例的各种现象、甚至是背动中的喷泉也倾注了心思。鲁迪发怒一段的前后景无论从调度还是作画层面上都展现了其水准，而节奏本身的把控也相当自然。尽管和一期相比本集可能也只是垫底水平（就看开头希露菲形成的水球与一期前几集洛克希/鲁迪形成的水球就能看出，线条密集度、动态等等都完全不在一个档次），但放在二期却十分弥足珍贵。</p><h2 id="英雄教室-10-俺よりうまいものに逢いに行く">「英雄教室」 #10 「俺よりうまいものに逢いに行く」</h2><blockquote><p>播出时间：2023.09.10</p></blockquote><p>应该说虽然最初看这片就能知道这是一个很经典的低预算厕纸轻改动画片，而前两集看下来也只是给本片多加了后宫龙傲天卖肉几个tag，然而本片从中期开始借助着优秀的演出使得观感有了相当多的提升。无论是对各类动画分镜的neta（逆A，EVA，明日之丈等等），都在搏得观众会心一笑的同时完成了演出最根本的目的：即提升本片在观看过程中的趣味性。应该说无论是带或带脑子来看本片，都能收获到不小的乐趣，这在本季动画普遍质量低迷的大背景下使本片能提供了每周最为轻松愉快的一段观影体验。</p><p>本集亦是如此，在上上集暗指SAC，上集以EVA逆A巨人哥斯拉的neta贯穿整集之后，本集大量致敬出崎统最为经典的harmony与三回PAN，特别是放眼动画史中也相当经典的「明日之丈」中燃尽的场景。在给观众提供欢乐的同时也让前数集勇者为大家带去的帮助汇聚为大家对勇者的心意，从而完成了末尾的一个小小的情绪爆发点。这样淳朴的欢乐与感动实在是太弥足珍贵了。</p>]]></content>
      <pubDate>Thu, 28 Sep 2023 14:33:17 +0800</pubDate>
    </entry>
     
    <entry>
      <title><![CDATA[论文阅读 2023.08]]></title>
      <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/ITtech/PaperReading-202308-20230810</link>
      <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/ITtech/PaperReading-202308-20230810</guid>
      <content type="html"><![CDATA[<h1 id="论文阅读-2023.08">论文阅读 2023.08</h1><blockquote><p>本文首发于个人博客<br />发表日期：2023.09.03<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2 id="one-dollar-each-eliminates-envy">One Dollar Each Eliminates Envy</h2><blockquote><p>Brustle, J., Dippel, J., Narayan, V. V., Suzuki, M., &amp; Vetta, A. (2020, July 13). One Dollar Each Eliminates Envy. Proceedings of the 21st ACM Conference on Economics and Computation. https://doi.org/10.1145/3391403.3399447</p></blockquote><p>文章着眼于研究<span class="math inline"><em>m</em></span>个不可分割的商品在<span class="math inline"><em>n</em></span>个代理人间进行无嫉妒分配的问题。当然通常这是不可能的，但是可以通过引入一定数量的可分割商品来达到EF分配。文章证明给予每个代理人最多一美元（一个单位价值）的补贴就足以保证可无嫉妒的分配存在，且补贴总和最多为<span class="math inline"><em>n</em> − 1</span>单位价值。此时，这种分配同时也是EF1的，且这种分配是平衡的，换言之分配的束的数量最多差一。同时文章还证明，对于一般的单调估价函数，始终存在EF分配使得每个代理人最多获得<span class="math inline">2(<em>n</em> − 1)</span>单位价值的补贴，此时补贴总和为<span class="math inline"><em>O</em>(<em>n</em><sup>2</sup>)</span>。注意这里的估价函数都为可加性函数。</p><p><em>个人感觉结论直觉上还挺显然的，最大的价值可能在于证明了补贴可以足够小。</em></p><h3 id="基础概念ef分配及其他">基础概念：EF分配及其他</h3><ul><li>EF分配（Envy-free item allocation）：考虑两个参与者A与B，其拥有的物品束分别为X和Y。EF分配指对任何参与者，其认为其持有的物品束的价值总和不小于另一个参与人的物品束价值总和。</li><li>EF1分配：EF1分配指当从某一个参与人的物品束中移除最多一个物品后可以使得另一个参与人无嫉妒。</li><li>EFx分配：EFx分配指当从某一个参与人的物品束中移除任意多个任意物品后可以使得另一个参与人无嫉妒。显然有EF分配强于EFx分配强于EF1分配：EF1分配要求移除最大价值的物品，而EFx分配只要求移除最小价值的物品。</li><li>部分EF分配：部分指明不是全部物品都需要被分配给参与者。</li><li>纳什社会福利（Nash social welfare）：当满足帕累托最优，社会福利函数不依赖于个体，匿名性与连续性的情况下，可以导出的特殊的社会福利函数即为纳什社会福利函数。注意这里社会福利函数可以被视为个人福利的总和，个人福利以效用水平表示。</li><li>可加性估值函数：表明对商品束而言，商品束的估价可以被视为商品束内全部商品估价的总和。</li></ul><h3 id="无嫉妒分配模型与已有结论">无嫉妒分配模型与已有结论</h3><p>考虑参与者集合<span class="math inline"><em>I</em> = {1, 2, ⋯, <em>n</em>}</span>与不可分割商品构成的商品束<span class="math inline"><em>J</em> = {1, 2, ⋯, <em>m</em>}</span>。每个代理人<span class="math inline"><em>i</em> ∈ <em>I</em></span>都对商品束中的商品存在估值（估价）函数<span class="math inline"><em>v</em><sub><em>i</em></sub></span>使得商品束<span class="math inline"><em>S</em> ⊆ <em>J</em></span>对代理人<span class="math inline"><em>i</em></span>有价值<span class="math inline"><em>v</em><sub><em>i</em></sub>(<em>S</em>)</span>。在文章中假设这一估值函数是单调可加的，换言之，如果<span class="math inline"><em>S</em> ⊆ <em>T</em></span>那么有<span class="math inline"><em>v</em><sub><em>i</em></sub>(<em>S</em>) ≤ <em>v</em><sub><em>i</em></sub>(<em>T</em>), <em>v</em><sub><em>i</em></sub>(∅) = 0</span>,同时对<span class="math inline"><em>S</em> ⊆ <em>J</em></span>与<span class="math inline"><em>j</em> ∈ <em>J</em>, <em>v</em><sub><em>i</em></sub>(<em>j</em>) = <em>v</em><sub><em>i</em></sub>({<em>j</em>})</span>有<span class="math inline"><em>v</em><sub><em>i</em></sub>(<em>S</em>) = ∑<sub><em>j</em> ∈ <em>S</em></sub><em>v</em><sub><em>i</em></sub>(<em>j</em>)</span>。全部代理人的估值函数构成估值概要（valuation profile）<span class="math inline"><em>v</em> = (<em>v</em><sub>1</sub>, ⋯, <em>v</em><sub><em>n</em></sub>)</span>，同时为了便于计算对每个估值函数进行缩放使得任何物品<span class="math inline"><em>j</em></span>的最大边际价值为1（美元/单位价值）。</p><p>一个分配<span class="math inline">𝒜 = {<em>A</em><sub>1</sub>, ⋯, <em>A</em><sub><em>n</em></sub>}</span>是将商品集合划分为<span class="math inline"><em>n</em></span>个商品束的有序划分，第<span class="math inline"><em>i</em></span>个参与者获得商品束<span class="math inline"><em>A</em><sub><em>i</em></sub></span>（可以为空）。如果<span class="math inline">∀<em>i</em> ∈ <em>I</em>, ∀<em>k</em> ∈ <em>I</em>, <em>v</em><sub><em>i</em></sub>(<em>A</em><sub><em>i</em></sub>) ≥ <em>v</em><sub><em>i</em></sub>(<em>A</em><sub><em>k</em></sub>)</span>那么称其为无嫉妒的。</p><p>另一方面，对于每一对参与人<span class="math inline"><em>i</em>, <em>k</em></span>，如果要么<span class="math inline"><em>A</em><sub><em>k</em></sub> = ∅</span>，要么存在<span class="math inline"><em>j</em> ∈ <em>A</em><sub><em>k</em></sub></span>使得<span class="math inline"><em>v</em><sub><em>i</em></sub>(<em>A</em><sub><em>i</em></sub>) ≥ <em>v</em><sub><em>i</em></sub>(<em>A</em><sub><em>k</em></sub>\{<em>j</em>})</span>，那么称此时的分配是EF1的。</p><p>由于EF分配并不总能达到，在文章考虑的模型中可以通过引入非负向量<span class="math inline"><em>p</em> = (<em>p</em><sub>1</sub>, ⋯, <em>p</em><sub><em>n</em></sub>)</span>使得第<span class="math inline"><em>i</em></span>个参与者获得补贴<span class="math inline"><em>p</em><sub><em>i</em></sub> ≥ 0</span>。那么当<span class="math inline">∀<em>i</em> ∈ <em>I</em>, ∀<em>k</em> ∈ <em>I</em>, <em>v</em><sub><em>i</em></sub>(<em>A</em><sub><em>i</em></sub>) + <em>p</em><sub><em>i</em></sub> ≥ <em>v</em><sub><em>i</em></sub>(<em>A</em><sub><em>k</em></sub>) + <em>p</em><sub><em>k</em></sub></span>时称分配<span class="math inline">(𝒜, <em>p</em>)</span>为无嫉妒的。注意对于固定分配<span class="math inline"><em>A</em></span>而言并不总存在<span class="math inline"><em>p</em></span>使得<span class="math inline">(𝒜, <em>p</em>)</span>无嫉妒，因而能达到无嫉妒的分配<span class="math inline">𝒜</span>被称为可无嫉妒的（envy-freeable）。</p><p>更形象的，对于分配<span class="math inline">𝒜</span>，其嫉妒图<span class="math inline"><em>G</em><sub>𝒜</sub></span>是一个顶点集为<span class="math inline"><em>I</em></span>的完全有向图，其中任意一对节点<span class="math inline"><em>i</em>, <em>k</em> ∈ <em>I</em></span>的弧<span class="math inline"><em>a</em><em>r</em><em>c</em>(<em>i</em>, <em>k</em>)</span>的权重是分配<span class="math inline">𝒜</span>下<span class="math inline"><em>i</em></span>对<span class="math inline"><em>k</em></span>的嫉妒，即<span class="math inline"><em>w</em><sub>𝒜</sub>(<em>i</em>, <em>k</em>) = <em>v</em><sub><em>i</em></sub>(<em>A</em><sub><em>k</em></sub>) − <em>v</em><sub><em>i</em></sub>(<em>A</em><sub><em>i</em></sub>)</span>。当且仅当图中不存在正权有向环时分配才是可无嫉妒的，此时分配<span class="math inline">𝒜</span>在商品束的所有分配中最大化了社会福利，即对<span class="math inline"><em>I</em> = [<em>n</em>]</span>的全部排列<span class="math inline"><em>π</em></span>，有<span class="math inline">∑<sub><em>i</em> ∈ <em>I</em></sub><em>v</em><sub><em>i</em></sub>(<em>A</em><sub><em>i</em></sub>) ≥ ∑<sub><em>i</em> ∈ <em>I</em></sub><em>v</em><sub><em>i</em></sub>(<em>A</em><sub><em>π</em>(<em>i</em>)</sub>)</span>（结论出自论文《Fair Division with Subsidy》）。</p><p>这一结论提供了计算最少补贴的方式：首先找到最大化社会福利的分配，并接着在其所对应的嫉妒图中计算从每个节点开始的最大权重路径。另一方面补贴只需要提供给最多<span class="math inline"><em>n</em> − 1</span>个人。由此可以得到以下推论：</p><p><strong>推论：</strong>对于任意可无嫉妒的分配<span class="math inline">𝒜</span>，所需要的最小补贴最大为<span class="math inline">(<em>n</em> − 1) ⋅ <em>l</em><sub><em>G</em><sub>𝒜</sub></sub><sup>max</sup></span>，其中<span class="math inline"><em>l</em><sub><em>G</em><sub>𝒜</sub></sub><sup>max</sup></span>是嫉妒图<span class="math inline"><em>G</em><sub>𝒜</sub></span>中有向路径的最大权重，并有<span class="math inline"><em>l</em><sub><em>G</em><sub>𝒜</sub></sub><sup>max</sup> ≤ <em>m</em></span>。</p><h3 id="构建权重为1的最大路径的分配的算法">构建权重为1的最大路径的分配的算法</h3><p>考虑顶点集<span class="math inline"><em>I</em>, <em>J</em></span>上的完全二分图<span class="math inline"><em>H</em></span>是估值图，其中边<span class="math inline">(<em>i</em>, <em>j</em>)</span>的权重为<span class="math inline"><em>v</em><sub><em>i</em></sub>(<em>j</em>)</span>。用<span class="math inline"><em>h</em>[<em>Î</em>, <em>Ĵ</em>]</span>表示从<span class="math inline"><em>H</em></span>导出的子图。分配算法在每一轮中将一个项目匹配给参与者。一开始，令<span class="math inline"><em>J</em><sub>1</sub> = <em>J</em></span>。在第<span class="math inline"><em>t</em></span>轮。首先寻找<span class="math inline"><em>H</em>[<em>I</em>, <em>J</em><sub><em>t</em></sub>]</span>中的最大匹配权重<span class="math inline"><em>M</em><sub><em>t</em></sub></span>（找权重最大的边），如果参与者<span class="math inline"><em>i</em></span>与商品<span class="math inline"><em>j</em> = <em>μ</em><sub><em>i</em></sub><sup><em>t</em></sup></span>匹配，那么将该商品分配给盖参与者。接着在剩余的商品束<span class="math inline"><em>J</em><sub><em>t</em> + 1</sub> = <em>J</em><sub><em>t</em></sub>\∪<sub><em>i</em> ∈ <em>I</em></sub><em>μ</em><sub><em>i</em></sub><sup><em>t</em></sup></span>中进行递归。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202308-20230810/picture-1.png" title="分配算法" alt="" /><figcaption>picture</figcaption></figure><p>文章接着证明了该分配是可无嫉妒的，并且是EF1的。同时，分配也是平衡的，换言之分配的束的数量最多差一，事实上每个参与者获得的商品束的大小为<span class="math inline">$\lceil\frac{m}{n}\rceil$</span>或<span class="math inline">$\lfloor\frac{m}{n}\rfloor$</span>。分配算法则在多项式时间内运行。</p><p>另一方面，文章还证明了任何可无嫉妒的且为EF1的分配都在嫉妒图中有最大权重路径，且该权重最大为<span class="math inline"><em>n</em> − 1</span>。文章接着证明了算法给出的分配事实上权重最大为1，因此所需的补贴最大为<span class="math inline"><em>n</em> − 1</span>。</p><p>更具体的，令<span class="math inline">𝒜<sup><em>v</em></sup> = {<em>A</em><sub>1</sub><sup><em>v</em></sup>, ⋯, <em>A</em><sub><em>n</em></sub><sup><em>v</em></sup>}</span>是算法给出的分配，首先从原有的估值概要构造出新的估值函数：对每个参与者<span class="math inline"><em>i</em></span>，有：</p><p><br /><span class="math display">$$\begin{align*}\bar{v_i}(\mu^t_i) &amp;= v_i(\mu^t_i),\ \forall t\leq T\\\bar{v_i}(\mu^t_k) &amp;= \max(v_i(\mu^t_k),v_i(\mu^{t+1}_i)),\ \forall k\in I\text{\textbackslash}\{i\},\ \forall t \leq T-1 \\\bar{v_i}(\mu^T_k) &amp;= v_i(\mu^T_k),\ \forall k\in I\text{\textbackslash}\{i\}\end{align*}$$</span><br /></p><p>换言之，参与人<span class="math inline"><em>i</em></span>对分配给参与人<span class="math inline"><em>i</em></span>的物品的估值不变，而对于其他物品<span class="math inline"><em>j</em></span>，参与人<span class="math inline"><em>i</em></span>对其的估值为下面两者的较大值：</p><ol type="1"><li>参与人<span class="math inline"><em>i</em></span>对其的原始估值。</li><li>在分配物品<span class="math inline"><em>j</em></span>的下一轮中，参与人<span class="math inline"><em>i</em></span>对分配给参与人<span class="math inline"><em>i</em></span>的物品的估值。</li></ol><p>文章证明了在进行这种对估值函数的改变后，可以发现最大权重路径的权重最大为1，因此所需的补贴最大为<span class="math inline"><em>n</em> − 1</span>。</p><h2 id="bayesian-and-randomized-clock-auctions">Bayesian and Randomized Clock Auctions</h2><blockquote><p>Feldman, M., Gkatzelis, V., Gravin, N., &amp; Schoepflin, D. (2022, July 12). Bayesian and Randomized Clock Auctions. Proceedings of the 23rd ACM Conference on Economics and Computation. https://doi.org/10.1145/3490486.3538247</p></blockquote><p>文章主要研究了确定性贝叶斯时钟拍卖与随机先验无关（prior-free，参与者的估值并不可知）时钟拍卖的一些性质。更具体的，文章同样着眼于社会福利最大化（全部买家对自己获得物品的估值之和最大化），并分析多种情况下（对先验信息的可知性）如何设置时钟拍卖以使得其能够保证近似最优的社会福利。</p><h3 id="基本的时钟拍卖模型">基本的时钟拍卖模型</h3><p><span class="math inline"><em>n</em></span>个购买人组成的集合<span class="math inline"><em>N</em></span>需要某种服务，每个买家<span class="math inline"><em>i</em></span>都有一个表明他本人购买欲望的私有估值<span class="math inline"><em>v</em><sub><em>i</em></sub></span>，其组成了估值空间<span class="math inline"><em>v</em> = (<em>v</em><sub><em>i</em></sub>)<sub><em>i</em> ∈ <em>N</em></sub></span>。可行性约束<span class="math inline">ℱ ⊆ 2<sup><em>N</em></sup></span>包含了可以同时服务的买家子集。本模型关注于向下封闭的可行约束，也就是说如果<span class="math inline"><em>F</em> ∈ ℱ</span>那么对<span class="math inline">∀<em>F</em>′ ∈ <em>F</em></span>总有<span class="math inline"><em>F</em>′ ∈ ℱ</span>。更形象的说，如果买家集合<span class="math inline"><em>F</em></span>可以被服务，那么其任意子集也可以被服务。</p><p>向下封闭的可行约束集合的两个较典型的例子是不相交最大集（Disjoint-Maximal-Sets）和Knapsack：</p><ul><li>不相交最大集：全部买家被划分为<span class="math inline"><em>k</em></span>个不相交的子集<span class="math inline"><em>S</em><sub>1</sub>, ⋯, <em>S</em><sub><em>k</em></sub></span>，一组买家的集合<span class="math inline"><em>F</em></span>只能是这组子集其中之一的子集（被称为可行的，feasible），即<span class="math inline">ℱ = {<em>F</em> ⊆ <em>N</em>|∃<em>S</em><sub><em>j</em></sub> s.t. <em>F</em> ⊆ <em>S</em><sub><em>j</em></sub>}</span></li><li>Knapsack：每个买家<span class="math inline"><em>i</em></span>有一个需求的大小<span class="math inline"><em>c</em><sub><em>i</em></sub></span>，拍卖者应所能提供的服务不应小于被提供的买家集合的需求大小的加和。注意买家需求的大小与所能提供服务的大小可以进行统一放缩，因而有<span class="math inline">ℱ = {<em>F</em> ⊆ <em>N</em>|∑<sub><em>i</em> ∈ <em>F</em></sub><em>c</em><sub><em>i</em></sub> ≤ 1}</span></li></ul><p>拍卖模型的目标是设计一个拍卖系统，使得其可以为一组可行（feasible）的买家集合提供服务，并保证能够最大化社会福利，这里社会福利被定义为<span class="math inline"><em>S</em><em>W</em>(<em>F</em>) = ∑<sub><em>i</em> ∈ <em>F</em></sub><em>v</em><sub><em>i</em></sub></span>。在贝叶斯情况下每个买家<span class="math inline"><em>i</em></span>的估值<span class="math inline"><em>v</em><sub><em>i</em></sub></span>由<span class="math inline"><em>D</em><sub><em>i</em></sub></span>导出，全部买家的分布可以被表示为<span class="math inline">$\bold{D}=\times_{i\in N}D_i$</span>，方便起见用<span class="math inline">$\underset{v\sim \bold{D}}{E}[AUC]$</span>表示拍卖<span class="math inline"><em>A</em><em>U</em><em>C</em></span>的期望社会福利，并利用预期最优社会福利<span class="math inline">$OPT=\underset{v\sim \bold{D}}{E}[\max_{F\in\mathcal{F}}\{\sum_{i\in F}v_i\}]$</span>来评估贝叶斯时钟拍卖的性能。如果对每个分布<span class="math inline">$\bold{D}$</span>有<span class="math inline"><em>O</em><em>P</em><em>T</em> ≤ <em>α</em> ⋅ <em>A</em><em>U</em><em>C</em></span>那么称拍卖<span class="math inline"><em>A</em><em>U</em><em>C</em></span>能够以<span class="math inline"><em>α</em></span>因子近似于最优社会福利。</p><p>时钟拍卖是一种多轮机制，每个投标人都会得到一个定制化的时钟价格，也就是说价格会随时间推移而轻微增长。拍卖开始是，所有投标人都是活跃的（active）。初始价格空间<span class="math inline">$\bold{p}^1=\{p^1_i\}^n_{i=1}$</span>被发布给投标人，每个投标人可以选择永久退出拍卖或继续以当前价格保持活跃。每一轮<span class="math inline"><em>t</em></span>中，拍卖师向每个活跃的投标者<span class="math inline"><em>i</em></span>发布新的价格<span class="math inline"><em>p</em><sub><em>i</em></sub><sup><em>t</em></sup> ≥ <em>p</em><sub><em>i</em></sub><sup><em>t</em> − 1</sup></span>，而投标者可以选择继续保持活跃或永久退出。如果在第<span class="math inline"><em>γ</em></span>轮剩下的投标者能形成可行集合<span class="math inline"><em>F</em> ∈ ℱ</span>那么久结束拍卖，此时每个剩下的活跃的投标者<span class="math inline"><em>i</em></span>以价格<span class="math inline"><em>p</em><sub><em>i</em></sub><sup><em>γ</em></sup></span>获得服务，而退出的投标者则不会获得服务也不需要支付。每轮中的价格信息都被公开，例如价格历史记录、投标人对价格的反应，以及可行结构等。</p><p>相较于传统的密闭拍卖，时钟拍卖有以下好处：</p><ol type="1"><li>在密闭拍卖中，投标人需要将价格告知拍卖师，然而投标人往往不能准确回报他的估值</li><li>时钟拍卖中投标人不需要告知拍卖师他的估值，保障了隐私</li><li>时钟拍卖更具可信性</li><li>拍卖本身也较为简单</li></ol><h3 id="有先验信息的确定性单价时钟拍卖">有先验信息的确定性单价时钟拍卖</h3><p>文章首先研究了最简单的时钟拍卖，即单价时钟拍卖。这种拍卖不要去每个投标人对不断增加的价格报价作出回应，而是为每个投标人提供一个价格。每个投标人可以在不同的时间获得该价格信息并对其做出回应。随后机制收集所有人对价格的回应，并决定最终服务哪个子集。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202308-20230810/picture-2.png" title="单价时钟拍卖" alt="" /><figcaption>picture</figcaption></figure><p>文章考虑向下封闭的可行约束<span class="math inline">ℱ</span>中的最大可行集<span class="math inline">𝒮 = <em>S</em><sub>1</sub>, ⋯, <em>S</em><sub><em>k</em></sub></span>，并证明由于有先验信息，因而可以设计出一个单价时钟拍卖，使得其能达到<span class="math inline"><em>O</em>(log log <em>k</em>)</span>的近似最优社会福利。</p><p>文章首先指出，有先验信息（即估值的分布<span class="math inline">$\bold{D}$</span>）的单价时钟拍卖实质上借鉴了先知不等式（prophet inequality）的研究，其很接近于有序先知模型（机制设计者有序的选择接触的买家的顺序，并向其提供价格）。</p><p>更具体的，可以采取以下策略来实现近似最优：</p><p>定义集合<span class="math inline">$S(t,v)\overset{def}{=}\{i\in S|v_i&gt;t\}$</span>，首先可以计算出阈值<span class="math inline"><em>t</em><sub><em>S</em></sub></span>使得<span class="math inline"><em>E</em><sub><em>v</em></sub>[|<em>S</em>(<em>t</em><sub><em>S</em></sub>, <em>v</em>)|] = log <em>k</em></span>。</p><ol type="1"><li>要么单价格为<span class="math inline">0</span></li><li>要么选择<span class="math inline"><em>j</em> ∈ [0, log (10log <em>k</em> + 1)]</span>并将单价格设置为<span class="math inline"><em>Δ</em> ⋅ 2<sup>1 − <em>j</em></sup></span>，其中<span class="math inline"><em>Δ</em> = <em>E</em>[max<sub><em>S</em> ∈ 𝒮</sub>(∑<sub><em>i</em> ∈ <em>S</em></sub><em>v</em><sub><em>i</em></sub> ⋅ 𝕀[<em>v</em><sub><em>i</em></sub> ≥ <em>t</em><sub><em>s</em></sub>] ⋅ 𝕀[|<em>S</em>(<em>t</em><sub><em>S</em></sub>, <em>v</em>)| ≤ 10log <em>k</em> + 1])]</span>。这里形如<span class="math inline">𝕀[]</span>的函数均为指示函数，内部为真时导出值<span class="math inline">1</span>，否则导出值<span class="math inline">0</span></li></ol><h3 id="有限信息的确定性时钟拍卖">有限信息的确定性时钟拍卖</h3><p>这里考虑的是对估值的分布<span class="math inline">$\bold{D}$</span>仅知道其有关的部份信息。为了达到近似最佳，首先可以检察是否存在最大可行集<span class="math inline"><em>S</em> ∈ 𝒮</span>使得其期望值至少为<span class="math inline">$\frac{OPT}{\log\log k}$</span>，如果存在那么可以通过接受该集合中的所有投标人（价格0）来达到近似最佳的目的。相反若不存在，那么可以使用一个任意小的步长<span class="math inline"><em>δ</em> &gt; 0</span>来统一提高每个活跃投标人的价格，使得他们有机会在每次价格上涨后退出。简单起见可以为所有投标人同时提供该价格，但在实践中以任意的顺序向每个投标人提供增加后的价格。同样当剩下的活跃投标人可行或其子集可行并达到预期的近似最优时拍卖结束。注意算法中<span class="math inline">$\mathcal{g}=\frac{OPT}{4\alpha},\alpha=O(\log\log k)$</span>。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202308-20230810/picture-3.png" title="有限信息的确定性时钟拍卖" alt="" /><figcaption>picture</figcaption></figure><p>文章证明这一机制仅需利用<span class="math inline"><em>E</em>[<em>v</em><sub><em>i</em></sub>], ∀<em>i</em> ∈ <em>N</em></span>和<span class="math inline"><em>O</em><em>P</em><em>T</em> = <em>E</em><sub><em>v</em></sub>[max<sub><em>S</em> ∈ 𝒮</sub>∑<sub><em>i</em> ∈ <em>S</em></sub><em>v</em><sub><em>i</em></sub>]</span>即可达到<span class="math inline"><em>O</em>(log log <em>k</em>)</span>的近似最优社会福利。</p><h3 id="随机先验无关时钟拍卖randomized-prior-free-clock-auction">随机先验无关时钟拍卖（Randomized Prior-Free Clock Auction）</h3><p>文章最后考虑了无先验信息的情况，并指出可以通过牺牲简单性与实用性来达到近似最佳。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202308-20230810/picture-4.png" title="注水时钟拍卖" alt="" /><figcaption>picture</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202308-20230810/picture-5.png" title="样品拍卖" alt="" /><figcaption>picture</figcaption></figure><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/ITtech/_media/PaperReading-202308-20230810/picture-6.png" title="随机先验无关时钟拍卖：对冲拍卖" alt="" /><figcaption>picture</figcaption></figure><p>文章指出，通过结合WFCA与抽样拍卖，能够期望其发挥两者的优势，以达到目标的近似值。</p><h2 id="参考资料">参考资料</h2><ol type="1"><li>Brustle, J., Dippel, J., Narayan, V. V., Suzuki, M., &amp; Vetta, A. (2020, July 13). One Dollar Each Eliminates Envy. Proceedings of the 21st ACM Conference on Economics and Computation. https://doi.org/10.1145/3391403.3399447</li><li>Kaneko, M., &amp; Nakamura, K. (1979, March). The Nash Social Welfare Function. Econometrica, 47(2), 423. https://doi.org/10.2307/1914191</li><li>Halpern, D., &amp; Shah, N. (2019). Fair Division with Subsidy. Algorithmic Game Theory, 374–389. https://doi.org/10.1007/978-3-030-30473-7_25</li><li>Feldman, M., Gkatzelis, V., Gravin, N., &amp; Schoepflin, D. (2022, July 12). Bayesian and Randomized Clock Auctions. Proceedings of the 23rd ACM Conference on Economics and Computation. https://doi.org/10.1145/3490486.3538247</li><li>Christodoulou, G., Gkatzelis, V., &amp; Schoepflin, D. (2022). Optimal Deterministic Clock Auctions and Beyond. In 13th Innovations in Theoretical Computer Science Conference (ITCS 2022) (pp. 49:1–49:23). Schloss Dagstuhl – Leibniz-Zentrum fur Informatik.</li></ol>]]></content>
      <pubDate>Sun, 3 Sep 2023 22:09:55 +0800</pubDate>
    </entry>
    
  </channel>
  </rss>
  