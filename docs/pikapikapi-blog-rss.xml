<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
<channel>
  <title>ピカピカピ</title>
  <atom:link href="https://pikapikapikaori.github.io/pikapikapi-blog/pikapikapi-blog-rss.xml" rel="self" type="application/rss+xml" />
  <link>https://pikapikapikaori.github.io/pikapikapi-blog</link>
  <description>Don't worry, be happy.</description>
   
  <entry>
    <title><![CDATA[实用工具整理]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/archive/ITtech/UsefulToolsOrApps</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/archive/ITtech/UsefulToolsOrApps</guid>
    <content type="html"><![CDATA[<h1 id="实用工具整理">实用工具整理</h1><blockquote><p>本篇主要记录一些我认为比较实用的工具、框架、平台等</p></blockquote><h2 id="项目">项目</h2><h3 id="项目小工具">项目小工具</h3><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">说明</th><th style="text-align: center;">备注</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://shields.io/">Shields.io</a></td><td style="text-align: center;">badge（徽章）制作</td><td style="text-align: center;"><ahref="https://github.com/badges/shields">GitHub</a></td></tr></tbody></table><h3 id="部署">部署</h3><table><colgroup><col style="width: 21%" /><col style="width: 48%" /><col style="width: 30%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">说明</th><th style="text-align: center;">备注</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://vercel.com/">Vercel</a></td><td style="text-align: center;">可以直接部署前端静态界面，<br>也支持以FaaS 方式部署一些语言的后端服务器</td><td style="text-align: center;"><ahref="https://github.com/vercel/vercel">GitHub</a></td></tr></tbody></table><h2 id="前端">前端</h2><h3 id="前端用小工具">前端用小工具</h3><table><colgroup><col style="width: 32%" /><col style="width: 24%" /><col style="width: 43%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">说明</th><th style="text-align: center;">备注</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://iconoir.com">Iconoir</a></td><td style="text-align: center;">SVG 格式 Icon 生成器</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: center;"><ahref="https://tablericons.com">Tabler</a></td><td style="text-align: center;">SVG 格式 Icon 生成器</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://phosphoricons.com">Phosphor</a></td><td style="text-align: center;">SVG 格式 Icon 生成器</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: center;"><ahref="https://jam-icons.com">JAM</a></td><td style="text-align: center;">SVG 格式 Icon 生成器</td><td style="text-align: center;"><ahref="https://github.com/michaelampr/jam">GitHub</a></td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.visiwig.com">VISIWIG</a></td><td style="text-align: center;">SVG 格式 Icon、花纹、材质等生成器</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: center;"><ahref="https://simpleicons.org/">Simple Icons</a></td><td style="text-align: center;">SVG 格式 Icon 下载器</td><td style="text-align: center;"><ahref="https://github.com/simple-icons/simple-icons">GitHub</a></td></tr></tbody></table><h3 id="组件库-框架-包">组件库 &amp; 框架 &amp; 包</h3><table><colgroup><col style="width: 33%" /><col style="width: 19%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">说明</th><th style="text-align: center;">备注</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><a href="https://www.naiveui.com/">NaiveUI</a></td><td style="text-align: center;">Vue 组件库</td><td style="text-align: center;"><ahref="https://github.com/tusen-ai/naive-ui">GitHub</a></td></tr></tbody></table><h2 id="其他">其他</h2><table><colgroup><col style="width: 33%" /><col style="width: 19%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">说明</th><th style="text-align: center;">备注</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://www.vultr.com">Vultr</a></td><td style="text-align: center;">服务器租用</td><td style="text-align: center;"></td></tr><tr class="even"><td style="text-align: center;"><ahref="https://387099.blogspot.com/2018/03/ssssr.html?m=1">DuyaoSS</a></td><td style="text-align: center;">机场测评</td><td style="text-align: center;"></td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://iknowwhatyoudownload.com/en/peer/">I KNOW</a></td><td style="text-align: center;">IP 种子查询</td><td style="text-align: center;"></td></tr></tbody></table>]]></content>
    <pubDate>Thu, 24 Apr 2025 20:41:47 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[实用网站快速链接]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/UsefulWebsites</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/UsefulWebsites</guid>
    <content type="html"><![CDATA[<h1 id="实用网站快速链接">实用网站快速链接</h1><blockquote><p>本篇为实用网站导航页</p></blockquote><h2 id="影视书籍游戏">影视书籍游戏</h2><h3 id="资源">资源</h3><h4 id="离线存储">离线存储</h4><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="http://dmhy.org">动漫花园</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画、日剧为主</td></tr><tr class="even"><td style="text-align: center;"><a href="https://nyaa.si">Nyaa</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主，外站</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://mikanani.me">MikanProject</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主，支持 RSS</td></tr><tr class="even"><td style="text-align: center;"><a href="https://acg.rip">ACGRIP</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://share.acgnx.se">末日动漫</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="even"><td style="text-align: center;"><ahref="http://www.comicat.org">漫猫动漫</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://www.miobt.com">MioBT</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://bangumi.moe">萌番组</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">新番动画为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://eztvx.to/home">EZTV</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">美剧为主，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www2.rarbggo.to">RARBG</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">电影、美剧为主，外站</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://yts.mx">YTS</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">电影为主，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://moviejie.net">电影街</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">电影为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://13dl.me/home/">13DL</a></td><td style="text-align: center;">云盘</td><td style="text-align: center;">漫画为主，日站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://kox.moe">Kox.moe</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">漫画为主，台站</td></tr><tr class="odd"><td style="text-align: center;"><a href="http://libgen.rs">LibraryGenesis</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">书籍资料，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://fitgirl-repacks.site">FitGirl Repacks</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">游戏为主，外站</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.skidrowcodex.net">SKIDROWCODEX.NET</a></td><td style="text-align: center;">BT</td><td style="text-align: center;">游戏为主，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://oda.lzacg.one">量子ACG</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字 ACG 游戏为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://pan.jlbx.xyz">姬路白雪の资源小站</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字 ACG 游戏为主</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://zi0.cc">梓澪の妙妙屋</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字 ACG 游戏为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.shinnku.com">失落小站</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字 ACG 游戏为主</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://2dfan.com">2DFan</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">文字 ACG 游戏为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://retropc.net/alice/">Alicesoft</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">Alicesoft 官方老游戏，日站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://bbs.kfpromax.com/">绯月ScarletMoon</a></td><td style="text-align: center;">论坛</td><td style="text-align: center;">文字 ACG 游戏综合论坛，含资源</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.aixgame.cc">2dj</a></td><td style="text-align: center;">论坛</td><td style="text-align: center;">文字 ACG 游戏综合论坛，含资源</td></tr><tr class="even"><td style="text-align: center;"><ahref="http://www.k73.com/down/3ds/list-81-2.html">k73资源网</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">老游戏 ROM</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://romsfun.com">ROMSFUN</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">老游戏 ROM，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://archive.org/download/3ds-cia-eshop">INTERNET ARCHIVE 3dscia</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">3DS CIA，外站</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.ggbases.com">GGbases</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">游戏综合，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.hacg.mov">琉璃神社</a></td><td style="text-align: center;">下载</td><td style="text-align: center;">ACGN 综合资源</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.jiumodiary.com">鸠摩搜索</a></td><td style="text-align: center;">聚合搜索</td><td style="text-align: center;">书籍资料搜索</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://z-library.sk/">z-library</a></td><td style="text-align: center;">聚合搜索</td><td style="text-align: center;">书籍资料搜索</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.btdig.com">BTDigg</a></td><td style="text-align: center;">BT 聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://kickass.sx">KickAss</a></td><td style="text-align: center;">BT 聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.tpbproxypirate.com">Pirate Bay</a></td><td style="text-align: center;">BT 聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.1337x.tw">1377x</a></td><td style="text-align: center;">BT 聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.magnetdl.com">MagnetDL</a></td><td style="text-align: center;">BT 聚合搜索</td><td style="text-align: center;">综合资源聚合搜索，外站</td></tr></tbody></table><h4 id="在线阅览">在线阅览</h4><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://www.manhuagui.com">漫画柜</a></td><td style="text-align: center;">在线阅读</td><td style="text-align: center;">漫画为主</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://dogemanga.com">漫画狗</a></td><td style="text-align: center;">在线阅读</td><td style="text-align: center;">漫画为主</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://e-hentai.org/">Ex-h</a></td><td style="text-align: center;">在线阅读、下载</td><td style="text-align: center;">漫画、画集</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://nhentai.net">N-h</a></td><td style="text-align: center;">在线阅读、下载</td><td style="text-align: center;">漫画、画集</td></tr></tbody></table><h3 id="acgn-资料">ACGN 资料</h3><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="http://duobaoxiang.ysepan.com">ACG情报交流</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">ACG 资料整理</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.sakugabooru.com">SAKUGABOORU</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">作画片段信息</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://w.atwiki.jp/sakuga/">作画wiki</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">作画资料</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://w.atwiki.jp/enshutsu/">演出wiki</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">演出资料</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://www.inouejet.com/camera/">アニメ用語</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画用语辞典</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://blog.sakugabooru.com">SAKUGABLOG</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">作画信息</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://80s-ova.com">80年代のOVA</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画介绍推荐</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.getchu.com">Getchu</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">ACGN 发售信息</td></tr><tr class="odd"><td style="text-align: center;"><a href="http://m-p.sakura.ne.jp">MoonPhase</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画信息</td></tr><tr class="even"><td style="text-align: center;"><ahref="http://animestyle.jp">WEBアニメスタイル</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画资料</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://www.style.fm/as/index_old.shtml">WEBアニメスタイル（旧）</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画资料</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://animeanime.jp">アニメ！アニメ！</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画资料</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://aja.gr.jp">日本動画協会</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画产业资料</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://bgmlist.com">番组放送</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动画放送信息汇总</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://erogamescape-dyndns-org.translate.goog/~ap2/ero/toukei_kaiseki/?_x_tr_sch=http&amp;_x_tr_sl=ja&amp;_x_tr_tl=en&amp;_x_tr_hl=zh-CN&amp;_x_tr_pto=op">批评空间</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">文字 AVG 游戏鉴赏，<ahref="https://erogamescape.dyndns.org">原站</a></td></tr><tr class="even"><td style="text-align: center;"><ahref="https://docs.qq.com/sheet/DYUVBVUVvSUlkSVFE?tab=BB08J2">文姐书籍目录</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">文姐扫描书籍</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://anitabi.cn">动画巡礼 -anitabi</a></td><td style="text-align: center;">ACGN 资料</td><td style="text-align: center;">动漫巡礼资料</td></tr><tr class="even"><td style="text-align: center;"><a href="https://trace.moe">Anime SceneSearch</a></td><td style="text-align: center;">ACGN 工具</td><td style="text-align: center;">动画截图搜索</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://www.iqdb.org">Multi-service image search</a></td><td style="text-align: center;">ACGN 工具</td><td style="text-align: center;">动画截图搜索</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://nulla2011.github.io/sysx/">女声优拼音缩写查询</a></td><td style="text-align: center;">ACGN 工具</td><td style="text-align: center;">女声优拼音缩写查询</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://www.pogdesign.co.uk/cat/">TV Calendar</a></td><td style="text-align: center;">影视资料</td><td style="text-align: center;">欧美剧集放送信息汇总</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.gematsu.com">GEMATSU</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">游戏平台信息</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://ocg-rule.readthedocs.io/zh-cn/latest/">OCG Rule</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">YGO OCG 规则</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.ygo-sem.cn/index.html">YGO-Engine</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">YGO 卡组</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://www.qi-wmcard.com">Yugioh(OCG) card list ＆ news</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">YGO 卡查</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.ourocg.cn">OurOCG</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">YGO 卡查</td></tr><tr class="odd"><td style="text-align: center;"><ahref="https://bbs.newwise.com/thread-955986-1-1.html">【WIXOSS】入门及规则介绍</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">WIXOSS 规则</td></tr><tr class="even"><td style="text-align: center;"><ahref="http://yabejp.web.fc2.com/mahjong/index.html">現代麻雀技術論</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">麻将技巧</td></tr><tr class="odd"><td style="text-align: center;"><ahref="http://beginners.biz">麻雀戦術書「ビギナーズラック」</a></td><td style="text-align: center;">游戏资料</td><td style="text-align: center;">麻将技巧</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.meti.go.jp">経済産業省のWEBサイト（METI/経済産業省）</a></td><td style="text-align: center;">综合资料</td><td style="text-align: center;">日本经济产业报告</td></tr></tbody></table><h3 id="其他导航站">其他导航站</h3><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://www.miaoaaa.com">ACG喵导航</a></td><td style="text-align: center;">ACGN 网站导航</td><td style="text-align: center;">ACGN 网站导航</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.acgbox.link">ACG盒子</a></td><td style="text-align: center;">ACGN 网站导航</td><td style="text-align: center;">ACGN 网站导航</td></tr></tbody></table><h3 id="其他">其他</h3><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://github.com/Jackett">Jackett</a></td><td style="text-align: center;">BT 聚合搜索服务源码</td><td style="text-align: center;">影视类 BT 聚合搜索，需自行部署</td></tr></tbody></table><h2 id="学习资料">学习资料</h2><h3 id="综合资料">综合资料</h3><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://library.kiwix.org/">Kiwix Library</a></td><td style="text-align: center;">数据库</td><td style="text-align: center;">维基数据库备份</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://w3c.github.io/clreq/#abstract">中文排版需求</a></td><td style="text-align: center;">资料</td><td style="text-align: center;">中文排版需求</td></tr></tbody></table><h3 id="语言学">语言学</h3><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://www.internationalphoneticalphabet.org/ipa-translators/">InternationalPhonetic Alphabet Translator</a></td><td style="text-align: center;">国际音标转换器</td><td style="text-align: center;">官方国际音标转换器</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://unalengua.com/ipa?ttsLocale=en-GB-WLS&amp;voiceId=Geraint&amp;sl=en&amp;text=he%20hue">UnalenguaIPA Translator</a></td><td style="text-align: center;">国际音标转换器</td><td style="text-align: center;">第三方国际音标转换器</td></tr><tr class="odd"><td style="text-align: center;"><a href="https://ipa-reader.com">IPAReader</a></td><td style="text-align: center;">国际音标转换器</td><td style="text-align: center;">IPA 阅读器</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://www.ethnologue.com">Ethnologue</a></td><td style="text-align: center;">资料</td><td style="text-align: center;">世界语言数据</td></tr></tbody></table><h3 id="语言">语言</h3><table><colgroup><col style="width: 35%" /><col style="width: 18%" /><col style="width: 46%" /></colgroup><thead><tr class="header"><th style="text-align: center;">名称（链接）</th><th style="text-align: center;">分类</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr class="odd"><td style="text-align: center;"><ahref="https://www.shuowen5.com">说文解字</a></td><td style="text-align: center;">汉语资料</td><td style="text-align: center;">说文解字查询在线</td></tr><tr class="even"><td style="text-align: center;"><ahref="https://nodictionaries.com">NoDictionaries</a></td><td style="text-align: center;">拉丁语资料</td><td style="text-align: center;">拉丁语文献阅读学习</td></tr></tbody></table>]]></content>
    <pubDate>Thu, 24 Apr 2025 02:02:26 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[季度印象最深刻单集 2025.01]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/SeasonBest-202501-20250112</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/SeasonBest-202501-20250112</guid>
    <content type="html"><![CDATA[<h1 id="季度印象最深刻单集-2025.01">季度印象最深刻单集 2025.01</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202501-20250112/cover-picture.jpg"alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2025.04.04<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2 id="印象深刻-op-ed-选">印象深刻 OP / ED 选</h2><h3id="ギルドの受付嬢ですが残業は嫌なのでボスをソロ討伐しようと思います-op">「ギルドの受付嬢ですが、残業は嫌なのでボスをソロ討伐しようと思います」OP</h3><iframe style="aspect-ratio: 16/9;" src="https://www.youtube.com/embed/g5yCkyCZ6ZA?si=T2_vZqqqc2pNSA_i" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h2id="魔法つかいプリキュアmirai-days-1-再会はミラクルでマジカル">「魔法つかいプリキュア！！～MIRAIDAYS～」 #1 「再会はミラクルでマジカル！」</h2><blockquote><p>播出时间：2025.01.11</p></blockquote><p>难以忘怀的 #49 之后，作为 20 周年企划的法 Q二期第一话，开场对两人关系性的蜻蜓点水般的描写就已经展现出了村山功的实力。相比起隔壁Yes 5去年续作差强人意的表现，芳山优为本话贡献了大量的优秀作画。基于原版人设做出的改动，全新的变身和大招bank，更不用说第一场战斗全程十分精彩的作画了。适时插入的粗犷抖动的线条和飞冲爆，她本人最擅长的踩点上的设置所带来的力度感无一不展现着本作的关注度。而对变成大人的两人的身份转变，本话也已经有了最初的铺垫。不管怎么看，后续发展都太值得期待了。</p><h2 id="全修-7-初恋">「全修。」 #7 「初恋。」</h2><blockquote><p>播出时间：2025.02.16</p></blockquote><p>作为系列中迄今最佳的一集，彻底逆转了六集下来的样板戏剧本结构。保证高质量修正的同时用三段有微妙风格差异的结构相同的故事还形成对ナツ子人生与不足的刻画，从这个角度上看这一刻画放在这一集也正是形成动画系列整个情节转向的重要推动力。「初恋」的标题也是很巧妙的形成了三个故事和全片整体的象征母题。难能可贵的是三段故事在修正风格和演出风格上都有微妙的差别，还能在此之上保持不错的趣味性。</p><h2id="魔法つかいプリキュアmirai-days-11-みらいの決断">「魔法つかいプリキュア！！～MIRAIDAYS～」 #11 「みらいの決断」</h2><blockquote><p>播出时间：2025.03.22</p></blockquote><p>作为决战前的一集，不仅仅又有以芳山为核心带回的超高质量的打斗作画，后半文戏重又将视点放回到了三人的关系性上。再对过去的回忆之中让未来又作出忘却的决定，正是对前作本篇#49 和 #50 的重演和延续。难以想象村山对未来 &amp;过去的这一时间主题的把握如此巧妙，不仅完美地继承了从本传延续而来的为了相逢的离别、为了追忆的遗忘的如此浪漫动人的主题，更是以这种戏剧结构上的重演和利用主题的回忆大量地勾起角色的、观众的回忆，作为多年后的续作、情怀作、面向成长为大人的孩子们的一作而言实在太过出色了。</p>]]></content>
    <pubDate>Fri, 4 Apr 2025 00:53:40 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[2024 年度 TV 动画单集十选]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/YearBest-2024-20250108</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/YearBest-2024-20250108</guid>
    <content type="html"><![CDATA[<h1 id="年度-tv-动画单集十选">2024 年度 TV 动画单集十选</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2024-20250108/cover-picture.jpg"alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2025.01.08<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>冬春夏秋季度动画见：</p><ul><li><a href="/writings/SeasonBest-202401-20240301">2024冬季动画（2024.01）</a></li><li><a href="/writings/SeasonBest-202404-20240415">2024春季动画（2024.04）</a></li><li><a href="/writings/SeasonBest-202407-20240721">2024夏季动画（2024.07）</a></li><li><a href="/writings/SeasonBest-202410-20241007">2024秋季动画（2024.10）</a></li></ul><p>仍然先重述下选集规则：</p><ul><li>2024 年内初次放送的 TV/WEB 动画内单集、2024 年内作为 BD/DVD特典发售的 OVA/OAD</li><li>每作仅限一集（同一季度年内两季度分割放送视为一作、同系列不同季度视为不同作）</li><li>仅代表个人口味</li></ul><h2 id="忘却バッテリー-6-やる">「忘却バッテリー」 #6 「やる!!」</h2><blockquote><p>脚本：横手美智子<br />絵コンテ：飯田剛士<br />演出：飯田剛士、藤井邦雄<br />総作画监督：島袋奈津希<br />播出时间：2024.05.14</p></blockquote><p>哪怕放在全年也是极出色的单回，在完成对投捕的背景叙事与完成团队组合的结构性需求之后本话第一次转向对重要配角的单元剧形式描写。从先前对投捕兄弟的背景叙事就不难预期到藤堂葵与千早瞬平都有着值得一提的过去，而本话从一开始接续前五话的轻松氛围借着A part 自然过渡到了压抑的 Bpart。以“天才”一词连接起了从葵到投捕兄弟再到葵的几次焦点转向的同时，也完成了情绪的几度急转向。而无论是低饱和高灰度的画面还是对公园带有裂痕的物件的空镜头的反复利用，又或者是对某些元素的图形匹配转场与略显夸张扭曲的演技的应用，都很自然地突出了压抑感，全无刻意的做作。借着日式作品特别是安达充最惯用的积雨云实现了末尾向高明度高饱和画面的过渡后，对人物手部的最后一次特写终于宣告了抓取这一动作得到了意向的客体，文本上暗示回忆的直述被嵌入到延续着的内心独白，本话以一种近于借代的比喻完成了最华丽的情绪转向，并紧接着就嘎然而止结束整话。本作从头至尾都持续保持着高水准，尤其也同样表现在#11 一话中。</p><h2 id="義妹生活-9-義妹と日記">「義妹生活」 #9 「義妹と日記」</h2><blockquote><p>脚本：広田光毅<br />絵コンテ：上野壮大<br />演出：上野壮大/小林美月<br />総作画監督：仁井学<br />播出时间：2024.08.29</p></blockquote><p>尽管资源上无可忽视的贫瘠，本作从最初开始就已经凭动画中相当异质的演出手段展露了水准。室内场景内大量使用极冷静的中远景的客观镜头、空镜头、垮场景的窥视镜头等等，效果音与剧伴的使用上也相当克制，而本话尤其如此。几处优雅的互文、讲究的伏笔以及点题就已经显出了功力。历经三分之二篇幅下来的压抑的、烦闷的室内情景与压抑但越发难以抑制的情感本该在本集得到一个宣泄的出口，但对出口或者说结果的悬置恰好更符合了本作的真正主题。身份与关系性自然的转变只能通过称呼上的转变暗示，同时这份暗示也成为对情感宣泄出口的阻隔。这种处理可能在#5 就已经有所预演了。</p><h2 id="小市民シリーズ-2-おいしいココアの作り方">「小市民シリーズ」 #2「おいしいココアの作り方」</h2><blockquote><p>脚本：大野敏哉<br />絵コンテ：武内宣之<br />演出：武内宣之<br />演出補佐：高野やよい<br />総作画監督：具志堅眞由（Production I.G 新潟）<br />播出时间：2024.07.13</p></blockquote><p>应该说是很有米澤味的日常推理故事吧，但最难能可贵的反而是这份日常。并不是像#1那样进行过多的省略以快速推进主线，本集悠闲地只对几杯热可可做推理分析这个情节比重的设置本身应该可以说是与「冰菓」一脉相承的。另一方面，推理本身呈现的过程却从某种意义是与「冰菓」彻底走向两个极端的，大量主观镜头的使用和台本量的减少使得推理过程融入了人物和动作之中，生动性与趣味性兼具的同时有力避免了大量文本可能导致的枯燥。尽管如此相承自上一集的本集放到动画整体之中去看节奏变化就有些太微妙了。</p><h2 id="ダンジョン飯-19-山姥夢魔">「ダンジョン飯」 #19「山姥/夢魔」</h2><blockquote><p>脚本：佐藤裕<br />絵コンテ：小倉陳利<br />演出：中野広大<br />総作画監督：竹田直樹<br />播出时间：2024.05.09</p></blockquote><p>应该说从 #17开始迷宫饭的观感在不断提升，大概也有其中点出迷宫饭最内核的部份的原因。比起打赤龙救妹妹前相对更单纯地聚焦于饭这一点，后半部分开始更多地转向角色本身。继#17 直指内核之后，#18重回单元剧，利用变形怪完成了对角色兼具趣味性与丰富度的塑造，本话的后半段则将焦点聚于在前段侧重饭部份时未能塑造多少的マルシル，捎带一丁点宿命论的同时又不过多强调自父亲的具体源头，反倒是与先前复活妹妹的情节杂糅到一起，以迷宫饭一贯的风格完成了队内成员的某种救赎，同时还不忘继续丰富对ライオス的塑造又对往后的大战埋下伏笔，而即使不考虑这一点也能浅显直白地将其视作是マルシル心境的变化，演出太优秀。</p><h2id="勇気爆発バーンブレイバーン-8-また会おうスミス">「勇気爆発バーンブレイバーン」#8 「また会おう、スミス」</h2><blockquote><p>脚本：小柳啓伍<br />絵コンテ：大張正己、重原克也<br />演出：重原克也<br />総作画監督：本村晃一<br />播出时间：2024.02.29</p></blockquote><p>开播前误导观众以为真实系作品而第一集就一转超级系，在前七话用趣味消除残酷剧情的前提下本作转回了无情的真实系描写。想要成为英雄而不得的史密斯只能开着真实系的机器与还在轻松自如地发癫的超级系反派作战，更显史密斯最后物理爆发的悲壮。一反先前的叙事节奏，快且急的展开也仿佛要把观众压倒一般地传达出了史密斯的无力，这才更显出了他那句“勇气爆发”的份量。</p><h2 id="年度最佳">年度最佳</h2><p>同样的年度最佳环节，但其实没有太多可评。值得记忆的大概只有高桥的两部重制作：「うる星やつら第 2 期」和「らんま1/2」。尽管都没有相当出色的单集，但两者都很好的顺应着时代的变化而巧妙选取文本的着重点，同时演出和作画资源上都保持着相当的一致性。尤其是乱马新作对男女主关系性的着重更是极妙的着眼点，而在充斥大量的喜剧性元素的原作和旧作动画中（当然也是顺应高桥的本心）这种关系性的侧重是难以体现出的。可能可以再算上水岛的「終末トレインどこへいく？」，作为20 年代的作品而言大概会在历史上留下一笔吧。</p><p>趣味性上来看可能要属于「負けヒロインが多すぎる！」，第三者视点对传统恋爱喜剧中败犬角色的关注确实挺有创新心，充足的资源堆积也带来了制作上的优良。「変人のサラダボウル」同样有着不错的娱乐性，很难得一见的关注着非日常角色融入日常的过程。另外「即死チートが最強すぎて、異世界のやつらがまるで相手にならないんですが。」和「嘆きの亡霊は引退したい」作为厕纸轻改也能作为还算过得去的代餐。</p><p>剧场作方面大概只有浅野一二〇原作的「デッドデッドデーモンズデデデデデストラクション」上篇有着亮眼的表现，真正的后疫情时代的作品，对平凡日常下潜伏的非日常、非日常下的日常的表现相当到位，可惜下篇还要流于平庸的恋爱环节，大概也只有那场爆炸能留在记忆中了。</p><p>个人而言心心念念的同样还有「頭文字 D」续作「MFGhost」，不过节奏实在太慢的前提下还要插入大量女人环节实在有点坏观感了。</p>]]></content>
    <pubDate>Wed, 8 Jan 2025 22:55:57 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[2023 年度 TV 动画单集十选]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/YearBest-2023-20240106</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/YearBest-2023-20240106</guid>
    <content type="html"><![CDATA[<h1 id="年度-tv-动画单集十选">2023 年度 TV 动画单集十选</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/cover-picture.jpg"alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.01.08<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>很久不写评论了。年中开始正好空闲时间渐多，闲来无事为了记录也为了练练笔故而今年决定每个季度简单记录一下印象比较深的动画片。冬季动画错过了成文的时机，春夏秋季度的动画可见：</p><ul><li><a href="/writings/SeasonBest-202304-20230612">2023春季动画（2023.04）</a></li><li><a href="/writings/SeasonBest-202307-20230703">2023夏季动画（2023.07）</a></li><li><a href="/writings/SeasonBest-202310-20231111">2023秋季动画（2023.10）</a></li></ul><p>年选十回虽说是十回，然而对的上自己口味的并没有那么多。也不愿为了填充十回的数量而生搬硬凑，最终绞尽脑汁也只选出五话，也只能如此了。</p><p>先简述下选集规则吧：</p><ul><li>2023 年内初次放送的 TV/WEB 动画内单集、2023 年内作为 BD/DVD特典发售的 OVA/OAD</li><li>每作仅限一集（同一季度年内两季度分割放送视为一作、同系列不同季度视为不同作）</li><li>仅代表个人口味</li></ul><h2id="アイドルマスター-シンデレラガールズ-u149-4-羽が折れているのに飛んでいくものなに">「アイドルマスターシンデレラガールズ U149」 #4「羽が折れているのに飛んでいくもの、なに？」</h2><blockquote><p>脚本： 村山沖<br />絵コンテ：河原龍太<br />演出： 河原龍太<br />作画監督： 野田猛<br />播出时间：2023.04.26</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-1.jpg"alt="偶像大师 U149 截图" /><figcaption aria-hidden="true">偶像大师 U149 截图</figcaption></figure><p>冈本学在 21 年无职转生（「無職転生～異世界行ったら本気だす～」）大展身手后作为监督负责的第二部作品，作画演出分镜多方面的用心程度上无不延续了无职转生的超高质量。尽管本作后段内核已经出现了把握上的些许偏差（为了让偶像带去梦想甚至要牺牲staff自己家庭中孩童的微小快乐），甚至于在一些演出上出现了用力过猛的状况，然而这也不能否定本作前期单回的出色。</p><p>延续本家单回关注单一角色单元剧、单回暗埋c位伏线完成最终情感爆发到完成live 的传统，本作 ep4作为关注于桃华的单回，可说是质量最高的几集之一。作为应当贯穿近乎全部单元回的爱丽丝伏线在本集中被巧妙转化为了与桃华相对比的暗线，对桃华的塑造不仅从周边staff上展现，更是从与她同作为偶像的爱丽丝上衬出。相比于服饰小物的直观对比，构图上的展现更加直观，作为背景/调度物的建筑结构无情地将桃华与他人隔开。本身带着神秘学色彩的寺庙更是加剧了这一压抑感。那段酣畅淋漓的、展现桃华第一视角的蹦极作画完成了情感上的宣泄，从此做作的小物退出了画面，无情的建筑结构也似乎披上了温情，成为主动消除桃华与他人距离的存在。</p><h2 id="ワールドダイスター-10-それぞれの幻影">「ワールドダイスター」 #10「それぞれの幻影」</h2><blockquote><p>脚本：江嵜大兄<br />絵コンテ·演出：伊東優一<br />作画監督：安形佳己、王宣静、他<br />播出时间：2023.06.11</p></blockquote><p>超能力在演剧主题中的加入不多作置评，然而舞台装置在叙事甚至于画面中的直接出现事实上给与了从调度与演出层面刻画角色的更多可能。对此笔者印象最深的其实是「SHINEPOST」那句对演出结束后观众席的评判，不过这里暂且略去不表。本集借助于以灯光效果为代表的舞台装置合理地将角色的心境纳入到调度与画面共同组成的叙事结构中，又能借助以harmony为代表的古典动画手段暗表情思，十分犀利。</p><h2 id="bang-dream-its-mygo-10-ずっと迷子">「BanG Dream! It’sMyGO!!!!!」 #10 「ずっと迷子」</h2><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-4.png"alt="MyGO 截图" /><figcaption aria-hidden="true">MyGO 截图</figcaption></figure><blockquote><p>脚本：後藤みどり<br />絵コンテ：梅津朋美(エディッツ)<br />演出：梅津朋美(エディッツ)<br />CGディレクター：大森 大地、遠藤 求<br />播出时间：2023.08.17</p></blockquote><p>歇斯底里女同闹麻炒作动漫，全 3D制作却表现出了多方面的高水平。ep3、ep7等都有着不少的话题度，而作为直接点出标题、乐队名中“<ruby>迷子<rt>Mygo</rt></ruby>”双关意味的本集，则是对乐队五人从形式上的相聚到分离再到真正聚合的最终完成。情感上远超ep3的程度，同样借助于舞台装置完成了调度、画面与叙事的多重塑造，而叙事结构与音乐母题的高度一致性更为可圈可点。歌曲中作为叙事载体的“<ruby>詩<rt>うた</rt></ruby>”重聚为形式上的“<ruby>歌<rt>うた</rt></ruby>”的全过程，其与乐队成员、乐器构成上的对应关系不言自明。</p><h2 id="英雄教室-10-俺よりうまいものに逢いに行く">「英雄教室」 #10「俺よりうまいものに逢いに行く」</h2><blockquote><p>脚本：ハヤシナオキ<br />絵コンテ：大平直樹<br />演出：工藤寛顕<br />総作画監督：川村幸祐<br />播出时间：2023.09.10</p></blockquote><p>纯粹的厕纸改动漫从第一集开篇无敌勇者找朋友开始便一眼望穿，然而弥足珍贵的是精确把握情感调度的同时又不忘加入对经典的neta 作为调剂的出色结构。继 ep8 暗指 SAC，ep9 以 EVA 逆A巨人哥斯拉的neta 贯穿整集之后，ep10 的魔爪伸向出崎统标志性的 harmony 与三回pan，在大量插科打诨后借助对明日之丈的 neta实现了情绪上的小爆发，以此完成了一个最标准的英雄之旅（A Hero’sJourney）结构。如此淳朴的欢乐与感动实在是太弥足珍贵了。</p><h2id="川越ボーイズシング-9-いつかのアイムソーリー">「川越ボーイズ・シング」#9 「いつかのアイムソーリー」</h2><blockquote><p>脚本：川越学園文芸部<br />絵コンテ・演出・作画監督：武内宣之<br />播出时间：2023.12.04</p></blockquote><p>几乎可以被直接作为垃圾丢掉的动画，最终话直到本文成文时仍未播出。然而可能也正因此才使本集更加突出，足以在秋季动画中留下一笔。夸张的广角、克制的剧伴与刻意强调的背景音从一开始便突兀地展现了极压抑的氛围，而这一切的不适感则春风化雨般的被表露情绪的合唱所消解。最难能可贵的是最后并没有让所谓不可或缺的伙伴生硬地留下来以满足美好大团圆的幻想，而是更现实地创造了一个对双方都相对圆满的离别。</p><h2 id="年度最佳">年度最佳</h2><p>只看 TV/WEB动画的最好单集未免有些太过偏颇，最后再简单记录下今年看过的一些其他想说说的动画。</p><h3id="最佳剧场アイカツ-10th-story-未来へのstarway">最佳剧场：「アイカツ！10th STORY ～未来へのSTARWAY～」</h3><blockquote><p>監督：木村隆一<br />脚本：加藤陽一<br />上映时间：2023.01.20</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-2.jpg" alt="偶像活动" /><figcaption aria-hidden="true">偶像活动</figcaption></figure><p>献给长大成人后的、十年前观看初代偶活的粉丝的纪念性剧场。然而远比先前的「魔女見習いをさがして」，也远比之后的「キボウノチカラ～オトナプリキュア’23～」更好，是真正考虑了粉丝心情的动画。笔者当时正值大学将毕业的时期，留下如此评论：</p><blockquote><p>在自己也将毕业的这个时点看感触还真是微妙。毕业并不是什么了不得的大事，要缅怀的青春也早已在不经意间流去，离别之后的未来也绝不是什么星星闪闪的道路。相比于EVA那充满说教意味的圆满到不能再圆满的补完，我倒是更被她们用片刻青春编织出的无限延伸到未来的梦打动。就算被迫地走向再平凡普通的未来也不要紧，那是曾经闪耀的我们，以及你们，可以无数次重新开始的STARWAY。</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-3.jpg" alt="偶像活动" /><figcaption aria-hidden="true">偶像活动</figcaption></figure><p>偶像正因不是永恒的所以才永恒的美丽。别离了学生时期才能参与的偶像活动后，长大成人、变得成熟后的她们的道路又在哪里？我不明白。巧妙编排的三集TV动画中落在最终话的，是在描述大人们的她们日常生活的一集之后的，重新回顾毕业live的一集。偶活精神连接到了无限延伸的未来，正因如此笔者还愿意相信那个她们将一切落在的、闪闪发光的STARWAY 上。</p><h3 id="最佳机器人グリッドマン-ユニバース">最佳机器人：「グリッドマンユニバース」</h3><blockquote><p>監督：雨宮哲<br />脚本：長谷川圭一、雨宮哲<br />上映时间：2023.03.24</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-5.jpeg"alt="古力特宇宙" /><figcaption aria-hidden="true">古力特宇宙</figcaption></figure><p>古力特与电光机王的续作，完美收结一切的粉丝向剧场。雨宫那从动画人博览会开始便心心念念的古力特动画在他心中大概是有了一个不错的结尾。我喜欢的一切大概都在这里了。</p><p>約束と、愛と、賞味期限。</p><h3id="最佳人设ひろがるスカイプリキュア">最佳人设：「ひろがるスカイ！プリキュア」</h3><blockquote><p>監督：小川孝治<br />脚本：加藤還一、金月龍之介、井上美緒、山岡潤平、成田良美、守護このみ、伊藤睦美、村山功<br />开播时间：2023.02.05</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-6.jpg" alt="天空q娃" /><figcaption aria-hidden="true">天空q娃</figcaption></figure><p>光美做出相当改变的一作。同年的男人光美舞台剧企划、yes precure续作大人光美动画企划等等，而本作更是首次加入了男人光美与大人光美作为主要角色，主角也选择了蓝色作为主色。脚本制作上希望回归初代的两人情感，也有不少单回做出了大胆的改变：全片不出现怪物而主角变身是为了帮助一般市民。尽管做出了如此多看似相当积极的改变然而动画本身实在鸡肋。然而人设确实是好看的，这就是斎藤敦史哥的含金量。</p><h3 id="最佳oped無職転生ⅱ-異世界行ったら本気だす">最佳op/ed：「無職転生Ⅱ～異世界行ったら本気だす～」</h3><blockquote><p>監督：平野宏樹<br />脚本：漆原虹平、大野敏哉、高山淳史<br />开播时间：2023.07.02</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-8.jpg" alt="无职转生" /><figcaption aria-hidden="true">无职转生</figcaption></figure><p>制作周期管理不顺与大量核心人员离职等诸多原因导致本作二期的制作质量实在一言难尽，脚本上的最后坚持也能看出staff 对本作的热爱。尽管如此，本作的 op可说是延续了一期的出色质量。“迈出一步”这一行为作为全系列的最核心在这一op中被继续体现：伴着鲁迪的行走，他与其他人建立起了联系，其他人将这种联系化为了力量，而这股力量本身也转而成为了鲁迪自身的力量。op影像构建的思路实质上与一期几个出色单回的思路有着一定程度上的一致性，鲁迪转生前后身份行为的对比更是突出“迈出一步”这一核心的最直接手段。窗户的意象手段同样由一期延续到了op甚至于正片之中，作为鲁迪与他人建立联系的渠道存在着。在此之上更为明显的三色鸟更不必多说了。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-7.jpg" alt="无职转生" /><figcaption aria-hidden="true">无职转生</figcaption></figure><h3id="最佳厕纸改陰の実力者になりたくて-2nd-season">最佳厕纸改：「陰の実力者になりたくて！2nd season」</h3><blockquote><p>監督：中西和也<br />脚本：加藤還一<br />开播时间：2023.10.04</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/YearBest-2023-20240106/picture-9.jpg"alt="想成为影之实力者" /><figcaption aria-hidden="true">想成为影之实力者</figcaption></figure><p>最佳单回中虽然没有提到，然而影子大人自 22年的一期以来都保持了不错的改变水准。尽管二期整体不如一期来的那么有趣，不过从整体制作上就足见中西对本作的热爱。无论是用爱发电的几个作画质量不错的一人原画回，还是对趣味性与所谓龙傲天情节带来的爽快感的把控都相当出色，在此之上还能用心绘制众多的女性角色，相当完美地表现出了半自动误解流轻小说的最大趣味所在。</p><h3id="最佳原创オーバーテイクbirdie-wing--golf-girls-story--season-2">最佳原创：「オーバーテイク！」&amp;「BIRDIEWING -Golf Girls’ Story- Season 2」</h3><p>虽说是最佳原创但实质上是把邦多利企划排除后的最佳原创，或者也可以说是2D 动画最佳。</p><h4 id="birdie-wing--golf-girls-story--season-2">「BIRDIE WING -GolfGirls’ Story- Season 2」</h4><blockquote><p>監督：稲垣隆行<br />脚本：黒田洋介<br />开播时间：2023.04.07</p></blockquote><p>贫穷但凭借着相当的创意与用心表现出了最大的趣味。黑田对 neta与情节设置的把控达到了极出色的地位，而在此之上古谷彻与池田秀一的加入更是添加了不少作品之外的趣味性，也因此，相信每一个敢达吃都能在本作中发现别样的乐趣。</p><h4 id="オーバーテイク">「オーバーテイク！」</h4><blockquote><p>監督：あおきえい<br />脚本：高山カツヒコ、あおきえい、関根アユミ<br />开播时间：2023.10.01</p></blockquote><p>淳朴的青春赛车片吧可以说是，不是很赛车，然而短短 12集聚焦于两个主角的心结，非常自然地将不同时序内互成因果的事件娓娓道来，又自然地过渡到了矛盾的解决。在多个角色塑造相当丰富的基础上，又能看似不经意地将一些微小的改变落实，这大概也是最难能可贵的地方了。</p>]]></content>
    <pubDate>Wed, 8 Jan 2025 22:55:57 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[季度印象最深刻单集 2024.10]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/SeasonBest-202410-20241007</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/SeasonBest-202410-20241007</guid>
    <content type="html"><![CDATA[<h1 id="季度印象最深刻单集-2024.10">季度印象最深刻单集 2024.10</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202410-20241007/cover-picture.jpg"alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2025.01.06<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2 id="印象深刻-op-ed-选">印象深刻 OP / ED 选</h2><p>感觉最近几篇都要专门讲讲 OP / ED的太频繁了，干脆从本篇开始专门列一栏吧。想了想现在动画片着重这方面也确实是适应短视频时代潮流，用一分半的短动画吸引观众。</p><h3 id="魔王様リトライｒ-ed">「魔王様、リトライ！Ｒ」 ED</h3><iframe style="aspect-ratio: 16/9;" src="https://www.youtube.com/embed/sSDOFDgZEdk?si=oXvWg9-ZlLVDs9Xl" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h3 id="チ-地球の運動について-ed">「チ。 ―地球の運動について―」 ED</h3><iframe style="aspect-ratio: 16/9;" src="https://www.youtube.com/embed/F541MRFhXX8?si=QDBzIji_wW-whGPM" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h3 id="チ-地球の運動について-op">「チ。 ―地球の運動について―」 OP</h3><iframe style="aspect-ratio: 16/9;" src="https://www.youtube.com/embed/eZAocot63s8?si=LAweTUQje-Pv8dSh" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h3 id="アオのハコ-ed">「アオのハコ」 ED</h3><iframe style="aspect-ratio: 16/9;" src="https://www.youtube.com/embed/2k8zlyquTOs?si=MAyWM1XNCsSn3h6P" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h3 id="らんま12-ed">「らんま1/2」 ED</h3><iframe style="aspect-ratio: 16/9;" src="https://www.youtube.com/embed/Sy-CYyfmO6g?si=l9G2sSS9KEbNXmGu" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h2 id="ダンダダン-5-タマはどこじゃんよ">「ダンダダン」 #5「タマはどこじゃんよ」</h2><blockquote><p>播出时间：2024.10.31</p></blockquote><p>季度最受瞩目也的确大约是本季目前为止最高质量的作品，科学猴汤浅徒弟山代風我的出色把控带来的是全方位的高质量制作与文本的趣味性的并驾齐驱，不过比起以非日常大场面引入作品背景并结束序章的前四话相比本话作为过渡回更显本作的高超水准，尤其是A part两人午休时在校园内互相寻找对方的部分。嘈杂的背景音画复用以及突出的前景人物主体对熟悉ACGN 的观众来说可能会带有一种 Galgame一般的异质感，不断错过的二人也可能让熟悉特摄片的朋友想起敏鬼在555，在暴太郎中的趣味展开。而早已铺垫延续了许久的平缓却又跳动的定旋律，也在主角两人情绪的急转直下中不断变奏，同一动机不断重复，和声也转而只出现于乐句的结束，强化的节奏最终在两人相撞时化为清脆的响声结束了剧伴的同时又将文本转入到冲突将爆发的阶段，更不用提全过程中足够突出的对称的构图以及适当的跳切对整幕趣味性的贡献了。</p><h2 id="オーイとんぼ-第2期-24-とんぼホールアウト">「オーイ！とんぼ第2期」 #24 「とんぼ、ホールアウト」</h2><blockquote><p>播出时间：2024.12.14</p></blockquote><p>尽管制作上的贫穷已经到了难以掩盖的地步，但文本上的扎实却是从一期就已展现。除去足够高质量的高尔夫相关知识外，对包含乃至配角在内的众角色的成长性的刻画更是令人感叹，而这一出彩之处在本话最为突出。制胜球前以高尔夫球飞往不同方向，连带着完全不同的エマ、ひのき、円三人走向不同的方向，以此完成了一个十足明显的象征，而ひのき的迷茫也在她走上最短、最佳的球路时被反衬而出。然而最为精巧的设计恰恰在这之后，停下脚步准备击球的三人同时都望向とん所先至一步的果岭，那是他们共同的终点，也是如此不同的三人所共有的、对高尔夫的热爱本身。</p>]]></content>
    <pubDate>Mon, 6 Jan 2025 00:32:56 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[再看巴门尼德与笛卡尔：从「是」谈起]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Phila-20241127</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Phila-20241127</guid>
    <content type="html"><![CDATA[<h1id="再看巴门尼德与笛卡尔从是谈起">再看巴门尼德与笛卡尔：从「是」谈起</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Phila-20241127/cover-picture.jpg" alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.11.27<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>本篇谈谈近来对「是」，暨英语中“being”概念的新理解。我们知道巴门尼德在《论自然（<ruby class='minority-language-font-ruby'>Περὶφύσεως</ruby>）》中的名言：</p><blockquote><p><ruby class='minority-language-font-ruby'>ἔστιν γὰρ εἶναι, μηδὲν δ᾽οὐκ ἔστιν.</ruby></p></blockquote><p>对应的翻译见下。其中，拉丁文用法引自穆尔贝克的威廉对亚里士多德《形而上学》的译文，后半句为对本句的译文：</p><blockquote><p>Necesse est enim dicere et cogitare esse ens; nam esse est, non ensautem non est.<br />For being is, and non-being is not.<br />存在するものは存在し、存在しないものは存在しない。</p></blockquote><p>同样著名的对这一概念的直接运用在于笛卡尔“我思故我在”：</p><blockquote><p>Cogito, ergo sum.</p></blockquote><h2 id="esse">Esse</h2><p>近来对拉丁文的学习，笔者特别注意到了对“esse”一词的特殊使用。作为表达「是」的连系动词，古罗马哲学家、诗人却有大量对其的单独使用，正如上文笛卡尔的使用，以及穆尔贝克的威廉译文中的使用一样。具体的，我们可以随便看一些经典名句：</p><blockquote><p>Non ille diu vixit, sed diu fuit. — Seneca<br />Sumus, ergo vivimus. — Seneca<br />Non es, si non intelligis. — Boethius<br />Fui, ergo existo. — Cicero</p></blockquote><p>关于其含义，以及其与“existere”之间的关系可以参见以下对其不定式形态的名词性用法：</p><blockquote><p>Esse sine actu non potest; nam id quod non agit, nec existere potest.— Boethius<br />Existere est quoddam esse determinatum. — Thomas Aquinas<br />Esse est percipi. — Augustinus</p></blockquote><p>这种用法是不在如今的中文、英语甚至于日文中出现的。无论是「我是」又或是“Iam”，包括最喜欢使用省略的日文中的「私は・私が」都不像是一个完整的句子，而更接近于省去补语的应答用语。很难想象其会单独出现在没有提示补语的上下文语境中。</p><p>那么什么是这个「是」呢？从分哲的角度上看，大抵可以视为是集合/元素与集合/元素间的相等、属于、子集的关系，又或者是命题与命题间的等价与蕴含关系。语言上讲，中文中「是」古来就可作为表判断的谓词使用，一如英语中的“be”。类似的谓词包含「为」、「谓」等。日文中的语助词「は・が」虽有侧重点上的区别，但大体也起这种表判断的作用。如果考虑其作为谓词而非名词的使用场景（注意“being”概念已经在使用形容词性的分词来暗示名词性所指了），其都无法涵盖（甚至不包含）拉丁文中“esse”的那层不同于「存在」但提示「存在」的含义。</p><p>从阿奎纳哪里我们也可以看到，“existere”是如此特殊的一种“esse”，以至于他甚至连用了“-dam”和“determinatum”两个表确定含义的词/后缀来指示。换言之，「存在」，被认为是那个所「是」的那个确定的东西了。塞内卡“Nonille diu vixit, sed diufuit.”一句中，我们也可以清楚看到他对完成时的有趣使用。这里的“活”对我们而言几乎就可以被类比于「存在」了。类似的用法在西塞罗的“Fui,ergoexisto.”一句中，谓词「是」同样使用了完成时：“我是过，所以我现在存在”。</p><p>可以这么理解：一个在某个时间点不「存在」的东西，它却可以在其他的时间点「存在」。然而某个在某个时间点不「是」的东西，却不可能在其他时间点「是」。如若不然，它就已经「是」在那个时间点中的，它所「是」的东西了。用拉丁语来表达可能更清晰一些：</p><p>Ille quod non est non fuisse potest, aut esse, aut fore (futurumesse), nam nisi, est in tempore praeterita quod antea fuit, aut intempore futura quod postea erit.</p><p>也因而，巴门尼德的那句话也许译成“是者是，而不是者不是”更准确一些，正如穆尔贝克的威廉翻译的那样：“Esseest, non ens autem nonest.”。有趣之处在于这里前者使用了名词性的不定式形式而后者使用了形容词性的现在时主动态分词形式，当然也可能是出于丰富性的考量。至于对古希腊语文本本身的分析与思考，要待笔者学习古希腊语之后再研究了。</p>]]></content>
    <pubDate>Wed, 27 Nov 2024 10:21:55 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[季度印象最深刻单集 2024.07]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/SeasonBest-202407-20240721</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/SeasonBest-202407-20240721</guid>
    <content type="html"><![CDATA[<h1 id="季度印象最深刻单集-2024.07">季度印象最深刻单集 2024.07</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202407-20240721/cover-picture.jpg"alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.10.07<br />最后编辑于：{docsify-last-updated}</p></blockquote><h2id="杖と剣のウィストリア-1-一振りの剣つるぎのように">「杖と剣のウィストリア」#1 「一振りの剣つるぎのように」</h2><blockquote><p>播出时间：2024.07.07</p></blockquote><p>并不是说文本写的多么的好而是纯粹的以超高质量的作画演出夺得最大亮点，美术和摄影的处理也都恰到好处。张力、力度感和速度感都能在高张数下直观地感受到，而哪怕是其他的对话场面都有仔细地处理人物演技。高张数和吉原式的拖影给观看体验带来的提升无疑是巨大的。</p><h2 id="小市民シリーズ-2-おいしいココアの作り方">「小市民シリーズ」 #2「おいしいココアの作り方」</h2><blockquote><p>播出时间：2024.07.13</p></blockquote><p>应该说是很有米澤味的日常推理故事吧，但最难能可贵的反而是这份日常。并不是像#1那样进行过多的省略以快速推进主线，本集悠闲地只对几杯热可可做推理分析这个情节比重的设置本身应该可以说是与「冰菓」一脉相承的。另一方面，推理本身呈现的过程却从某种意义是与「冰菓」彻底走向两个极端的，大量主观镜头的使用和台本量的减少使得推理过程融入了人物和动作之中，生动性与趣味性兼具的同时有力避免了大量文本可能导致的枯燥。尽管如此相承自上一集的本集放到动画整体之中去看节奏变化就有些太微妙了。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202407-20240721/picture-2.jpg"alt="小市民" /><figcaption aria-hidden="true">小市民</figcaption></figure><h2id="物語シリーズ-オフモンスターシーズン-3-撫物語-第零話-なでこドロー-其ノ貮">「〈物語〉シリーズオフ&amp;モンスターシーズン」 #3 「撫物語 第零話 なでこドロー其ノ貮」</h2><blockquote><p>播出时间：2024.07.20</p></blockquote><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202407-20240721/picture-3.jpg"alt="物语系列" /><figcaption aria-hidden="true">物语系列</figcaption></figure><p>物语系列最新作或者说是对本篇系列彻底的补完，极具新房特色的演出本身从#1开始就已然回归，同时保持了系列一贯的突出效果。而放到本集才说更在于本集OP部分的出色，人物运动的风格与本篇完全不同，落于了写实的、具有自然感的生活片段。作画上的突出更是不必多说了。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/SeasonBest-202407-20240721/picture-1.jpg"alt="物语系列" /><figcaption aria-hidden="true">物语系列</figcaption></figure><h2id="負けヒロインが多すぎる-2-約束された敗北を君に">「負けヒロインが多すぎる！」#2 「約束された敗北を君に」</h2><blockquote><p>播出时间：2024.07.20</p></blockquote><p>出色的 OP，出色的ED，以及最重要的，作为恋爱喜剧的纯粹的趣味性吧。不在 #1写是因为本集首次出现 OP。OP的高饱和色块带来的强烈冲击，以及人物场景与职员表的交互，单独来看都不少见，但两者都在进一步加强交互与冲击的同时的互相结合带来的是更加欢快的、契合恋爱喜剧名头的氛围。</p><iframe style="aspect-ratio: 16/9;" src="https://www.youtube.com/embed/7GJOBkIgWHc?si=Ek7cARVPWZE772_R" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>ED也同样有设计感。实拍与动画、少量空镜头与大量主观镜头，结合在模拟定格的抽格镜头与模拟赛璐璐的边缘RGB分离的颜色设计之中，极细甚至细到没有了的任务的线条与角色自身的颜色一同跃动着，呼喊着少年少女们的青春。</p><iframe style="aspect-ratio: 16/9;" src="https://www.youtube.com/embed/2czbGCYz6gk?si=a8eyye4xt68A_qM6" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><p>只能说恋爱喜剧很多，有着不错制作的恋爱喜剧动画片也不少，但在此之上还能有不低的趣味性的、回归趣味本身的就难得一见了吧。</p><h2 id="義妹生活-5-レイトショーとガチなやつ">「義妹生活」 #5「レイトショーとガチなやつ」</h2><blockquote><p>播出时间：2024.08.01</p></blockquote><p>演出设计上相当令人惊喜。从 #1延续下来的强烈的所谓空气感、空气系的风格，室内场景内大量使用极冷静的中远景的客观镜头、空镜头、垮场景的窥视镜头等等，效果音与剧伴的使用上也相当克制。本话演出设计更是令人惊讶，剧中剧的电影内容大量插入，很顺利地与后续场景完成了结构上的互文，而上述延续而来的空气感则在情感上压抑了最高潮处，克制的效果音使得情感真正地点到为止地完成，回味无穷。</p><h2id="物語シリーズ-オフモンスターシーズン-6-撫物語-第零話-なでこドロー-其ノ伍">「〈物語〉シリーズオフ&amp;モンスターシーズン」 #6 「撫物語 第零話 なでこドロー其ノ伍」</h2><blockquote><p>播出时间：2024.08.10</p></blockquote><p>只看动画未看原作的我看完才惊叹：原来竟然是这样的故事吗？作为全部物语的终结，重新开始的物语故事的抚物语，原来与「恋爱サーキュレーション」有着相似节奏与乐句的最终章OP「caramel ribboncursetard」就已经在暗示本篇内容了。抚子最后和解的片段实在是做得太好了。</p><iframe style="aspect-ratio: 16/9;" src="https://www.youtube.com/embed/yhL7GvLbSyw?si=_spcI0sd_0MJkWW4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe><h2 id="義妹生活-9-義妹と日記">「義妹生活」 #9 「義妹と日記」</h2><blockquote><p>播出时间：2024.08.29</p></blockquote><p>可能是本季度最佳单集，绝对的出色演出。几处优雅的互文、讲究的伏笔以及点题就已经显出了功力。历经三分之二篇幅下来的压抑的、烦闷的室内情景与压抑但越发难以抑制的情感本该在本集得到一个宣泄的出口，但对出口或者说结果的悬置恰好更符合了本作的真正主题。身份与关系性自然的转变只能通过称呼上的转变暗示，同时这份暗示也成为对情感宣泄出口的阻隔。现在看来这种处理可能在#5 就已经有所预演了。</p>]]></content>
    <pubDate>Mon, 7 Oct 2024 01:54:26 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[软件项目实践的一些思索与后期优化方向：设计、开发以及其他]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/archive/ITtech/SoftwareInsights-20230428</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/archive/ITtech/SoftwareInsights-20230428</guid>
    <content type="html"><![CDATA[<h1id="软件项目实践的一些思索与后期优化方向设计开发以及其他">软件项目实践的一些思索与后期优化方向：设计、开发以及其他</h1><blockquote><p>本文首发于个人博客<br />发表日期：2023.04.28<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>大四下最后的一门课也结束了。这门课大体是由数个人组成一个小小团体进行一个小小项目从零到一的完整开发过程，不同于其他课程，这个项目要求以类似于实际开发的模式，让所有参与者都经历由需求确定、初期架构设计到中期开发、版本发布甚至于是需求变更以及迭代的完整软件开发的整个生命周期。当然其中也包括不同团队间的沟通协商。</p><p>大体而言我在其中以项目经理、架构设计、团队 Leader等各种身份参与了后端的完整开发，并也作为开发者参与到了前端部分的开发任务中。个人从中确实有不少感悟，故而写此文记录。在这里主要想谈谈设计、开发的一些感想，诸如进度管理、质量把控等等可能也略有涉及。</p><h2 id="项目背景">项目背景</h2><p>大体而言这个课程项目要求做一个宠物医院的线上学习平台，主要受众大概就是即将毕业或是正在大学学习的兽医相关专业的学生。其功能简要来讲大概有这么几类：</p><ul><li>用户管理与鉴权：常规的大系统都有的功能，这里大体上就分为管理员、出题的老师和进行学习的学生三类用户。</li><li>一个完整医院的 3D全景地图与导览模型：前端开发为主的功能，本文不涉及。</li><li>系统管理：要求对这个宠物医院内诸如药物、档案、收费项目、各类检查项目、住院者的信息等等各类内容进行管理，不过这个东西似乎没有在需求文档中体现出实际的意义与用处。</li><li>病例管理：大体上是需要把来医院就诊过的各类病例收集起来存储，其包括从入院诊断、具体检查到诊断结果与治疗方案等全过程的文字图片视频信息，当然也包括得的病的信息。</li><li>测试管理：由病例管理上游的疾病部分内容衍生而来。老师根据疾病生成题库，并从中选题整理为试卷。学生则参加考试进行答题。不过这部分内容似乎与虚拟宠物医院没有太大关系。</li><li>职能学习：一方面是让学生去学习疾病的相关知识（当然要看文字图片视频），一方面学生也可以通过看文字图片视频学习医院内各类角色（医生、医助等等）的具体操作内容。</li><li>数据管理：和上面提到的图片视频的存储有关。需求上还挺麻烦的，视频格式支持太多还需要进行视频的格式转换，反应到和用户的交互上来说还需要实现分块上传等功能等。</li></ul><p>尽管后文对具体业务尽量不会涉及，但姑且将背景记于这里。不难看出这个项目还是一个比较传统的要用到数据库后端前端三个维度的项目，因而后文也主要想从这三个维度的设计与开发两方面来聊聊。</p><p>项目可以参考：</p><ul><li><ahref="https://github.com/SoftwareDevelopmentPractice6/virtualPetHospital-backend">后端</a></li><li><ahref="https://github.com/SoftwareDevelopmentPractice6/virtualPetHospital-frontend">前端</a></li></ul><p>源码也可以在下面下载：</p><ul><li><ahref="archive/ITtech/_media/SoftwareInsights-20230428/virtualPetHospital-backend-master.zip"title=":ignore">后端</a></li><li><ahref="archive/ITtech/_media/SoftwareInsights-20230428/virtualPetHospital-frontend-main.zip"title=":ignore">前端</a></li></ul><h2 id="设计">设计</h2><p>由于课程要求重各类文档，因而并没有采取如今主流的敏捷开发模式，而是采取的<a href="#RAD">RAD</a>模型。个人来讲其实并不是很习惯这个模型，一方面其由瀑布式改进而来，从某种角度上还是非常重文档和前期的设计的，对需求的变更与过程中的变化并不敏感，另一方面也是因此在开发过程中的抗风险能力也非常依赖于前期的设计以及开发过程中的质量，由此带来的风险是非常恐怖的。</p><p>总之也是因此在进行前期设计时就花了相当多的时间。然而尽管如此，初期的设计还是有着比较大的漏洞，因而也给后期开发带来了一些麻烦。这些问题大多集中在数据库设计上。</p><h3 id="数据库设计">数据库设计</h3><p>由于项目较为庞大因而一些细节的设计我也没有来得及能够去亲自把控，而是交给了同组的其他人。在这里就出了问题。上文所述的测试管理中，题库中的问题需要记录与其相关的问题类别（属于哪种病）、问题类型（单选多选）、问题内容等等。针对此负责这块内容的组员A 给出了这样的设计：</p><pre class="mermaid"><code>erDiagramExam {int exam_id PKstring exam_name}Paper {int paper_id PKstring paper_nameint exam_id FKstring durationstring total_score}Question {int question_id PKstring question_contentstring question_typeint category_id FK}Category {int category_id PKstring category_name}ExamSession {int session_id PKint paper_id FKtime start_timetime end_time}StudentResult {int result_id PKint session_id FKint student_idint score}Exam ||--|| Paper : relatePaper ||--|| ExamSession : relateQuestion }o--|| Category : containsExamSession ||--o{ StudentResult : relate</code></pre><p>且不谈同学A遗漏了需要对每张卷子上包含的题目、以及每位学生在试卷上答题所做出的回答进行存储的功能，单看<code>Question</code> 与 <code>Category</code>两张表。乍一看虽然是挺合理的设计，然而后者的实际有效字段只有<code>category_name</code>一栏。我不否认在大型项目中这样设计的合理性，但是考虑到这个项目的规模、以及后续可能会进行的功能上的拓展，我个人看来<code>Category</code> 这张表完全冗余的。</p><p>另一方面，<code>Exam</code>、<code>Paper</code>、<code>ExamSession</code>这三张一对一的表虽然也是很符合设计原则的设计，但是同样考虑到项目规模与未来可能的拓展，这三张表就算合在一起也不会对性能与吞吐量带来很大的负担。一般来讲，只有在表中有一栏以上可能包含大量空值的情况下，或是某一些栏可能被频繁更新时，一对一关系的设计才相对合理。而在当前的情形中，这样的设计则是给后期撰写<code>SQL</code>与开发上带来了巨大的麻烦。且不谈数据的整合与处理，仅仅是外键的存在就已经带来了巨大的麻烦。这也直接导致了在后期初始化数据<code>SQL</code>撰写上耗费了大量Debug的时间，在开发的编码中也需要增加大量检测外键存在性的不必要代码。</p><h3 id="后端架构设计">后端架构设计</h3><p>初期设计时我就已经敲定了<ahref="#微服务">微服务</a>的架构。通常，微服务确实不适合于本项目这样的小型项目：配置麻烦、DevOps麻烦，等等。此外，大型项目中服务间数据一致性以及安全性都是非常棘手且关键的问题。</p><p>不过事实上，我其实很看重松散耦合这一点。其给后期开发与迭代过程中带来的自由度是相当大的。前述的问题，如配置、DevOps的确相对棘手，不过包含公用模块、各类插件的配置在初期完成后便一了百了，运维上利用Docker与统一的脚本进行自动化管理也是一经配置后就极易使用的，并没有给开发人员带来很高的成本。倘若有购买服务器配置Jenkins 进行更多的自动化的话，相关成本应该还能进一步降低。</p><p>实践中，jacoco、spotless、公共模块的配置实质上也仅仅耗费了我半天的时间，而后期部署时自动化测试脚本的编写仅仅耗费了我两个小时不到的时间。接口测试上所花费的时间略多一点，不过由于接口测试脚本基本是直接由swagger 生成的，因而也没有耗费太多的成本。</p><p>相较于这些仅局限于初期和末期的麻烦而言，微服务架构带来的好处是实打实巨大的。数据库与模块的分离带来的是各模块开发的高独立性以及运行时的高可用性。前文所提到的数据库尽管经常会碰到组员产生的Bug，但分离的数据库使得其余的几个模块并没有受到影响从而能够很顺利的进行开发。另一方面，后端模块的分离使得几个模块都能够被快速地开发出来，也因此能够较早地将接口给到前端，从而留出了大量可用于迭代的时间。产生缺陷时查找定位的范围仅仅在自身的子系统内，因而定位缺陷的成本也略有降低。而最最重要的，由于模块间的松散耦合，即使一个服务失败其他服务也能够继续工作，这给开发与测试都带来了相当程度上的便捷。</p><p>更具体的，微服务给实践中的开发带来了巨大的便捷性。我在项目中大概采取了下图的架构：</p><pre class="mermaid"><code>flowchart LR    subgraph backend        subgraph modules            direction TB            subgraph module 1                direction LR                entity1 --&gt; dao1 --&gt; service1 --&gt; controller1            end            subgraph module 2                direction LR                entity2 --&gt; dao2 --&gt; service2 --&gt; controller2            end            subgraph module 3                direction LR                entity3 --&gt; dao3 --&gt; service3 --&gt; controller3            end            subgraph module 4                direction LR                entity4 --&gt; dao4 --&gt; service4 --&gt; controller4            end        end        subgraph intermediator            direction LR            servicei --&gt; controlleri        end        controller1 --&gt; servicei        controller2 --&gt; servicei        controller3 --&gt; servicei        controller4 --&gt; servicei    end    subgraph database        databse1 --&gt; entity1        databse2 --&gt; entity2        databse3 --&gt; entity3        databse4 --&gt; entity4    end    controlleri --&gt; frontend</code></pre><p>作为微服务而言其实也是非常常见与合理的架构。中间层充当网关的角色被外部服务（前端）统一调用，其内部则再根据具体的调用请求来选择合适的服务进行通信，并将数据进行处理后转发给外部服务。在实践中，前端组与后端组同时开发，需求细节与开发细节还不明了的情况下，接口的内容与种类尽管可以大体确定，但具体的数据内容与种类等都是难以确定的。因而，利用中间层也即网关这一角色，接口确定的难题得以被解决。前后端可以先按照自己的想法对接口进行设计与模拟，当有一定的进度、对接口需求更加明确时再利用中间层进行数据的整合与处理，从而节约了大量沟通与修改的时间。</p><pre class="mermaid"><code>sequenceDiagram    Frontend-&gt;&gt;+Intermediator: Request    Intermediator-&gt;&gt;+Module: Processed Request    Module--&gt;&gt;-Intermediator: Response    Intermediator--&gt;&gt;-Frontend: Processed Response</code></pre><p>实践上，数据的转发与整合可以由后端的网关接管，也可以由前端利用 nodejs来开发，无论哪种都是非常灵活的。事实上，nodejs 构建的中间层或称 node层的出现，就是为了让前后端都更关注于业务本身。尽管层数的增加可能会给性能带来一些影响，然而这与开发效率所节省的成本相比是微乎其微的。由过去后端渲染html发送给浏览器的前后端不分离，到前后端分离开发再到中间层的进化，我想这是一个相当自然的过程，也非常值得去学习与应用。</p><p>此外，采取微服务架构，后期的扩展性也是相当高的。一方面，需要增加新业务时可以直接以模块为单位进行添加，而不需要再去对原有代码进行改动。另一方面，甚至也可以将同一服务运行在多台服务器上，并利用Eureka、Ribbon等等组件进行负载均衡与健康检查的功能，从而能够进一步提升可用性与性能，这些都是单体应用难以带来的好处。</p><p>当然，微服务的思想也能直接应用到前端上，也就是前些年提出的<ahref="#微前端">微前端</a>的思想。似乎前端组也有利用这一思想进行开发，不过本文就先不作赘述了。</p><h2 id="开发">开发</h2><h3 id="后端开发仍存在的问题">后端开发仍存在的问题</h3><p>开发上后端直接采用了 SpringBoot的四层架构，基本上实现了增删改查四类功能。同时，调数据库方面使用了JPA。</p><p>需求上，为了满足全字段搜索、以及较简单的增删改功能，考虑到开发上的便捷性，查询相关的业务逻辑大体都是采取了下面的写法：</p><div class="sourceCode" id="cb4"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">getFeature</span><span class="op">(</span></span><span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Integer</span> funcId<span class="op">,</span></span><span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcName<span class="op">,</span></span><span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcDescription<span class="op">,</span></span><span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcFlow<span class="op">,</span></span><span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcRole<span class="op">,</span></span><span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcTool<span class="op">,</span></span><span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> roomName<span class="op">)</span> <span class="op">{</span></span><span id="cb4-9"><a href="#cb4-9" aria-hidden="true" tabindex="-1"></a>    JSONObject res <span class="op">=</span> <span class="kw">new</span> <span class="fu">JSONObject</span><span class="op">();</span></span><span id="cb4-10"><a href="#cb4-10" aria-hidden="true" tabindex="-1"></a>    res<span class="op">.</span><span class="fu">put</span><span class="op">(</span></span><span id="cb4-11"><a href="#cb4-11" aria-hidden="true" tabindex="-1"></a>            Constants<span class="op">.</span><span class="fu">featureList</span><span class="op">,</span></span><span id="cb4-12"><a href="#cb4-12" aria-hidden="true" tabindex="-1"></a>            JSONObject<span class="op">.</span><span class="fu">parseArray</span><span class="op">(</span>JSON<span class="op">.</span><span class="fu">toJSONString</span><span class="op">(</span>featureRepository<span class="op">.</span><span class="fu">findAll</span><span class="op">().</span><span class="fu">stream</span><span class="op">()</span></span><span id="cb4-13"><a href="#cb4-13" aria-hidden="true" tabindex="-1"></a>                    <span class="op">.</span><span class="fu">filter</span><span class="op">(</span>feature <span class="op">-&gt;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softEquals</span><span class="op">(</span>funcName<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFuncName</span><span class="op">())</span></span><span id="cb4-14"><a href="#cb4-14" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&amp;&amp;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softIncludes</span><span class="op">(</span>funcDescription<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFuncDescription</span><span class="op">())</span></span><span id="cb4-15"><a href="#cb4-15" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&amp;&amp;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softIncludes</span><span class="op">(</span>funcFlow<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFuncFlow</span><span class="op">())</span></span><span id="cb4-16"><a href="#cb4-16" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&amp;&amp;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softIncludes</span><span class="op">(</span>funcRole<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFuncRole</span><span class="op">())</span></span><span id="cb4-17"><a href="#cb4-17" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&amp;&amp;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softEquals</span><span class="op">(</span>funcTool<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFuncTool</span><span class="op">())</span></span><span id="cb4-18"><a href="#cb4-18" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&amp;&amp;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softEquals</span><span class="op">(</span></span><span id="cb4-19"><a href="#cb4-19" aria-hidden="true" tabindex="-1"></a>                                    roomName<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFeatureRoom</span><span class="op">().</span><span class="fu">getRoomName</span><span class="op">())</span></span><span id="cb4-20"><a href="#cb4-20" aria-hidden="true" tabindex="-1"></a>                            <span class="op">&amp;&amp;</span> SearchJudgeHelper<span class="op">.</span><span class="fu">softEquals</span><span class="op">(</span>funcId<span class="op">,</span> feature<span class="op">.</span><span class="fu">getFuncId</span><span class="op">()))</span></span><span id="cb4-21"><a href="#cb4-21" aria-hidden="true" tabindex="-1"></a>                    <span class="op">.</span><span class="fu">collect</span><span class="op">(</span>Collectors<span class="op">.</span><span class="fu">toList</span><span class="op">()))));</span></span><span id="cb4-22"><a href="#cb4-22" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>res<span class="op">);</span></span><span id="cb4-23"><a href="#cb4-23" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>先说查询逻辑。为了少写 <code>SQL</code> 因而这里是直接调用了 JPA 的<code>findAll</code> 方法，随后利用 <code>Java</code>的流函数对其进行遍历筛选，由此得到目标结果以返回。判断相等或包含的方法由自建类进行处理，以满足空数值的比较操作，例如：</p><div class="sourceCode" id="cb5"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="dt">static</span> <span class="bu">Boolean</span> <span class="fu">softEquals</span><span class="op">(</span><span class="bu">String</span> toBeJudged<span class="op">,</span> <span class="bu">String</span> referencedValue<span class="op">)</span> <span class="op">{</span></span><span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">try</span> <span class="op">{</span></span><span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="op">(</span>Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>toBeJudged<span class="op">,</span> <span class="kw">null</span><span class="op">)</span> <span class="op">||</span> Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>toBeJudged<span class="op">,</span> <span class="st">&quot;&quot;</span><span class="op">))</span></span><span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a>                <span class="op">?</span> <span class="kw">true</span></span><span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a>                <span class="op">:</span> Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>referencedValue<span class="op">,</span> <span class="bu">URLDecoder</span><span class="op">.</span><span class="fu">decode</span><span class="op">(</span>toBeJudged<span class="op">,</span> Constants<span class="op">.</span><span class="fu">UTF8</span><span class="op">));</span></span><span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">catch</span> <span class="op">(</span><span class="bu">UnsupportedEncodingException</span> e<span class="op">)</span> <span class="op">{</span></span><span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> <span class="kw">false</span><span class="op">;</span></span><span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>小型项目中这样的写法大体上是没什么问题的，但如果遇上较大的项目这样的写法绝对会出很大的问题。一来，论谁都能看出的遍历查询的性能问题，在十万级别数据量下大概就能有很直观的感受了，这一工作本来应该在数据库中利用索引来优化解决。二来，大量的吞吐量给服务器带来了IO上巨大负担。其潜在的风险是难以估量的。</p><p>为了在满足需求的基础上尽可能简化开发上的工作量（即少写<code>SQL</code>与对应的函数），我目前的想法是利用正则表达式（例如MySQL中的<code>REGEXP</code>关键字）进行查询，由此将查询的相关工作返还给数据库。利用数据库内部的索引等机制对查询进行优化（MySQL内部索引的 B+树能带来数倍的性能），借此来消除服务器的负担。借由这一方法全字段搜索可以通过唯一的一条<code>SQL</code> 来实现，也符合尽量不写 <code>SQL</code> 的原则。</p><div class="sourceCode" id="cb6"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="co">// Dao 层</span></span><span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a><span class="at">@Query</span><span class="op">(</span>value <span class="op">=</span> <span class="st">&quot;SELECT f.* FROM Feature f WHERE (f.name REGEXP :funcNameRegExp) AND (f.description REGEXP :funcDescriptionRegExp)&quot;</span><span class="op">,</span> nativeQuery <span class="op">=</span> <span class="kw">true</span><span class="op">)</span></span><span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a><span class="bu">ArrayList</span><span class="op">&lt;</span>Feature<span class="op">&gt;</span> <span class="fu">findFeatureByRegExp</span><span class="op">(</span><span class="at">@Param</span><span class="op">(</span><span class="st">&quot;funcNameRegExp&quot;</span><span class="op">)</span> <span class="bu">String</span> funcNameRegExp<span class="op">,</span> <span class="at">@Param</span><span class="op">(</span><span class="st">&quot;funcDescriptionRegExp&quot;</span><span class="op">)</span> <span class="bu">String</span> funcDescriptionRegExp<span class="op">);</span></span><span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="co">// Service 层</span></span><span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">getFeature</span><span class="op">(</span></span><span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcName<span class="op">,</span></span><span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a>        <span class="bu">String</span> funcDescription<span class="op">)</span> <span class="op">{</span></span><span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a>    <span class="bu">String</span> funcNameRegExp <span class="op">=</span> funcName<span class="op">;</span></span><span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a>    <span class="bu">String</span> funcDescriptionRegExp <span class="op">=</span>  <span class="st">&quot;^&quot;</span> <span class="op">+</span> funcName <span class="op">+</span> <span class="st">&quot;$&quot;</span><span class="op">;</span></span><span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a>    JSONObject res <span class="op">=</span> <span class="kw">new</span> <span class="fu">JSONObject</span><span class="op">();</span></span><span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a>    res<span class="op">.</span><span class="fu">put</span><span class="op">(</span></span><span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a>            Constants<span class="op">.</span><span class="fu">featureList</span><span class="op">,</span></span><span id="cb6-14"><a href="#cb6-14" aria-hidden="true" tabindex="-1"></a>            JSONObject<span class="op">.</span><span class="fu">parseArray</span><span class="op">(</span>JSON<span class="op">.</span><span class="fu">toJSONString</span><span class="op">(</span>featureRepository<span class="op">.</span><span class="fu">findFeatureByRegExp</span><span class="op">(</span>funcNameRegExp<span class="op">,</span> funcDescriptionRegExp<span class="op">))));</span></span><span id="cb6-15"><a href="#cb6-15" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>res<span class="op">);</span></span><span id="cb6-16"><a href="#cb6-16" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>再说增删改。项目中这些功能的实现大体如下：</p><div class="sourceCode" id="cb7"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="co">// 增</span></span><span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">addExamine</span><span class="op">(</span><span class="bu">String</span> examineName<span class="op">,</span> <span class="dt">double</span> examinePrice<span class="op">,</span> <span class="bu">String</span> roomName<span class="op">)</span> <span class="op">{</span></span><span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>    <span class="bu">List</span><span class="op">&lt;</span>Examine<span class="op">&gt;</span> targetExamineList <span class="op">=</span> examineRepository<span class="op">.</span><span class="fu">findAll</span><span class="op">().</span><span class="fu">stream</span><span class="op">()</span></span><span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span><span class="fu">filter</span><span class="op">(</span>examine <span class="op">-&gt;</span> Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>examine<span class="op">.</span><span class="fu">getExamineName</span><span class="op">(),</span> examineName<span class="op">))</span></span><span id="cb7-5"><a href="#cb7-5" aria-hidden="true" tabindex="-1"></a>            <span class="op">.</span><span class="fu">collect</span><span class="op">(</span>Collectors<span class="op">.</span><span class="fu">toList</span><span class="op">());</span></span><span id="cb7-6"><a href="#cb7-6" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-7"><a href="#cb7-7" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>targetExamineList<span class="op">.</span><span class="fu">size</span><span class="op">(),</span> <span class="dv">0</span><span class="op">))</span> <span class="op">{</span></span><span id="cb7-8"><a href="#cb7-8" aria-hidden="true" tabindex="-1"></a>        Optional<span class="op">&lt;</span>Room<span class="op">&gt;</span> targetRoomOptional <span class="op">=</span> roomRepository<span class="op">.</span><span class="fu">findById</span><span class="op">(</span>roomName<span class="op">);</span></span><span id="cb7-9"><a href="#cb7-9" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-10"><a href="#cb7-10" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>targetRoomOptional<span class="op">.</span><span class="fu">isEmpty</span><span class="op">())</span> <span class="op">{</span></span><span id="cb7-11"><a href="#cb7-11" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb7-12"><a href="#cb7-12" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb7-13"><a href="#cb7-13" aria-hidden="true" tabindex="-1"></a>            Examine newExamine <span class="op">=</span> <span class="kw">new</span> <span class="fu">Examine</span><span class="op">();</span></span><span id="cb7-14"><a href="#cb7-14" aria-hidden="true" tabindex="-1"></a>            newExamine<span class="op">.</span><span class="fu">setExamineName</span><span class="op">(</span>examineName<span class="op">);</span></span><span id="cb7-15"><a href="#cb7-15" aria-hidden="true" tabindex="-1"></a>            newExamine<span class="op">.</span><span class="fu">setExaminePrice</span><span class="op">(</span>examinePrice<span class="op">);</span></span><span id="cb7-16"><a href="#cb7-16" aria-hidden="true" tabindex="-1"></a>            newExamine<span class="op">.</span><span class="fu">setExamineRoom</span><span class="op">(</span>targetRoomOptional<span class="op">.</span><span class="fu">get</span><span class="op">());</span></span><span id="cb7-17"><a href="#cb7-17" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-18"><a href="#cb7-18" aria-hidden="true" tabindex="-1"></a>            Examine addedExamine <span class="op">=</span> examineRepository<span class="op">.</span><span class="fu">saveAndFlush</span><span class="op">(</span>newExamine<span class="op">);</span></span><span id="cb7-19"><a href="#cb7-19" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-20"><a href="#cb7-20" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>addedExamine<span class="op">);</span></span><span id="cb7-21"><a href="#cb7-21" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb7-22"><a href="#cb7-22" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb7-23"><a href="#cb7-23" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb7-24"><a href="#cb7-24" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb7-25"><a href="#cb7-25" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span><span id="cb7-26"><a href="#cb7-26" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-27"><a href="#cb7-27" aria-hidden="true" tabindex="-1"></a><span class="co">// 改</span></span><span id="cb7-28"><a href="#cb7-28" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">updateExamine</span><span class="op">(</span><span class="dt">int</span> examineId<span class="op">,</span> <span class="bu">String</span> examineName<span class="op">,</span> <span class="dt">double</span> examinePrice<span class="op">,</span> <span class="bu">String</span> roomName<span class="op">)</span> <span class="op">{</span></span><span id="cb7-29"><a href="#cb7-29" aria-hidden="true" tabindex="-1"></a>    Optional<span class="op">&lt;</span>Examine<span class="op">&gt;</span> targetExamineOptional <span class="op">=</span> examineRepository<span class="op">.</span><span class="fu">findById</span><span class="op">(</span>examineId<span class="op">);</span></span><span id="cb7-30"><a href="#cb7-30" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-31"><a href="#cb7-31" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>targetExamineOptional<span class="op">.</span><span class="fu">isEmpty</span><span class="op">())</span> <span class="op">{</span></span><span id="cb7-32"><a href="#cb7-32" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb7-33"><a href="#cb7-33" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb7-34"><a href="#cb7-34" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-35"><a href="#cb7-35" aria-hidden="true" tabindex="-1"></a>        <span class="bu">List</span><span class="op">&lt;</span>Examine<span class="op">&gt;</span> targetExamineList <span class="op">=</span> examineRepository<span class="op">.</span><span class="fu">findAll</span><span class="op">().</span><span class="fu">stream</span><span class="op">()</span></span><span id="cb7-36"><a href="#cb7-36" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span><span class="fu">filter</span><span class="op">(</span>examine <span class="op">-&gt;</span> Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>examine<span class="op">.</span><span class="fu">getExamineName</span><span class="op">(),</span> examineName<span class="op">)</span></span><span id="cb7-37"><a href="#cb7-37" aria-hidden="true" tabindex="-1"></a>                        <span class="op">&amp;&amp;</span> <span class="op">!</span>Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>examine<span class="op">.</span><span class="fu">getExamineId</span><span class="op">(),</span> examineId<span class="op">))</span></span><span id="cb7-38"><a href="#cb7-38" aria-hidden="true" tabindex="-1"></a>                <span class="op">.</span><span class="fu">collect</span><span class="op">(</span>Collectors<span class="op">.</span><span class="fu">toList</span><span class="op">());</span></span><span id="cb7-39"><a href="#cb7-39" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-40"><a href="#cb7-40" aria-hidden="true" tabindex="-1"></a>        Optional<span class="op">&lt;</span>Room<span class="op">&gt;</span> targetRoomOptional <span class="op">=</span> roomRepository<span class="op">.</span><span class="fu">findById</span><span class="op">(</span>roomName<span class="op">);</span></span><span id="cb7-41"><a href="#cb7-41" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-42"><a href="#cb7-42" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>targetRoomOptional<span class="op">.</span><span class="fu">isEmpty</span><span class="op">()</span> <span class="op">||</span> <span class="op">!</span>Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>targetExamineList<span class="op">.</span><span class="fu">size</span><span class="op">(),</span> <span class="dv">0</span><span class="op">))</span> <span class="op">{</span></span><span id="cb7-43"><a href="#cb7-43" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb7-44"><a href="#cb7-44" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb7-45"><a href="#cb7-45" aria-hidden="true" tabindex="-1"></a>            Examine targetExamine <span class="op">=</span> targetExamineOptional<span class="op">.</span><span class="fu">get</span><span class="op">();</span></span><span id="cb7-46"><a href="#cb7-46" aria-hidden="true" tabindex="-1"></a>            targetExamine<span class="op">.</span><span class="fu">setExamineName</span><span class="op">(</span>examineName<span class="op">);</span></span><span id="cb7-47"><a href="#cb7-47" aria-hidden="true" tabindex="-1"></a>            targetExamine<span class="op">.</span><span class="fu">setExaminePrice</span><span class="op">(</span>examinePrice<span class="op">);</span></span><span id="cb7-48"><a href="#cb7-48" aria-hidden="true" tabindex="-1"></a>            targetExamine<span class="op">.</span><span class="fu">setExamineRoom</span><span class="op">(</span>targetRoomOptional<span class="op">.</span><span class="fu">get</span><span class="op">());</span></span><span id="cb7-49"><a href="#cb7-49" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-50"><a href="#cb7-50" aria-hidden="true" tabindex="-1"></a>            Examine updatedExamine <span class="op">=</span> examineRepository<span class="op">.</span><span class="fu">saveAndFlush</span><span class="op">(</span>targetExamine<span class="op">);</span></span><span id="cb7-51"><a href="#cb7-51" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-52"><a href="#cb7-52" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>updatedExamine<span class="op">);</span></span><span id="cb7-53"><a href="#cb7-53" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb7-54"><a href="#cb7-54" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb7-55"><a href="#cb7-55" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span><span id="cb7-56"><a href="#cb7-56" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-57"><a href="#cb7-57" aria-hidden="true" tabindex="-1"></a><span class="co">// 删</span></span><span id="cb7-58"><a href="#cb7-58" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">deleteExamine</span><span class="op">(</span><span class="dt">int</span> examineId<span class="op">)</span> <span class="op">{</span></span><span id="cb7-59"><a href="#cb7-59" aria-hidden="true" tabindex="-1"></a>    Optional<span class="op">&lt;</span>Examine<span class="op">&gt;</span> targetExamineOptional <span class="op">=</span> examineRepository<span class="op">.</span><span class="fu">findById</span><span class="op">(</span>examineId<span class="op">);</span></span><span id="cb7-60"><a href="#cb7-60" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-61"><a href="#cb7-61" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span>targetExamineOptional<span class="op">.</span><span class="fu">isEmpty</span><span class="op">())</span> <span class="op">{</span></span><span id="cb7-62"><a href="#cb7-62" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb7-63"><a href="#cb7-63" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb7-64"><a href="#cb7-64" aria-hidden="true" tabindex="-1"></a>        examineRepository<span class="op">.</span><span class="fu">deleteById</span><span class="op">(</span>examineId<span class="op">);</span></span><span id="cb7-65"><a href="#cb7-65" aria-hidden="true" tabindex="-1"></a></span><span id="cb7-66"><a href="#cb7-66" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="op">(</span>examineRepository<span class="op">.</span><span class="fu">findById</span><span class="op">(</span>examineId<span class="op">).</span><span class="fu">isEmpty</span><span class="op">())</span> <span class="op">{</span></span><span id="cb7-67"><a href="#cb7-67" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>targetExamineOptional<span class="op">.</span><span class="fu">get</span><span class="op">());</span></span><span id="cb7-68"><a href="#cb7-68" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb7-69"><a href="#cb7-69" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb7-70"><a href="#cb7-70" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb7-71"><a href="#cb7-71" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb7-72"><a href="#cb7-72" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>说实话每个表增删改查写一遍还是挺繁琐的，毕竟业务逻辑上太过类似了。基本上都是这样的逻辑：</p><ul><li>增：查询重复数据存在情况 <span class="math inline">→</span>查外键存在情况 <span class="math inline">→</span> 插入数据。</li><li>改：查自身数据存在情况 <span class="math inline">→</span>查询重复数据存在情况 <span class="math inline">→</span> 查外键存在情况<span class="math inline">→</span> 插入数据。</li><li>删：直接调用JPA的 <code>deleteById</code> 方法。</li></ul><p>这里的如果需要重构可以考虑利用 <ahref="#java-反射机制"><code>Java</code>反射机制</a>。事实上，项目末期时根据前端需求增加的根据数据Id查询功能就是利用这一机制写的。</p><div class="sourceCode" id="cb8"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="kw">class</span> GeneralService <span class="op">{</span></span><span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> RoomRepository roomRepository<span class="op">;</span></span><span id="cb8-4"><a href="#cb8-4" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-5"><a href="#cb8-5" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-6"><a href="#cb8-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> FeatureRepository featureRepository<span class="op">;</span></span><span id="cb8-7"><a href="#cb8-7" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-8"><a href="#cb8-8" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-9"><a href="#cb8-9" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> AdmissionRepository admissionRepository<span class="op">;</span></span><span id="cb8-10"><a href="#cb8-10" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-11"><a href="#cb8-11" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-12"><a href="#cb8-12" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> ArchiveRepository archiveRepository<span class="op">;</span></span><span id="cb8-13"><a href="#cb8-13" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-14"><a href="#cb8-14" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-15"><a href="#cb8-15" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> ChargeRepository chargeRepository<span class="op">;</span></span><span id="cb8-16"><a href="#cb8-16" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-17"><a href="#cb8-17" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-18"><a href="#cb8-18" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> ExamineRepository examineRepository<span class="op">;</span></span><span id="cb8-19"><a href="#cb8-19" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-20"><a href="#cb8-20" aria-hidden="true" tabindex="-1"></a>    <span class="at">@Autowired</span></span><span id="cb8-21"><a href="#cb8-21" aria-hidden="true" tabindex="-1"></a>    <span class="kw">private</span> MedicineRepository medicineRepository<span class="op">;</span></span><span id="cb8-22"><a href="#cb8-22" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-23"><a href="#cb8-23" aria-hidden="true" tabindex="-1"></a>    <span class="kw">public</span> JSONObject <span class="fu">getDataById</span><span class="op">(</span><span class="bu">String</span> tableName<span class="op">,</span> <span class="dt">int</span> id<span class="op">)</span> <span class="kw">throws</span> <span class="bu">Exception</span> <span class="op">{</span></span><span id="cb8-24"><a href="#cb8-24" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Class</span><span class="op">&lt;?&gt;</span> dataDaoClass <span class="op">=</span> <span class="bu">Class</span><span class="op">.</span><span class="fu">forName</span><span class="op">(</span></span><span id="cb8-25"><a href="#cb8-25" aria-hidden="true" tabindex="-1"></a>                Constants<span class="op">.</span><span class="fu">projectPackageName</span> <span class="op">+</span> <span class="st">&quot;.&quot;</span> <span class="op">+</span> Constants<span class="op">.</span><span class="fu">systemModulePackageName</span> <span class="op">+</span> <span class="st">&quot;.&quot;</span></span><span id="cb8-26"><a href="#cb8-26" aria-hidden="true" tabindex="-1"></a>                        <span class="op">+</span> Constants<span class="op">.</span><span class="fu">daoClassPackageName</span></span><span id="cb8-27"><a href="#cb8-27" aria-hidden="true" tabindex="-1"></a>                        <span class="op">+</span> <span class="st">&quot;.&quot;</span> <span class="op">+</span> tableName</span><span id="cb8-28"><a href="#cb8-28" aria-hidden="true" tabindex="-1"></a>                        <span class="op">+</span> Constants<span class="op">.</span><span class="fu">daoClassSuffix</span><span class="op">,</span></span><span id="cb8-29"><a href="#cb8-29" aria-hidden="true" tabindex="-1"></a>                <span class="kw">true</span><span class="op">,</span></span><span id="cb8-30"><a href="#cb8-30" aria-hidden="true" tabindex="-1"></a>                <span class="bu">Thread</span><span class="op">.</span><span class="fu">currentThread</span><span class="op">().</span><span class="fu">getContextClassLoader</span><span class="op">().</span><span class="fu">getParent</span><span class="op">());</span></span><span id="cb8-31"><a href="#cb8-31" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-32"><a href="#cb8-32" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Method</span> getByIdMethod <span class="op">=</span> <span class="kw">null</span><span class="op">;</span></span><span id="cb8-33"><a href="#cb8-33" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-34"><a href="#cb8-34" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span><span class="bu">Method</span> classMethods <span class="op">:</span> dataDaoClass<span class="op">.</span><span class="fu">getMethods</span><span class="op">())</span> <span class="op">{</span></span><span id="cb8-35"><a href="#cb8-35" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>classMethods<span class="op">.</span><span class="fu">getName</span><span class="op">(),</span> Constants<span class="op">.</span><span class="fu">findByIdMethodName</span><span class="op">))</span> <span class="op">{</span></span><span id="cb8-36"><a href="#cb8-36" aria-hidden="true" tabindex="-1"></a>                getByIdMethod <span class="op">=</span> classMethods<span class="op">;</span></span><span id="cb8-37"><a href="#cb8-37" aria-hidden="true" tabindex="-1"></a>            <span class="op">}</span></span><span id="cb8-38"><a href="#cb8-38" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb8-39"><a href="#cb8-39" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-40"><a href="#cb8-40" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span><span class="bu">Field</span> selfField <span class="op">:</span> <span class="kw">this</span><span class="op">.</span><span class="fu">getClass</span><span class="op">().</span><span class="fu">getDeclaredFields</span><span class="op">())</span> <span class="op">{</span></span><span id="cb8-41"><a href="#cb8-41" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> <span class="op">(</span>Objects<span class="op">.</span><span class="fu">equals</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">getType</span><span class="op">().</span><span class="fu">getName</span><span class="op">(),</span> dataDaoClass<span class="op">.</span><span class="fu">getName</span><span class="op">()))</span> <span class="op">{</span></span><span id="cb8-42"><a href="#cb8-42" aria-hidden="true" tabindex="-1"></a>                Optional<span class="op">&lt;?&gt;</span> getIdRes <span class="op">=</span> <span class="op">(</span>Optional<span class="op">&lt;?&gt;)</span> getByIdMethod<span class="op">.</span><span class="fu">invoke</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="kw">this</span><span class="op">),</span> id<span class="op">);</span></span><span id="cb8-43"><a href="#cb8-43" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-44"><a href="#cb8-44" aria-hidden="true" tabindex="-1"></a>                <span class="cf">if</span> <span class="op">(</span>getIdRes<span class="op">.</span><span class="fu">isEmpty</span><span class="op">())</span> <span class="op">{</span></span><span id="cb8-45"><a href="#cb8-45" aria-hidden="true" tabindex="-1"></a>                    <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb8-46"><a href="#cb8-46" aria-hidden="true" tabindex="-1"></a>                <span class="op">}</span> <span class="cf">else</span> <span class="op">{</span></span><span id="cb8-47"><a href="#cb8-47" aria-hidden="true" tabindex="-1"></a>                    <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>getIdRes<span class="op">.</span><span class="fu">get</span><span class="op">());</span></span><span id="cb8-48"><a href="#cb8-48" aria-hidden="true" tabindex="-1"></a>                <span class="op">}</span></span><span id="cb8-49"><a href="#cb8-49" aria-hidden="true" tabindex="-1"></a>            <span class="op">}</span></span><span id="cb8-50"><a href="#cb8-50" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb8-51"><a href="#cb8-51" aria-hidden="true" tabindex="-1"></a></span><span id="cb8-52"><a href="#cb8-52" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">);</span></span><span id="cb8-53"><a href="#cb8-53" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb8-54"><a href="#cb8-54" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>事实上，删除功能可以直接套用这一写法。当然，在上面的<code>getDataById</code> 方法中查找 <code>Method</code> 与<code>Field</code> 的逻辑也可以进一步进行优化：</p><div class="sourceCode" id="cb9"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> <span class="bu">Class</span><span class="op">&lt;</span>JPARepository<span class="op">&gt;</span> <span class="fu">getDataDaoClassByTableName</span> <span class="op">(</span><span class="bu">String</span> tableName<span class="op">)</span> <span class="kw">throws</span> <span class="bu">Exception</span> <span class="op">{</span></span><span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="bu">Class</span><span class="op">.</span><span class="fu">forName</span><span class="op">(</span></span><span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>            Constants<span class="op">.</span><span class="fu">projectPackageName</span> <span class="op">+</span> <span class="st">&quot;.&quot;</span> <span class="op">+</span> Constants<span class="op">.</span><span class="fu">systemModulePackageName</span> <span class="op">+</span> <span class="st">&quot;.&quot;</span></span><span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>                    <span class="op">+</span> Constants<span class="op">.</span><span class="fu">daoClassPackageName</span></span><span id="cb9-5"><a href="#cb9-5" aria-hidden="true" tabindex="-1"></a>                    <span class="op">+</span> <span class="st">&quot;.&quot;</span> <span class="op">+</span> tableName</span><span id="cb9-6"><a href="#cb9-6" aria-hidden="true" tabindex="-1"></a>                    <span class="op">+</span> Constants<span class="op">.</span><span class="fu">daoClassSuffix</span><span class="op">,</span></span><span id="cb9-7"><a href="#cb9-7" aria-hidden="true" tabindex="-1"></a>            <span class="kw">true</span><span class="op">,</span></span><span id="cb9-8"><a href="#cb9-8" aria-hidden="true" tabindex="-1"></a>            <span class="bu">Thread</span><span class="op">.</span><span class="fu">currentThread</span><span class="op">().</span><span class="fu">getContextClassLoader</span><span class="op">().</span><span class="fu">getParent</span><span class="op">());</span></span><span id="cb9-9"><a href="#cb9-9" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span><span id="cb9-10"><a href="#cb9-10" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-11"><a href="#cb9-11" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">getDataById</span><span class="op">(</span><span class="bu">String</span> tableName<span class="op">,</span> <span class="dt">int</span> id<span class="op">)</span> <span class="kw">throws</span> <span class="bu">Exception</span> <span class="op">{</span></span><span id="cb9-12"><a href="#cb9-12" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Class</span><span class="op">&lt;?&gt;</span> dataDaoClass <span class="op">=</span> <span class="kw">this</span><span class="op">.</span><span class="fu">getDataDaoClassByTableName</span><span class="op">(</span>tableName<span class="op">);</span></span><span id="cb9-13"><a href="#cb9-13" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Method</span> getByIdMethod <span class="op">=</span> dataDaoClass<span class="op">.</span><span class="fu">getMethod</span><span class="op">(</span>Constants<span class="op">.</span><span class="fu">findByIdMethodName</span><span class="op">,</span> <span class="bu">Integer</span><span class="op">.</span><span class="fu">class</span><span class="op">);</span></span><span id="cb9-14"><a href="#cb9-14" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Field</span> selfField <span class="op">=</span> <span class="kw">this</span><span class="op">.</span><span class="fu">getClass</span><span class="op">().</span><span class="fu">getDeclaredField</span><span class="op">(</span>tableName<span class="op">.</span><span class="fu">toFirstCharLowerCase</span><span class="op">());</span></span><span id="cb9-15"><a href="#cb9-15" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-16"><a href="#cb9-16" aria-hidden="true" tabindex="-1"></a>    Optional<span class="op">&lt;?&gt;</span> getIdRes <span class="op">=</span> <span class="op">(</span>Optional<span class="op">&lt;?&gt;)</span> getByIdMethod<span class="op">.</span><span class="fu">invoke</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="kw">this</span><span class="op">),</span> id<span class="op">);</span></span><span id="cb9-17"><a href="#cb9-17" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-18"><a href="#cb9-18" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> getIdRes<span class="op">.</span><span class="fu">isEmpty</span><span class="op">()</span> <span class="op">?</span> ResponseHelper<span class="op">.</span><span class="fu">constructFailedResponse</span><span class="op">(</span>ResponseHelper<span class="op">.</span><span class="fu">requestErrorCode</span><span class="op">)</span> <span class="op">:</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>getIdRes<span class="op">.</span><span class="fu">get</span><span class="op">());</span></span><span id="cb9-19"><a href="#cb9-19" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span><span id="cb9-20"><a href="#cb9-20" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-21"><a href="#cb9-21" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">deleteDataById</span><span class="op">(</span><span class="bu">String</span> tableName<span class="op">,</span> <span class="dt">int</span> id<span class="op">)</span> <span class="kw">throws</span> <span class="bu">Exception</span> <span class="op">{</span></span><span id="cb9-22"><a href="#cb9-22" aria-hidden="true" tabindex="-1"></a>    JSONObject getDataByIdRes <span class="op">=</span> <span class="kw">this</span><span class="op">.</span><span class="fu">getDataById</span><span class="op">(</span>tableName<span class="op">,</span> id<span class="op">);</span></span><span id="cb9-23"><a href="#cb9-23" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-24"><a href="#cb9-24" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 表内查询无数据</span></span><span id="cb9-25"><a href="#cb9-25" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span><span class="bu">Object</span><span class="op">.</span><span class="fu">equals</span><span class="op">(</span>getDataByIdRes<span class="op">.</span><span class="fu">data</span><span class="op">,</span> <span class="kw">null</span><span class="op">))</span> <span class="op">{</span></span><span id="cb9-26"><a href="#cb9-26" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> getDataByIdRes<span class="op">;</span></span><span id="cb9-27"><a href="#cb9-27" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb9-28"><a href="#cb9-28" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-29"><a href="#cb9-29" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Class</span><span class="op">&lt;?&gt;</span> dataDaoClass <span class="op">=</span> <span class="kw">this</span><span class="op">.</span><span class="fu">getDataDaoClassByTableName</span><span class="op">(</span>tableName<span class="op">);</span></span><span id="cb9-30"><a href="#cb9-30" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Method</span> deleteByIdMethod <span class="op">=</span> dataDaoClass<span class="op">.</span><span class="fu">getMethod</span><span class="op">(</span>Constants<span class="op">.</span><span class="fu">deleteByIdMethodName</span><span class="op">,</span> <span class="bu">Integer</span><span class="op">.</span><span class="fu">class</span><span class="op">);</span></span><span id="cb9-31"><a href="#cb9-31" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Field</span> selfField <span class="op">=</span> <span class="kw">this</span><span class="op">.</span><span class="fu">getClass</span><span class="op">().</span><span class="fu">getDeclaredField</span><span class="op">(</span>tableName<span class="op">.</span><span class="fu">toFirstCharLowerCase</span><span class="op">());</span></span><span id="cb9-32"><a href="#cb9-32" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-33"><a href="#cb9-33" aria-hidden="true" tabindex="-1"></a>    deleteByIdMethod<span class="op">.</span><span class="fu">invoke</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="kw">this</span><span class="op">),</span> id<span class="op">);</span></span><span id="cb9-34"><a href="#cb9-34" aria-hidden="true" tabindex="-1"></a></span><span id="cb9-35"><a href="#cb9-35" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> ResponseHelper<span class="op">.</span><span class="fu">constructSuccessResponse</span><span class="op">(</span>getDataByIdRes<span class="op">.</span><span class="fu">get</span><span class="op">());</span></span><span id="cb9-36"><a href="#cb9-36" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>为了进一步简化开发工作量与代码逻辑，可以考虑先创建公共类：<code>BaseEntity</code>与 <code>BaseRepository</code>，使得实体类继承前者，对应的<code>dao</code> 类继承后者。</p><p>对于增改功能而言，业务逻辑中唯二的区别在于判断重复条件与判断外键存在逻辑这两项。可以考虑抽象成统一的公共方法，通过接收可变个数个参数构成的List来进行判断。更具体的，其可能是下面的实现形式：</p><div class="sourceCode" id="cb10"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb10-1"><a href="#cb10-1" aria-hidden="true" tabindex="-1"></a><span class="kw">public</span> JSONObject <span class="fu">updateDataById</span><span class="op">(</span></span><span id="cb10-2"><a href="#cb10-2" aria-hidden="true" tabindex="-1"></a>    <span class="bu">String</span> tableName<span class="op">,</span> </span><span id="cb10-3"><a href="#cb10-3" aria-hidden="true" tabindex="-1"></a>    <span class="dt">int</span> id<span class="op">,</span> </span><span id="cb10-4"><a href="#cb10-4" aria-hidden="true" tabindex="-1"></a>    <span class="bu">ArrayList</span><span class="op">&lt;</span><span class="bu">String</span><span class="op">&gt;</span> duplicateConditionFields<span class="op">,</span> </span><span id="cb10-5"><a href="#cb10-5" aria-hidden="true" tabindex="-1"></a>    <span class="bu">ArrayList</span><span class="op">&lt;</span><span class="bu">String</span><span class="op">&gt;</span> foreignKeys<span class="op">,</span></span><span id="cb10-6"><a href="#cb10-6" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Map</span><span class="op">&lt;</span><span class="bu">String</span><span class="op">,</span> <span class="bu">String</span><span class="op">&gt;</span> newValues</span><span id="cb10-7"><a href="#cb10-7" aria-hidden="true" tabindex="-1"></a><span class="op">)</span> <span class="op">{</span></span><span id="cb10-8"><a href="#cb10-8" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Class</span><span class="op">&lt;?&gt;</span> dataEntityClass <span class="op">=</span> <span class="kw">...</span><span class="op">;</span> <span class="co">// 查找对应的 Entity 层类</span></span><span id="cb10-9"><a href="#cb10-9" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Class</span><span class="op">&lt;?&gt;</span> dataDaoClass <span class="op">=</span> <span class="kw">...</span><span class="op">;</span> <span class="co">// 查找对应的 Dao 层类</span></span><span id="cb10-10"><a href="#cb10-10" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Method</span> updateByIdMethod <span class="op">=</span> dataDaoClass<span class="op">.</span><span class="fu">getMethod</span><span class="op">(</span><span class="st">&quot;saveAndFlush&quot;</span><span class="op">);</span> <span class="co">// 查找保存数据的方法</span></span><span id="cb10-11"><a href="#cb10-11" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Method</span> findAllMethod <span class="op">=</span> dataDaoClass<span class="op">.</span><span class="fu">getMethod</span><span class="op">(</span><span class="st">&quot;findAll&quot;</span><span class="op">);</span> </span><span id="cb10-12"><a href="#cb10-12" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Field</span> selfField <span class="op">=</span> <span class="kw">...</span><span class="op">;</span> <span class="co">// 找到自身类中对应的 field</span></span><span id="cb10-13"><a href="#cb10-13" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-14"><a href="#cb10-14" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Object</span> targetData <span class="op">=</span> dataEntityClass<span class="op">.</span><span class="fu">getConstructor</span><span class="op">().</span><span class="fu">newInstance</span><span class="op">();</span> <span class="co">//获取要更新数据</span></span><span id="cb10-15"><a href="#cb10-15" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-16"><a href="#cb10-16" aria-hidden="true" tabindex="-1"></a>    <span class="bu">Boolean</span> isForeignKeyExist <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb10-17"><a href="#cb10-17" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-18"><a href="#cb10-18" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 如果满足重复条件或外键不存在则直接返回，这里可以进一步优化</span></span><span id="cb10-19"><a href="#cb10-19" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span><span class="op">(</span>foreignKey <span class="op">:</span> foreignKeys<span class="op">)</span> <span class="op">{</span></span><span id="cb10-20"><a href="#cb10-20" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Class</span><span class="op">&lt;?&gt;</span> foreignKeyDaoClass <span class="op">=</span> <span class="bu">Class</span><span class="op">.</span><span class="fu">forName</span><span class="op">(</span>targetData<span class="op">.</span><span class="fu">getDeclaredField</span><span class="op">(</span>foreignKey<span class="op">).</span><span class="fu">getType</span><span class="op">().</span><span class="fu">getName</span><span class="op">()</span> <span class="op">+</span> <span class="kw">...</span><span class="op">);</span> <span class="co">//找到外键对应 Dao 层类</span></span><span id="cb10-21"><a href="#cb10-21" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Method</span> findByIdMethod <span class="op">=</span> foreignKeyDaoClass<span class="op">.</span><span class="fu">getMethod</span><span class="op">(</span><span class="st">&quot;findById&quot;</span><span class="op">);</span> </span><span id="cb10-22"><a href="#cb10-22" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Field</span> selfField <span class="op">=</span> <span class="kw">...</span><span class="op">;</span> <span class="co">// 找到自身类中对应的 field</span></span><span id="cb10-23"><a href="#cb10-23" aria-hidden="true" tabindex="-1"></a>        Optional<span class="op">&lt;?&gt;</span> getIdRes <span class="op">=</span> <span class="op">(</span>Optional<span class="op">&lt;?&gt;)</span> findByIdMethod<span class="op">.</span><span class="fu">invoke</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="kw">this</span><span class="op">),</span> <span class="bu">Integer</span><span class="op">.</span><span class="fu">parseInt</span><span class="op">(</span>newValues<span class="op">.</span><span class="fu">get</span><span class="op">(</span>foreignKey<span class="op">).</span><span class="fu">getId</span><span class="op">()));</span></span><span id="cb10-24"><a href="#cb10-24" aria-hidden="true" tabindex="-1"></a>        isForeignKeyExist <span class="op">&amp;=</span> <span class="op">!</span>getIdRes<span class="op">.</span><span class="fu">isEmpty</span><span class="op">();</span></span><span id="cb10-25"><a href="#cb10-25" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb10-26"><a href="#cb10-26" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-27"><a href="#cb10-27" aria-hidden="true" tabindex="-1"></a>    <span class="bu">List</span><span class="op">&lt;?&gt;</span> getAllRes <span class="op">=</span> <span class="op">(</span><span class="bu">List</span><span class="op">&lt;?&gt;)</span> findAllMethod<span class="op">.</span><span class="fu">invoke</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="kw">this</span><span class="op">));</span></span><span id="cb10-28"><a href="#cb10-28" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-29"><a href="#cb10-29" aria-hidden="true" tabindex="-1"></a>    <span class="cf">if</span> <span class="op">(</span><span class="bu">Object</span><span class="op">.</span><span class="fu">equals</span><span class="op">(</span>getAllRes<span class="op">.</span><span class="fu">findAll</span><span class="op">().</span><span class="fu">stream</span><span class="op">().</span><span class="fu">filter</span><span class="op">(</span>data <span class="op">-&gt;</span> <span class="op">{</span></span><span id="cb10-30"><a href="#cb10-30" aria-hidden="true" tabindex="-1"></a>        <span class="bu">Boolean</span> isExist <span class="op">=</span> <span class="kw">true</span><span class="op">;</span></span><span id="cb10-31"><a href="#cb10-31" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> <span class="op">(</span>duplicateConditionField <span class="op">:</span> duplicateConditionFields<span class="op">)</span> <span class="op">{</span></span><span id="cb10-32"><a href="#cb10-32" aria-hidden="true" tabindex="-1"></a>            isExist <span class="op">&amp;=</span> <span class="bu">Object</span><span class="op">.</span><span class="fu">equals</span><span class="op">(</span></span><span id="cb10-33"><a href="#cb10-33" aria-hidden="true" tabindex="-1"></a>                data<span class="op">.</span><span class="fu">getDeclaredField</span><span class="op">(</span>duplicateConditionField<span class="op">).</span><span class="fu">get</span><span class="op">(</span>data<span class="op">),</span> </span><span id="cb10-34"><a href="#cb10-34" aria-hidden="true" tabindex="-1"></a>                targetData<span class="op">.</span><span class="fu">getDeclaredField</span><span class="op">(</span>duplicateConditionField<span class="op">).</span><span class="fu">get</span><span class="op">(</span>targetData<span class="op">)</span></span><span id="cb10-35"><a href="#cb10-35" aria-hidden="true" tabindex="-1"></a>            <span class="op">);</span></span><span id="cb10-36"><a href="#cb10-36" aria-hidden="true" tabindex="-1"></a>        <span class="op">}</span></span><span id="cb10-37"><a href="#cb10-37" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> isExist<span class="op">;</span></span><span id="cb10-38"><a href="#cb10-38" aria-hidden="true" tabindex="-1"></a>    <span class="op">}).</span><span class="fu">collect</span><span class="op">(</span>Collectors<span class="op">.</span><span class="fu">toList</span><span class="op">()).</span><span class="fu">size</span><span class="op">(),</span> <span class="dv">0</span><span class="op">)</span> <span class="op">||</span> <span class="op">!</span>isForeignKeyExist<span class="op">)</span> <span class="op">{</span></span><span id="cb10-39"><a href="#cb10-39" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span><span class="op">;</span></span><span id="cb10-40"><a href="#cb10-40" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb10-41"><a href="#cb10-41" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-42"><a href="#cb10-42" aria-hidden="true" tabindex="-1"></a>    <span class="co">// 不满足重复条件且外键都存在时，进行数据更新</span></span><span id="cb10-43"><a href="#cb10-43" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> <span class="op">(</span>field <span class="op">:</span> targetData<span class="op">.</span><span class="fu">getDeclaredFields</span><span class="op">())</span> <span class="op">{</span></span><span id="cb10-44"><a href="#cb10-44" aria-hidden="true" tabindex="-1"></a>        field<span class="op">.</span><span class="fu">set</span><span class="op">(</span>targetData<span class="op">,</span> newValues<span class="op">.</span><span class="fu">get</span><span class="op">(</span>field<span class="op">.</span><span class="fu">getName</span><span class="op">()).</span><span class="fu">toTargetType</span><span class="op">());</span></span><span id="cb10-45"><a href="#cb10-45" aria-hidden="true" tabindex="-1"></a>    <span class="op">}</span></span><span id="cb10-46"><a href="#cb10-46" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-47"><a href="#cb10-47" aria-hidden="true" tabindex="-1"></a>    updateByIdMethod<span class="op">.</span><span class="fu">invoke</span><span class="op">(</span>selfField<span class="op">.</span><span class="fu">get</span><span class="op">(</span><span class="kw">this</span><span class="op">),</span> targetData<span class="op">);</span></span><span id="cb10-48"><a href="#cb10-48" aria-hidden="true" tabindex="-1"></a></span><span id="cb10-49"><a href="#cb10-49" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> <span class="kw">...</span><span class="op">;</span> <span class="co">// 返回值</span></span><span id="cb10-50"><a href="#cb10-50" aria-hidden="true" tabindex="-1"></a><span class="op">}</span></span></code></pre></div><p>考虑到增改功能逻辑也比较类似，因而增加功能的伪代码不再再次列出。</p><p>借此，大量类似的代码也可以被大幅省略，从而大幅减少工作量，同时也减少了冗余代码。</p><p>当然，这里也可以考虑使用拼接 <code>SQL</code>的方法。不过考虑到后端开发上应该尽可能不写或少写原生的<code>SQL</code>，因而这一种写法更符合规范些。</p><p>通过利用上述的写法，项目中的代码可以精简许多，由此也可以使得所需要的测试代码大幅减少，从而使得项目整体的工作量大量降低。事实上，正是由于当前项目中有大量逻辑比较类似的代码，导致为满足覆盖率所需的测试代码非常庞大，从而难以完成自动化测试代码的编写。</p><p>除此之外，一些类内的方法也可以作出一些更改。考虑到方法链的写法更加符合直觉，且也在一定程度上能提升开发效率并使代码更加简洁（尽管在一定程度上破坏了<code>.</code> 运算符的原有语义，且也不是很符合 <ahref="#CQRS">CQRS</a>），因而我个人更倾向于尽可能使用方法链的写法。</p><h3 id="前端">前端</h3><p>我个人而言也作为开发人员参与到了前端组的开发中。事实上最大的优化点在于接口调用的时机。当前，前端组在页面渲染时会请求一次后端接口，获取全部数据并渲染到页面上。之后，在进行关键词查找、数据插入、数据删除时各自会调用一次接口。至此为止都是比较合理的，当数据量庞大时前端不应该负责数据的查找工作，利用在服务器侧进行过优化的查询接口比较合理。然而，前端在进行数据编辑时，则是采用下面的流程：</p><pre class="mermaid"><code>flowchart TD    A[页面选中数据] --&gt; B[获取数据id]    B --&gt; C[根据id再次调用后端接口获取全部数据]    C --&gt; D[根据后端返回渲染页面]    D --&gt; E[用户输入完成后再次调取后端更新数据接口]</code></pre><p>由于在包含全部数据的页面进行初期渲染时每条数据的全部内容前端都已经获取到，因而选中数据进入编辑页面时完全可以直接利用前端已经拿到的数据进行渲染，不需要再次调用后端端口。且不谈在网络延迟较高的情况下，上面的做法会使得用户体验较差，在服务器有大量请求的情况下，前端冗余的调用会加重服务器的负担，从而影响性能。</p><p>另一方面我也注意到，前端由于没有将方法应用到了页面渲染的各个阶段，从而导致了某些请求会被重复多次执行，这也是影响性能的一大问题。当然，最好的解决方法应是前后端都做一下防抖处理。</p><h2 id="一些其他">一些其他</h2><p>开发上的问题大体如上，基本上都是后续项目中值得进行进一步更改的地方。除此以外，整个项目的生命周期中最最值得被后续继承的地方在于严格的PR-Code Review制度与文档的维护。其中前者保证了代码的质量与规范，后者则提高了有效沟通的效率。这两者才是在开发过程中降低工作量与各类成本的最关键因素。</p><h2 id="名词释义">名词释义</h2><h3 id="rad">RAD</h3><p>快速应用开发模型（Rapid Application Development），又称 V模型。似乎是为了改进瀑布式模型而在上世纪 70 至 80年代提出的。这一模型大体上遵循下图的几个阶段：</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ITtech/_media/SoftwareInsights-20230428/RAD-model.webp" alt="RAD" /><figcaption aria-hidden="true">RAD</figcaption></figure><h3 id="微服务">微服务</h3><p>SOA（面向服务架构）的一种变体，提倡将单一应用程序划分为松耦合的服务组，每个服务可独立部署。其概念最早于2005 年提出。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ITtech/_media/SoftwareInsights-20230428/microservice.png"alt="SOA" /><figcaption aria-hidden="true">SOA</figcaption></figure><h3 id="微前端">微前端</h3><p>2016年被正式提出，是微服务这一概念被扩展到前端的一种应用形式，便于新老项目的共存与过渡，以及项目独立开发等。</p><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/archive/ITtech/_media/SoftwareInsights-20230428/mircro-frontend.png"alt="微前端" /><figcaption aria-hidden="true">微前端</figcaption></figure><h3 id="java-反射机制"><code>Java</code> 反射机制</h3><p><code>Java</code>先编译后运行，对象类型在编译期确定。在程序运行时类被动态加载，当类没被用到时没有被加载到JVM，因而利用反射，可以在运行时获得类的各种内容。通过利用反射，可以动态地创建对象，更加灵活，但是会消耗系统资源。</p><h3 id="cqrs">CQRS</h3><p>Command Query ResponsibilitySegregation，即命令查询职责分离模式，要求一个方法更改对象的状态或返回一个结果，但是不能同时包含这两个行为。从某种角度来说算是继承了从前将系统交互视为CRUD 的思想。相较之下，方法链（MethodChaining）语法中由于对象被引用一次即可被多次调用，从某种意义上违反了这一原则。</p><p>更具体的，符合 CQRS 与 <code>.</code>运算符原有语义（<code>调用者.操作名</code>）的写法形如下面的形式：</p><div class="sourceCode" id="cb12"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb12-1"><a href="#cb12-1" aria-hidden="true" tabindex="-1"></a>Person p <span class="op">=</span> <span class="kw">new</span> <span class="fu">Person</span><span class="op">();</span></span><span id="cb12-2"><a href="#cb12-2" aria-hidden="true" tabindex="-1"></a>p<span class="op">.</span><span class="fu">getWater</span><span class="op">();</span></span><span id="cb12-3"><a href="#cb12-3" aria-hidden="true" tabindex="-1"></a>p<span class="op">.</span><span class="fu">drinkWater</span><span class="op">();</span></span><span id="cb12-4"><a href="#cb12-4" aria-hidden="true" tabindex="-1"></a>p<span class="op">.</span><span class="fu">getThirsty</span><span class="op">();</span></span></code></pre></div><p>而方法链则形如下面的形式：</p><div class="sourceCode" id="cb13"><preclass="sourceCode java"><code class="sourceCode java"><span id="cb13-1"><a href="#cb13-1" aria-hidden="true" tabindex="-1"></a><span class="kw">new</span> <span class="fu">Person</span><span class="op">().</span><span class="fu">getWater</span><span class="op">().</span><span class="fu">drinkWater</span><span class="op">().</span><span class="fu">getThirsty</span><span class="op">();</span></span></code></pre></div><p>这种写法更符合直觉，同时可以节省临时变量、简化代码。</p><h2 id="参考资料">参考资料</h2><ol type="1"><li>When I should use one to one relationship? (2012, September 7).Stack Overflow.https://stackoverflow.com/questions/12318870/when-i-should-use-one-to-one-relationship</li><li>search using regex in JPA. (2020, June 15). Stack Overflow.https://stackoverflow.com/questions/62379559/search-using-regex-in-jpa</li><li>Using Java Reflection. (n.d.). Using Java Reflection.https://www.oracle.com/technical-resources/articles/java/javareflection.html</li><li>Rapid application development - Wikipedia. (2014, July 2). RapidApplication Development - Wikipedia.https://en.wikipedia.org/wiki/Rapid_application_development</li><li>Jackson, C. (2019, June 19). Micro Frontends. martinfowler.com.https://martinfowler.com/articles/micro-frontends.html</li><li>M. (n.d.). CQRS pattern - Azure Architecture Center. CQRS Pattern -Azure Architecture Center | Microsoft Learn.https://learn.microsoft.com/en-us/azure/architecture/patterns/cqrs</li><li>Method chaining - why is it a good practice, or not? (2009, July 9).Stack Overflow.https://stackoverflow.com/questions/1103985/method-chaining-why-is-it-a-good-practice-or-not</li></ol>]]></content>
    <pubDate>Fri, 26 Jul 2024 16:48:56 +0800</pubDate>
  </entry>
   
  <entry>
    <title><![CDATA[随记：双反 甲辰年七月二十四日]]></title>
    <link>https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Notes-20240724</link>
    <guid isPermaLink="false">https://pikapikapikaori.github.io/pikapikapi-blog/#/writings/Notes-20240724</guid>
    <content type="html"><![CDATA[<h1 id="随记双反-甲辰年七月二十四日">随记：双反 甲辰年七月二十四日</h1><figure><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240724/cover-picture.jpg" alt="封面图" /><figcaption aria-hidden="true">封面图</figcaption></figure><blockquote><p>本文首发于个人博客<br />发表日期：2024.07.24<br />最后编辑于：{docsify-last-updated}</p></blockquote><p>甲辰年七月二十四日，申城。</p><p>Mamiya C330 105/3.5 DS.</p><section class="multi-images-container-section"><p><img src="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240724/picture-1.jpg" alt="双反" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240724/picture-2.jpg" alt="双反" /> <imgsrc="https://pikapikapikaori.github.io/pikapikapi-blog/writings/_media/Notes-20240724/picture-3.jpg" alt="双反" /></p></section>]]></content>
    <pubDate>Wed, 24 Jul 2024 01:29:07 +0800</pubDate>
  </entry>
  
</channel>
</rss>
